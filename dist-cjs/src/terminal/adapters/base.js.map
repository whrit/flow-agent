{"version":3,"sources":["../../../../src/terminal/adapters/base.ts"],"sourcesContent":["/**\n * Base terminal adapter interface\n */\n\nexport interface Terminal {\n  id: string;\n  pid?: number;\n  executeCommand(command: string): Promise<string>;\n  write(data: string): Promise<void>;\n  read(): Promise<string>;\n  isAlive(): boolean;\n  kill(): Promise<void>;\n  addOutputListener?(listener: (data: string) => void): void;\n  removeOutputListener?(listener: (data: string) => void): void;\n}\n\nexport interface ITerminalAdapter {\n  initialize(): Promise<void>;\n  shutdown(): Promise<void>;\n  createTerminal(): Promise<Terminal>;\n  destroyTerminal(terminal: Terminal): Promise<void>;\n}\n\nexport interface TerminalEvents {\n  'terminal:created': { terminalId: string; pid?: number };\n  'terminal:closed': { terminalId: string; code?: number; signal?: string };\n  'terminal:error': { terminalId: string; error: Error };\n  'terminal:output': { terminalId: string; data: string };\n}\n"],"names":[],"mappings":"AAuBA,WAKC"}