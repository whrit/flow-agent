{"version":3,"sources":["../../../src/migration/types.ts"],"sourcesContent":["/**\n * Migration type definitions\n */\n\nexport type MigrationStrategy = 'full' | 'selective' | 'merge';\n\nexport interface MigrationOptions {\n  projectPath: string;\n  strategy: MigrationStrategy;\n  backupDir?: string;\n  force?: boolean;\n  dryRun?: boolean;\n  preserveCustom?: boolean;\n  skipValidation?: boolean;\n}\n\nexport interface MigrationAnalysis {\n  projectPath: string;\n  hasClaudeFolder: boolean;\n  hasOptimizedPrompts: boolean;\n  customCommands: string[];\n  customConfigurations: Record<string, any>;\n  conflictingFiles: string[];\n  migrationRisks: MigrationRisk[];\n  recommendations: string[];\n  timestamp: Date;\n}\n\nexport interface MigrationRisk {\n  level: 'low' | 'medium' | 'high';\n  description: string;\n  file?: string;\n  mitigation?: string;\n}\n\nexport interface MigrationBackup {\n  timestamp: Date;\n  version: string;\n  files: BackupFile[];\n  metadata: Record<string, any>;\n}\n\nexport interface BackupFile {\n  path: string;\n  content: string;\n  checksum: string;\n  permissions?: string;\n}\n\nexport interface MigrationResult {\n  success: boolean;\n  filesModified: string[];\n  filesCreated: string[];\n  filesBackedUp: string[];\n  errors: MigrationError[];\n  warnings: string[];\n  rollbackPath?: string;\n}\n\nexport interface MigrationError {\n  file?: string;\n  error: string;\n  stack?: string;\n}\n\nexport interface ValidationResult {\n  valid: boolean;\n  checks: ValidationCheck[];\n  errors: string[];\n  warnings: string[];\n}\n\nexport interface ValidationCheck {\n  name: string;\n  passed: boolean;\n  message?: string;\n  details?: any;\n}\n\nexport interface MigrationManifest {\n  version: string;\n  files: {\n    commands: Record<string, CommandMigration>;\n    configurations: Record<string, ConfigMigration>;\n    templates: Record<string, TemplateMigration>;\n  };\n  dependencies?: string[];\n}\n\nexport interface CommandMigration {\n  source: string;\n  target: string;\n  transform?: 'copy' | 'merge' | 'replace';\n  priority?: number;\n}\n\nexport interface ConfigMigration {\n  source: string;\n  target: string;\n  merge?: boolean;\n  transform?: (config: any) => any;\n}\n\nexport interface TemplateMigration {\n  source: string;\n  target: string;\n  variables?: Record<string, string>;\n}\n\nexport interface MigrationProgress {\n  total: number;\n  completed: number;\n  current: string;\n  phase: 'analyzing' | 'backing-up' | 'migrating' | 'validating' | 'complete';\n  errors: number;\n  warnings: number;\n}\n"],"names":[],"mappings":"AA6GA,WAOC"}