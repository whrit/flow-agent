{"version":3,"sources":["../../../../src/templates/claude-optimized/install-template.js"],"sourcesContent":["#!/usr/bin/env node\n\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * Install Claude optimized template files\n * This script copies all template files from the source .claude directory\n * to the template directory for packaging and distribution\n */\n\nconst SOURCE_DIR = path.join(__dirname, '../../../.claude');\nconst DEST_DIR = path.join(__dirname, '.claude');\nconst MANIFEST_PATH = path.join(__dirname, 'manifest.json');\n\n// Read manifest\nconst manifest = JSON.parse(fs.readFileSync(MANIFEST_PATH, 'utf8'));\n\n// Create destination directory\nif (!fs.existsSync(DEST_DIR)) {\n  fs.mkdirSync(DEST_DIR, { recursive: true });\n}\n\n// Create directories first\nconsole.log('Creating directory structure...');\nfor (const [dirName, dirInfo] of Object.entries(manifest.directories)) {\n  const destPath = path.join(DEST_DIR, dirInfo.path);\n  if (!fs.existsSync(destPath)) {\n    fs.mkdirSync(destPath, { recursive: true });\n    console.log(`  ✓ Created ${dirInfo.path}`);\n  }\n\n  // Create README for empty directories\n  if (dirInfo.createEmpty) {\n    const readmePath = path.join(destPath, 'README.md');\n    if (!fs.existsSync(readmePath)) {\n      fs.writeFileSync(\n        readmePath,\n        `# ${dirName}\\n\\nThis directory is intentionally empty and will be populated during usage.\\n`,\n      );\n    }\n  }\n}\n\n// Copy files\nconsole.log('\\nCopying template files...');\nlet successCount = 0;\nlet errorCount = 0;\n\nfor (const file of manifest.files) {\n  const sourcePath = path.join(SOURCE_DIR, file.source);\n  const destPath = path.join(DEST_DIR, file.destination);\n\n  try {\n    if (fs.existsSync(sourcePath)) {\n      // Ensure destination directory exists\n      const destDir = path.dirname(destPath);\n      if (!fs.existsSync(destDir)) {\n        fs.mkdirSync(destDir, { recursive: true });\n      }\n\n      // Copy file\n      fs.copyFileSync(sourcePath, destPath);\n      console.log(`  ✓ ${file.destination} (${file.category})`);\n      successCount++;\n    } else {\n      console.error(`  ✗ ${file.source} - File not found`);\n      errorCount++;\n    }\n  } catch (error) {\n    console.error(`  ✗ ${file.destination} - Error: ${error.message}`);\n    errorCount++;\n  }\n}\n\n// Summary\nconsole.log('\\n' + '='.repeat(50));\nconsole.log('Installation Summary:');\nconsole.log(`  Files copied: ${successCount}`);\nconsole.log(`  Errors: ${errorCount}`);\nconsole.log(`  Total files in manifest: ${manifest.files.length}`);\n\n// Category summary\nconsole.log('\\nFiles by category:');\nfor (const [category, info] of Object.entries(manifest.categories)) {\n  const copied = manifest.files.filter(\n    (f) => f.category === category && fs.existsSync(path.join(DEST_DIR, f.destination)),\n  ).length;\n  console.log(`  ${category}: ${copied}/${info.count} files`);\n}\n\n// Verify installation\nif (errorCount === 0) {\n  console.log('\\n✅ Template installation completed successfully!');\n\n  // Create a timestamp file\n  const timestamp = new Date().toISOString();\n  fs.writeFileSync(\n    path.join(__dirname, '.installed'),\n    `Installed: ${timestamp}\\nVersion: ${manifest.version}\\n`,\n  );\n} else {\n  console.log('\\n⚠️  Template installation completed with errors.');\n  console.log('Please check the error messages above and ensure source files exist.');\n}\n\n// Display next steps\nconsole.log('\\nNext steps:');\nconsole.log('1. Review the installed files in the .claude directory');\nconsole.log('2. Run tests to verify functionality: npm test');\nconsole.log('3. Package for distribution if needed');\nconsole.log('\\nFor more information, see README.md');\n"],"names":["fs","require","path","SOURCE_DIR","join","__dirname","DEST_DIR","MANIFEST_PATH","manifest","JSON","parse","readFileSync","existsSync","mkdirSync","recursive","console","log","dirName","dirInfo","Object","entries","directories","destPath","createEmpty","readmePath","writeFileSync","successCount","errorCount","file","files","sourcePath","source","destination","destDir","dirname","copyFileSync","category","error","message","repeat","length","info","categories","copied","filter","f","count","timestamp","Date","toISOString","version"],"mappings":"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"}