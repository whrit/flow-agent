{"version":3,"sources":["../../../src/utils/helpers.ts"],"sourcesContent":["/**\n * Utility helper functions for Claude-Flow\n */\n\nimport { promisify } from 'util';\nimport { exec } from 'child_process';\n\n// Utility helper functions\n\n/**\n * Executes a command asynchronously and returns the result\n */\nexport const execAsync = promisify(exec);\n\n/**\n * Simple calculator function that adds two numbers\n */\nexport function add(a: number, b: number): number {\n  return a + b;\n}\n\n/**\n * Simple hello world function\n */\nexport function helloWorld(): string {\n  return 'Hello, World!';\n}\n\n/**\n * Generates a unique identifier\n */\nexport function generateId(prefix?: string): string {\n  const timestamp = Date.now().toString(36);\n  const random = Math.random().toString(36).substr(2, 9);\n  return prefix ? `${prefix}_${timestamp}_${random}` : `${timestamp}_${random}`;\n}\n\n/**\n * Creates a timeout promise that rejects after the specified time\n */\nexport function timeout<T>(promise: Promise<T>, ms: number, message?: string): Promise<T> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let completed = false;\n\n  const timeoutPromise = new Promise<never>((_, reject) => {\n    timeoutId = setTimeout(() => {\n      if (!completed) {\n        completed = true;\n        reject(new Error(message || 'Operation timed out'));\n      }\n    }, ms);\n  });\n\n  const wrappedPromise = promise.then(\n    (result) => {\n      completed = true;\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n      return result;\n    },\n    (error) => {\n      completed = true;\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n      throw error;\n    },\n  );\n\n  return Promise.race([wrappedPromise, timeoutPromise]);\n}\n\n/**\n * Delays execution for specified milliseconds\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n/**\n * Retries a function with exponential backoff\n */\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  options: {\n    maxAttempts?: number;\n    initialDelay?: number;\n    maxDelay?: number;\n    factor?: number;\n    onRetry?: (attempt: number, error: Error) => void;\n  } = {},\n): Promise<T> {\n  const { maxAttempts = 3, initialDelay = 1000, maxDelay = 30000, factor = 2, onRetry } = options;\n\n  let lastError: Error;\n  let delayMs = initialDelay;\n\n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error instanceof Error ? error : new Error(String(error));\n\n      if (attempt === maxAttempts) {\n        throw lastError;\n      }\n\n      if (onRetry) {\n        onRetry(attempt, lastError);\n      }\n\n      await delay(Math.min(delayMs, maxDelay));\n      delayMs *= factor;\n    }\n  }\n\n  throw lastError!;\n}\n\n/**\n * Debounces a function\n */\nexport function debounce<T extends (...args: unknown[]) => unknown>(\n  fn: T,\n  delayMs: number,\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n\n  return (...args: Parameters<T>) => {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      fn(...args);\n      timeoutId = undefined;\n    }, delayMs);\n  };\n}\n\n/**\n * Throttles a function\n */\nexport function throttle<T extends (...args: unknown[]) => unknown>(\n  fn: T,\n  limitMs: number,\n): (...args: Parameters<T>) => void {\n  let inThrottle = false;\n  let lastArgs: Parameters<T> | null = null;\n\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      fn(...args);\n      inThrottle = true;\n\n      setTimeout(() => {\n        inThrottle = false;\n        if (lastArgs !== null) {\n          fn(...lastArgs);\n          lastArgs = null;\n        }\n      }, limitMs);\n    } else {\n      lastArgs = args;\n    }\n  };\n}\n\n/**\n * Deep clones an object\n */\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (obj instanceof Date) {\n    return new Date(obj.getTime()) as T;\n  }\n\n  if (obj instanceof Array) {\n    return obj.map((item) => deepClone(item)) as T;\n  }\n\n  if (obj instanceof Map) {\n    const map = new Map();\n    obj.forEach((value, key) => {\n      map.set(key, deepClone(value));\n    });\n    return map as T;\n  }\n\n  if (obj instanceof Set) {\n    const set = new Set();\n    obj.forEach((value) => {\n      set.add(deepClone(value));\n    });\n    return set as T;\n  }\n\n  const cloned = {} as T;\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      cloned[key] = deepClone(obj[key]);\n    }\n  }\n\n  return cloned;\n}\n\n/**\n * Merges multiple objects deeply\n */\nexport function deepMerge<T extends Record<string, unknown>>(\n  target: T,\n  ...sources: Partial<T>[]\n): T {\n  // Create a deep clone of the target to avoid mutation\n  const result = deepClone(target);\n\n  if (!sources.length) return result;\n\n  const source = sources.shift();\n  if (!source) return result;\n\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      const sourceValue = source[key];\n      const resultValue = result[key];\n\n      if (isObject(resultValue) && isObject(sourceValue)) {\n        result[key] = deepMerge(\n          resultValue as Record<string, unknown>,\n          sourceValue as Record<string, unknown>,\n        ) as T[Extract<keyof T, string>];\n      } else {\n        result[key] = sourceValue as T[Extract<keyof T, string>];\n      }\n    }\n  }\n\n  return deepMerge(result, ...sources);\n}\n\n/**\n * Checks if a value is a plain object\n */\nfunction isObject(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n\n/**\n * Creates a typed event emitter\n */\nexport class TypedEventEmitter<T extends Record<string, unknown>> {\n  private listeners = new Map<keyof T, Set<(data: unknown) => void>>();\n\n  on<K extends keyof T>(event: K, handler: (data: T[K]) => void): void {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set());\n    }\n    this.listeners.get(event)!.add(handler as (data: unknown) => void);\n  }\n\n  off<K extends keyof T>(event: K, handler: (data: T[K]) => void): void {\n    const handlers = this.listeners.get(event);\n    if (handlers) {\n      handlers.delete(handler as (data: unknown) => void);\n    }\n  }\n\n  emit<K extends keyof T>(event: K, data: T[K]): void {\n    const handlers = this.listeners.get(event);\n    if (handlers) {\n      handlers.forEach((handler) => handler(data));\n    }\n  }\n\n  once<K extends keyof T>(event: K, handler: (data: T[K]) => void): void {\n    const onceHandler = (data: T[K]) => {\n      handler(data);\n      this.off(event, onceHandler);\n    };\n    this.on(event, onceHandler);\n  }\n\n  removeAllListeners(event?: keyof T): void {\n    if (event) {\n      this.listeners.delete(event);\n    } else {\n      this.listeners.clear();\n    }\n  }\n}\n\n/**\n * Formats bytes to human-readable string\n */\nexport function formatBytes(bytes: number, decimals = 2): string {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\n  // Handle negative numbers\n  const absBytes = Math.abs(bytes);\n  const i = Math.floor(Math.log(absBytes) / Math.log(k));\n\n  const value = parseFloat((absBytes / Math.pow(k, i)).toFixed(dm));\n  const sign = bytes < 0 ? '-' : '';\n\n  return sign + value + ' ' + sizes[i];\n}\n\n/**\n * Parses duration string to milliseconds\n */\nexport function parseDuration(duration: string): number {\n  const match = duration.match(/^(\\d+)(ms|s|m|h|d)$/);\n  if (!match) {\n    throw new Error(`Invalid duration format: ${duration}`);\n  }\n\n  const value = parseInt(match[1], 10);\n  const unit = match[2];\n\n  switch (unit) {\n    case 'ms':\n      return value;\n    case 's':\n      return value * 1000;\n    case 'm':\n      return value * 60 * 1000;\n    case 'h':\n      return value * 60 * 60 * 1000;\n    case 'd':\n      return value * 24 * 60 * 60 * 1000;\n    default:\n      throw new Error(`Unknown duration unit: ${unit}`);\n  }\n}\n\n/**\n * Ensures a value is an array\n */\nexport function ensureArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n\n/**\n * Groups an array by a key function\n */\nexport function groupBy<T, K extends string | number | symbol>(\n  items: T[],\n  keyFn: (item: T) => K,\n): Record<K, T[]> {\n  return items.reduce(\n    (groups, item) => {\n      const key = keyFn(item);\n      if (!groups[key]) {\n        groups[key] = [];\n      }\n      groups[key].push(item);\n      return groups;\n    },\n    {} as Record<K, T[]>,\n  );\n}\n\n/**\n * Creates a promise that can be resolved/rejected externally\n */\nexport function createDeferred<T>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (reason?: unknown) => void;\n} {\n  let resolve: (value: T) => void;\n  let reject: (reason?: unknown) => void;\n\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise, resolve: resolve!, reject: reject! };\n}\n\n/**\n * Safely parses JSON with error handling\n */\nexport function safeParseJSON<T>(json: string, fallback?: T): T | undefined {\n  try {\n    return JSON.parse(json) as T;\n  } catch {\n    return fallback;\n  }\n}\n\n/**\n * Circuit breaker state\n */\nexport interface CircuitBreakerState {\n  failureCount: number;\n  lastFailureTime: number;\n  state: 'closed' | 'open' | 'half-open';\n}\n\n/**\n * Circuit breaker options\n */\nexport interface CircuitBreakerOptions {\n  threshold: number;\n  timeout: number;\n  resetTimeout: number;\n}\n\n/**\n * Circuit breaker interface\n */\nexport interface CircuitBreaker {\n  execute<T>(fn: () => Promise<T>): Promise<T>;\n  getState(): CircuitBreakerState;\n  reset(): void;\n}\n\n/**\n * Simple calculator function with basic operations\n */\nexport function calculator(\n  a: number,\n  b: number,\n  operation: '+' | '-' | '*' | '/' | '^' | '%',\n): number {\n  switch (operation) {\n    case '+':\n      return a + b;\n    case '-':\n      return a - b;\n    case '*':\n      return a * b;\n    case '/':\n      if (b === 0) {\n        throw new Error('Division by zero');\n      }\n      return a / b;\n    case '^':\n      return Math.pow(a, b);\n    case '%':\n      if (b === 0) {\n        throw new Error('Modulo by zero');\n      }\n      return a % b;\n    default:\n      throw new Error(`Invalid operation: ${operation}`);\n  }\n}\n\n/**\n * Creates a circuit breaker\n */\nexport function circuitBreaker(name: string, options: CircuitBreakerOptions): CircuitBreaker {\n  const state: CircuitBreakerState = {\n    failureCount: 0,\n    lastFailureTime: 0,\n    state: 'closed',\n  };\n\n  const isOpen = (): boolean => {\n    if (state.state === 'open') {\n      const now = Date.now();\n      if (now - state.lastFailureTime >= options.resetTimeout) {\n        state.state = 'half-open';\n        return false;\n      }\n      return true;\n    }\n    return false;\n  };\n\n  const recordSuccess = (): void => {\n    state.failureCount = 0;\n    state.state = 'closed';\n  };\n\n  const recordFailure = (): void => {\n    state.failureCount++;\n    state.lastFailureTime = Date.now();\n\n    if (state.failureCount >= options.threshold) {\n      state.state = 'open';\n    }\n  };\n\n  return {\n    async execute<T>(fn: () => Promise<T>): Promise<T> {\n      if (isOpen()) {\n        throw new Error(`Circuit breaker ${name} is open`);\n      }\n\n      try {\n        const result = await timeout(fn(), options.timeout);\n        recordSuccess();\n        return result;\n      } catch (error) {\n        recordFailure();\n        throw error;\n      }\n    },\n\n    getState(): CircuitBreakerState {\n      return { ...state };\n    },\n\n    reset(): void {\n      state.failureCount = 0;\n      state.lastFailureTime = 0;\n      state.state = 'closed';\n    },\n  };\n}\n\n/**\n * Greeting function that returns a personalized greeting\n */\nexport function greeting(\n  name?: string,\n  options?: {\n    timeOfDay?: boolean;\n    formal?: boolean;\n    locale?: 'en' | 'es' | 'fr' | 'de' | 'it' | 'pt' | 'ja' | 'zh';\n  },\n): string {\n  const opts = {\n    timeOfDay: false,\n    formal: false,\n    locale: 'en' as const,\n    ...options,\n  };\n\n  // Determine time-based greeting\n  const getTimeGreeting = (): string => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 17) return 'Good afternoon';\n    if (hour < 21) return 'Good evening';\n    return 'Good night';\n  };\n\n  // Get greeting by locale\n  const getLocaleGreeting = (): string => {\n    const greetings: Record<string, { informal: string; formal: string }> = {\n      en: { informal: 'Hello', formal: 'Greetings' },\n      es: { informal: 'Hola', formal: 'Saludos' },\n      fr: { informal: 'Salut', formal: 'Bonjour' },\n      de: { informal: 'Hallo', formal: 'Guten Tag' },\n      it: { informal: 'Ciao', formal: 'Salve' },\n      pt: { informal: 'Olá', formal: 'Saudações' },\n      ja: { informal: 'こんにちは', formal: 'ご挨拶' },\n      zh: { informal: '你好', formal: '您好' },\n    };\n\n    const localeGreeting = greetings[opts.locale] || greetings.en;\n    return opts.formal ? localeGreeting.formal : localeGreeting.informal;\n  };\n\n  // Build the greeting\n  let greetingText = opts.timeOfDay ? getTimeGreeting() : getLocaleGreeting();\n\n  if (name) {\n    greetingText += `, ${name}`;\n  }\n\n  greetingText += '!';\n\n  return greetingText;\n}\n"],"names":["promisify","exec","execAsync","add","a","b","helloWorld","generateId","prefix","timestamp","Date","now","toString","random","Math","substr","timeout","promise","ms","message","timeoutId","completed","timeoutPromise","Promise","_","reject","setTimeout","Error","wrappedPromise","then","result","undefined","clearTimeout","error","race","delay","resolve","retry","fn","options","maxAttempts","initialDelay","maxDelay","factor","onRetry","lastError","delayMs","attempt","String","min","debounce","args","throttle","limitMs","inThrottle","lastArgs","deepClone","obj","getTime","Array","map","item","Map","forEach","value","key","set","Set","cloned","Object","prototype","hasOwnProperty","call","deepMerge","target","sources","length","source","shift","sourceValue","resultValue","isObject","isArray","TypedEventEmitter","listeners","on","event","handler","has","get","off","handlers","delete","emit","data","once","onceHandler","removeAllListeners","clear","formatBytes","bytes","decimals","k","dm","sizes","absBytes","abs","i","floor","log","parseFloat","pow","toFixed","sign","parseDuration","duration","match","parseInt","unit","ensureArray","groupBy","items","keyFn","reduce","groups","push","createDeferred","res","rej","safeParseJSON","json","fallback","JSON","parse","calculator","operation","circuitBreaker","name","state","failureCount","lastFailureTime","isOpen","resetTimeout","recordSuccess","recordFailure","threshold","execute","getState","reset","greeting","opts","timeOfDay","formal","locale","getTimeGreeting","hour","getHours","getLocaleGreeting","greetings","en","informal","es","fr","de","it","pt","ja","zh","localeGreeting","greetingText"],"mappings":"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"}