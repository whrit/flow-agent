{"version":3,"sources":["../../../src/utils/paths.ts"],"sourcesContent":["import { dirname, join, resolve } from 'path';\nimport { fileURLToPath } from 'url';\nimport { existsSync, readFileSync } from 'fs';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nexport function getClaudeFlowRoot(): string {\n  // Try multiple strategies to find the root\n  const strategies = [\n    // Strategy 1: From current file location\n    resolve(__dirname, '../..'),\n    // Strategy 2: From process.cwd()\n    process.cwd(),\n    // Strategy 3: From npm global location\n    resolve(process.execPath, '../../lib/node_modules/claude-flow'),\n    // Strategy 4: From environment variable\n    process.env.CLAUDE_FLOW_ROOT || '',\n  ];\n\n  for (const path of strategies) {\n    if (path && existsSync(join(path, 'package.json'))) {\n      try {\n        const pkgPath = join(path, 'package.json');\n        const pkgContent = readFileSync(pkgPath, 'utf-8');\n        const pkg = JSON.parse(pkgContent);\n        if (pkg.name === 'claude-flow') {\n          return path;\n        }\n      } catch {\n        // Ignore errors and try next strategy\n      }\n    }\n  }\n\n  // Fallback to current working directory\n  return process.cwd();\n}\n\nexport function getClaudeFlowBin(): string {\n  return join(getClaudeFlowRoot(), 'bin', 'claude-flow');\n}\n\nexport function resolveProjectPath(relativePath: string): string {\n  const root = getClaudeFlowRoot();\n  return resolve(root, relativePath);\n}\n"],"names":["dirname","join","resolve","fileURLToPath","existsSync","readFileSync","__filename","url","__dirname","getClaudeFlowRoot","strategies","process","cwd","execPath","env","CLAUDE_FLOW_ROOT","path","pkgPath","pkgContent","pkg","JSON","parse","name","getClaudeFlowBin","resolveProjectPath","relativePath","root"],"mappings":"AAAA,SAASA,OAAO,EAAEC,IAAI,EAAEC,OAAO,QAAQ,OAAO;AAC9C,SAASC,aAAa,QAAQ,MAAM;AACpC,SAASC,UAAU,EAAEC,YAAY,QAAQ,KAAK;AAE9C,MAAMC,aAAaH,cAAc,YAAYI,GAAG;AAChD,MAAMC,YAAYR,QAAQM;AAE1B,OAAO,SAASG;IAEd,MAAMC,aAAa;QAEjBR,QAAQM,WAAW;QAEnBG,QAAQC,GAAG;QAEXV,QAAQS,QAAQE,QAAQ,EAAE;QAE1BF,QAAQG,GAAG,CAACC,gBAAgB,IAAI;KACjC;IAED,KAAK,MAAMC,QAAQN,WAAY;QAC7B,IAAIM,QAAQZ,WAAWH,KAAKe,MAAM,kBAAkB;YAClD,IAAI;gBACF,MAAMC,UAAUhB,KAAKe,MAAM;gBAC3B,MAAME,aAAab,aAAaY,SAAS;gBACzC,MAAME,MAAMC,KAAKC,KAAK,CAACH;gBACvB,IAAIC,IAAIG,IAAI,KAAK,eAAe;oBAC9B,OAAON;gBACT;YACF,EAAE,OAAM,CAER;QACF;IACF;IAGA,OAAOL,QAAQC,GAAG;AACpB;AAEA,OAAO,SAASW;IACd,OAAOtB,KAAKQ,qBAAqB,OAAO;AAC1C;AAEA,OAAO,SAASe,mBAAmBC,YAAoB;IACrD,MAAMC,OAAOjB;IACb,OAAOP,QAAQwB,MAAMD;AACvB"}