{"version":3,"sources":["../../../src/mcp/server-standalone.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Standalone MCP server entry point\n * Uses the new TypeScript-based MCPServer with Phase 4 SDK integration\n *\n * Note: This file uses dynamic imports to work properly when spawned as a subprocess\n */\n\nconst VERSION = '2.5.0-alpha.130';\n\nasync function main() {\n  // Determine the correct base path for imports\n  const { fileURLToPath } = await import('url');\n  const { pathToFileURL } = await import('url');\n  const path = await import('path');\n  const __filename = fileURLToPath(import.meta.url);\n  const __dirname = path.dirname(__filename);\n\n  // Dynamic imports to resolve correctly from compiled location\n  // Must use file:// URLs for dynamic import\n  const { MCPServer } = await import(pathToFileURL(path.join(__dirname, 'server.js')).href);\n  const { ConsoleLogger } = await import(pathToFileURL(path.join(__dirname, '../core/logger.js')).href);\n  const { createOrchestrator } = await import(pathToFileURL(path.join(__dirname, '../core/orchestrator.js')).href);\n\n  const logger = new ConsoleLogger();\n\n  logger.info('[claude-flow-mcp] Claude-Flow MCP server starting', {\n    version: VERSION,\n    phase: 'Phase 4 - SDK Integration',\n    features: ['Parallel Agent Spawning', 'Real-Time Query Control', 'Query Monitoring']\n  });\n\n  try {\n    // Create orchestrator for MCP tools\n    const orchestrator = await createOrchestrator({\n      logger,\n      enableNeural: process.env.CLAUDE_FLOW_NEURAL_ENABLED === 'true',\n      enableWasm: process.env.CLAUDE_FLOW_WASM_ENABLED === 'true',\n    });\n\n    // Create and start MCP server\n    const server = new MCPServer({\n      transport: 'stdio',\n      logger,\n      orchestrator,\n      enableSwarmTools: true,\n      enableRuvSwarmTools: true,\n    });\n\n    await server.start();\n\n    logger.success('[claude-flow-mcp] Server started successfully', {\n      transport: 'stdio',\n      tools: 'claude-flow + swarm + ruv-swarm',\n      phase4Tools: ['agents_spawn_parallel', 'query_control', 'query_list']\n    });\n\n    // Handle graceful shutdown\n    process.on('SIGINT', async () => {\n      logger.info('[claude-flow-mcp] Shutting down gracefully...');\n      await server.stop();\n      process.exit(0);\n    });\n\n    process.on('SIGTERM', async () => {\n      logger.info('[claude-flow-mcp] Shutting down gracefully...');\n      await server.stop();\n      process.exit(0);\n    });\n\n  } catch (error) {\n    logger.error('[claude-flow-mcp] Failed to start server', { error });\n    process.exit(1);\n  }\n}\n\nmain().catch((error) => {\n  console.error('Fatal error:', error);\n  process.exit(1);\n});"],"names":["VERSION","main","fileURLToPath","pathToFileURL","path","__filename","url","__dirname","dirname","MCPServer","join","href","ConsoleLogger","createOrchestrator","logger","info","version","phase","features","orchestrator","enableNeural","process","env","CLAUDE_FLOW_NEURAL_ENABLED","enableWasm","CLAUDE_FLOW_WASM_ENABLED","server","transport","enableSwarmTools","enableRuvSwarmTools","start","success","tools","phase4Tools","on","stop","exit","error","catch","console"],"mappings":";AASA,MAAMA,UAAU;AAEhB,eAAeC;IAEb,MAAM,EAAEC,aAAa,EAAE,GAAG,MAAM,MAAM,CAAC;IACvC,MAAM,EAAEC,aAAa,EAAE,GAAG,MAAM,MAAM,CAAC;IACvC,MAAMC,OAAO,MAAM,MAAM,CAAC;IAC1B,MAAMC,aAAaH,cAAc,YAAYI,GAAG;IAChD,MAAMC,YAAYH,KAAKI,OAAO,CAACH;IAI/B,MAAM,EAAEI,SAAS,EAAE,GAAG,MAAM,MAAM,CAACN,cAAcC,KAAKM,IAAI,CAACH,WAAW,cAAcI,IAAI;IACxF,MAAM,EAAEC,aAAa,EAAE,GAAG,MAAM,MAAM,CAACT,cAAcC,KAAKM,IAAI,CAACH,WAAW,sBAAsBI,IAAI;IACpG,MAAM,EAAEE,kBAAkB,EAAE,GAAG,MAAM,MAAM,CAACV,cAAcC,KAAKM,IAAI,CAACH,WAAW,4BAA4BI,IAAI;IAE/G,MAAMG,SAAS,IAAIF;IAEnBE,OAAOC,IAAI,CAAC,qDAAqD;QAC/DC,SAAShB;QACTiB,OAAO;QACPC,UAAU;YAAC;YAA2B;YAA2B;SAAmB;IACtF;IAEA,IAAI;QAEF,MAAMC,eAAe,MAAMN,mBAAmB;YAC5CC;YACAM,cAAcC,QAAQC,GAAG,CAACC,0BAA0B,KAAK;YACzDC,YAAYH,QAAQC,GAAG,CAACG,wBAAwB,KAAK;QACvD;QAGA,MAAMC,SAAS,IAAIjB,UAAU;YAC3BkB,WAAW;YACXb;YACAK;YACAS,kBAAkB;YAClBC,qBAAqB;QACvB;QAEA,MAAMH,OAAOI,KAAK;QAElBhB,OAAOiB,OAAO,CAAC,iDAAiD;YAC9DJ,WAAW;YACXK,OAAO;YACPC,aAAa;gBAAC;gBAAyB;gBAAiB;aAAa;QACvE;QAGAZ,QAAQa,EAAE,CAAC,UAAU;YACnBpB,OAAOC,IAAI,CAAC;YACZ,MAAMW,OAAOS,IAAI;YACjBd,QAAQe,IAAI,CAAC;QACf;QAEAf,QAAQa,EAAE,CAAC,WAAW;YACpBpB,OAAOC,IAAI,CAAC;YACZ,MAAMW,OAAOS,IAAI;YACjBd,QAAQe,IAAI,CAAC;QACf;IAEF,EAAE,OAAOC,OAAO;QACdvB,OAAOuB,KAAK,CAAC,4CAA4C;YAAEA;QAAM;QACjEhB,QAAQe,IAAI,CAAC;IACf;AACF;AAEAnC,OAAOqC,KAAK,CAAC,CAACD;IACZE,QAAQF,KAAK,CAAC,gBAAgBA;IAC9BhB,QAAQe,IAAI,CAAC;AACf"}