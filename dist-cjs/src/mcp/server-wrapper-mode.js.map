{"version":3,"sources":["../../../src/mcp/server-wrapper-mode.ts"],"sourcesContent":["#!/usr/bin/env node\n/**\n * Claude-Flow MCP Server - Wrapper Mode\n *\n * This version uses the Claude Code MCP wrapper approach instead of templates.\n */\n\nimport { ClaudeCodeMCPWrapper } from './claude-code-wrapper.js';\n\n// Check if running as wrapper mode\nconst isWrapperMode =\n  process.env.CLAUDE_FLOW_WRAPPER_MODE === 'true' || process.argv.includes('--wrapper');\n\nasync function main() {\n  if (isWrapperMode) {\n    console.error('Starting Claude-Flow MCP in wrapper mode...');\n    const wrapper = new ClaudeCodeMCPWrapper();\n    await wrapper.run();\n  } else {\n    // Fall back to original server\n    console.error('Starting Claude-Flow MCP in direct mode...');\n    const { runMCPServer } = await import('./server.js');\n    await runMCPServer();\n  }\n}\n\nmain().catch((error) => {\n  console.error('Fatal error:', error);\n  process.exit(1);\n});\n"],"names":["ClaudeCodeMCPWrapper","isWrapperMode","process","env","CLAUDE_FLOW_WRAPPER_MODE","argv","includes","main","console","error","wrapper","run","runMCPServer","catch","exit"],"mappings":";AAOA,SAASA,oBAAoB,QAAQ,2BAA2B;AAGhE,MAAMC,gBACJC,QAAQC,GAAG,CAACC,wBAAwB,KAAK,UAAUF,QAAQG,IAAI,CAACC,QAAQ,CAAC;AAE3E,eAAeC;IACb,IAAIN,eAAe;QACjBO,QAAQC,KAAK,CAAC;QACd,MAAMC,UAAU,IAAIV;QACpB,MAAMU,QAAQC,GAAG;IACnB,OAAO;QAELH,QAAQC,KAAK,CAAC;QACd,MAAM,EAAEG,YAAY,EAAE,GAAG,MAAM,MAAM,CAAC;QACtC,MAAMA;IACR;AACF;AAEAL,OAAOM,KAAK,CAAC,CAACJ;IACZD,QAAQC,KAAK,CAAC,gBAAgBA;IAC9BP,QAAQY,IAAI,CAAC;AACf"}