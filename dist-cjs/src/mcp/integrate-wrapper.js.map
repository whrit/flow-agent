{"version":3,"sources":["../../../src/mcp/integrate-wrapper.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { spawn } from 'child_process';\nimport { Client } from '@modelcontextprotocol/sdk/client/index.js';\nimport { StdioClientTransport } from '@modelcontextprotocol/sdk/client/stdio.js';\nimport { ClaudeCodeMCPWrapper } from './claude-code-wrapper.js';\n\n/**\n * Integration script that connects the Claude-Flow MCP wrapper\n * to the Claude Code MCP server\n */\nexport class MCPIntegration {\n  private claudeCodeClient?: Client;\n  private wrapper: ClaudeCodeMCPWrapper;\n\n  constructor() {\n    this.wrapper = new ClaudeCodeMCPWrapper();\n  }\n\n  async connectToClaudeCode(): Promise<void> {\n    try {\n      // Start Claude Code MCP server process\n      const claudeCodeProcess = spawn('npx', ['-y', '@anthropic/claude-code', 'mcp'], {\n        stdio: ['pipe', 'pipe', 'pipe'],\n      });\n\n      const transport = new StdioClientTransport({\n        command: 'npx',\n        args: ['-y', '@anthropic/claude-code', 'mcp'],\n      });\n\n      this.claudeCodeClient = new Client(\n        {\n          name: 'claude-flow-wrapper-client',\n          version: '1.0.0',\n        },\n        {\n          capabilities: {},\n        },\n      );\n\n      await this.claudeCodeClient.connect(transport);\n\n      // Inject the client into the wrapper\n      (this.wrapper as any).claudeCodeMCP = this.claudeCodeClient;\n\n      console.log('Connected to Claude Code MCP server');\n    } catch (error) {\n      console.error('Failed to connect to Claude Code MCP:', error);\n      throw error;\n    }\n  }\n\n  async start(): Promise<void> {\n    // Connect to Claude Code MCP\n    await this.connectToClaudeCode();\n\n    // Start the wrapper server\n    await this.wrapper.run();\n  }\n}\n\n// Update the wrapper to use the real Claude Code MCP client\nexport function injectClaudeCodeClient(wrapper: ClaudeCodeMCPWrapper, client: Client): void {\n  // Override the forwardToClaudeCode method\n  (wrapper as any).forwardToClaudeCode = async function (toolName: string, args: any) {\n    try {\n      const result = await client.callTool(toolName, args);\n      return result;\n    } catch (error) {\n      return {\n        content: [\n          {\n            type: 'text',\n            text: `Error calling Claude Code tool ${toolName}: ${error instanceof Error ? error.message : String(error)}`,\n          },\n        ],\n        isError: true,\n      };\n    }\n  };\n}\n\n// Main execution\nif (import.meta.url === `file://${process.argv[1]}`) {\n  const integration = new MCPIntegration();\n  integration.start().catch(console.error);\n}\n"],"names":["spawn","Client","StdioClientTransport","ClaudeCodeMCPWrapper","MCPIntegration","claudeCodeClient","wrapper","connectToClaudeCode","claudeCodeProcess","stdio","transport","command","args","name","version","capabilities","connect","claudeCodeMCP","console","log","error","start","run","injectClaudeCodeClient","client","forwardToClaudeCode","toolName","result","callTool","content","type","text","Error","message","String","isError","url","process","argv","integration","catch"],"mappings":";AACA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,MAAM,QAAQ,4CAA4C;AACnE,SAASC,oBAAoB,QAAQ,4CAA4C;AACjF,SAASC,oBAAoB,QAAQ,2BAA2B;AAMhE,OAAO,MAAMC;IACHC,iBAA0B;IAC1BC,QAA8B;IAEtC,aAAc;QACZ,IAAI,CAACA,OAAO,GAAG,IAAIH;IACrB;IAEA,MAAMI,sBAAqC;QACzC,IAAI;YAEF,MAAMC,oBAAoBR,MAAM,OAAO;gBAAC;gBAAM;gBAA0B;aAAM,EAAE;gBAC9ES,OAAO;oBAAC;oBAAQ;oBAAQ;iBAAO;YACjC;YAEA,MAAMC,YAAY,IAAIR,qBAAqB;gBACzCS,SAAS;gBACTC,MAAM;oBAAC;oBAAM;oBAA0B;iBAAM;YAC/C;YAEA,IAAI,CAACP,gBAAgB,GAAG,IAAIJ,OAC1B;gBACEY,MAAM;gBACNC,SAAS;YACX,GACA;gBACEC,cAAc,CAAC;YACjB;YAGF,MAAM,IAAI,CAACV,gBAAgB,CAACW,OAAO,CAACN;YAGnC,IAAI,CAACJ,OAAO,CAASW,aAAa,GAAG,IAAI,CAACZ,gBAAgB;YAE3Da,QAAQC,GAAG,CAAC;QACd,EAAE,OAAOC,OAAO;YACdF,QAAQE,KAAK,CAAC,yCAAyCA;YACvD,MAAMA;QACR;IACF;IAEA,MAAMC,QAAuB;QAE3B,MAAM,IAAI,CAACd,mBAAmB;QAG9B,MAAM,IAAI,CAACD,OAAO,CAACgB,GAAG;IACxB;AACF;AAGA,OAAO,SAASC,uBAAuBjB,OAA6B,EAAEkB,MAAc;IAEjFlB,QAAgBmB,mBAAmB,GAAG,eAAgBC,QAAgB,EAAEd,IAAS;QAChF,IAAI;YACF,MAAMe,SAAS,MAAMH,OAAOI,QAAQ,CAACF,UAAUd;YAC/C,OAAOe;QACT,EAAE,OAAOP,OAAO;YACd,OAAO;gBACLS,SAAS;oBACP;wBACEC,MAAM;wBACNC,MAAM,CAAC,+BAA+B,EAAEL,SAAS,EAAE,EAAEN,iBAAiBY,QAAQZ,MAAMa,OAAO,GAAGC,OAAOd,QAAQ;oBAC/G;iBACD;gBACDe,SAAS;YACX;QACF;IACF;AACF;AAGA,IAAI,YAAYC,GAAG,KAAK,CAAC,OAAO,EAAEC,QAAQC,IAAI,CAAC,EAAE,EAAE,EAAE;IACnD,MAAMC,cAAc,IAAInC;IACxBmC,YAAYlB,KAAK,GAAGmB,KAAK,CAACtB,QAAQE,KAAK;AACzC"}