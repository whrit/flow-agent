{"version":3,"sources":["../../../src/core/json-persistence.ts"],"sourcesContent":["/**\n * JSON-based persistence layer for Claude-Flow\n */\n\nimport { join } from 'path';\nimport { mkdir, access, readFile, writeFile } from 'fs/promises';\n\nexport interface PersistedAgent {\n  id: string;\n  type: string;\n  name: string;\n  status: string;\n  capabilities: string[];\n  systemPrompt: string;\n  maxConcurrentTasks: number;\n  priority: number;\n  createdAt: number;\n}\n\nexport interface PersistedTask {\n  id: string;\n  type: string;\n  description: string;\n  status: string;\n  priority: number;\n  dependencies: string[];\n  metadata: Record<string, unknown>;\n  assignedAgent?: string;\n  progress: number;\n  error?: string;\n  createdAt: number;\n  completedAt?: number;\n}\n\ninterface PersistenceData {\n  agents: PersistedAgent[];\n  tasks: PersistedTask[];\n  lastUpdated: number;\n}\n\nexport class JsonPersistenceManager {\n  private dataPath: string;\n  private data: PersistenceData;\n\n  constructor(dataDir: string = './memory') {\n    this.dataPath = join(dataDir, 'claude-flow-data.json');\n    this.data = {\n      agents: [],\n      tasks: [],\n      lastUpdated: Date.now(),\n    };\n  }\n\n  async initialize(): Promise<void> {\n    // Ensure directory exists\n    await mkdir(join(this.dataPath, '..'), { recursive: true });\n\n    // Load existing data if available\n    try {\n      await access(this.dataPath);\n      const content = await readFile(this.dataPath, 'utf-8');\n      this.data = JSON.parse(content);\n    } catch (error) {\n      // File doesn't exist or can't be read, keep default empty data\n      console.error('Failed to load persistence data:', error);\n    }\n  }\n\n  private async save(): Promise<void> {\n    this.data.lastUpdated = Date.now();\n    await writeFile(this.dataPath, JSON.stringify(this.data, null, 2));\n  }\n\n  // Agent operations\n  async saveAgent(agent: PersistedAgent): Promise<void> {\n    // Remove existing agent if updating\n    this.data.agents = this.data.agents.filter((a) => a.id !== agent.id);\n    this.data.agents.push(agent);\n    await this.save();\n  }\n\n  async getAgent(id: string): Promise<PersistedAgent | null> {\n    return this.data.agents.find((a) => a.id === id) || null;\n  }\n\n  async getActiveAgents(): Promise<PersistedAgent[]> {\n    return this.data.agents.filter((a) => a.status === 'active' || a.status === 'idle');\n  }\n\n  async getAllAgents(): Promise<PersistedAgent[]> {\n    return this.data.agents;\n  }\n\n  async updateAgentStatus(id: string, status: string): Promise<void> {\n    const agent = this.data.agents.find((a) => a.id === id);\n    if (agent) {\n      agent.status = status;\n      await this.save();\n    }\n  }\n\n  // Task operations\n  async saveTask(task: PersistedTask): Promise<void> {\n    // Remove existing task if updating\n    this.data.tasks = this.data.tasks.filter((t) => t.id !== task.id);\n    this.data.tasks.push(task);\n    await this.save();\n  }\n\n  async getTask(id: string): Promise<PersistedTask | null> {\n    return this.data.tasks.find((t) => t.id === id) || null;\n  }\n\n  async getActiveTasks(): Promise<PersistedTask[]> {\n    return this.data.tasks.filter(\n      (t) => t.status === 'pending' || t.status === 'in_progress' || t.status === 'assigned',\n    );\n  }\n\n  async getAllTasks(): Promise<PersistedTask[]> {\n    return this.data.tasks;\n  }\n\n  async updateTaskStatus(id: string, status: string, assignedAgent?: string): Promise<void> {\n    const task = this.data.tasks.find((t) => t.id === id);\n    if (task) {\n      task.status = status;\n      if (assignedAgent !== undefined) {\n        task.assignedAgent = assignedAgent;\n      }\n      if (status === 'completed') {\n        task.completedAt = Date.now();\n      }\n      await this.save();\n    }\n  }\n\n  async updateTaskProgress(id: string, progress: number): Promise<void> {\n    const task = this.data.tasks.find((t) => t.id === id);\n    if (task) {\n      task.progress = progress;\n      await this.save();\n    }\n  }\n\n  // Statistics\n  async getStats(): Promise<{\n    totalAgents: number;\n    activeAgents: number;\n    totalTasks: number;\n    pendingTasks: number;\n    completedTasks: number;\n  }> {\n    const activeAgents = this.data.agents.filter(\n      (a) => a.status === 'active' || a.status === 'idle',\n    ).length;\n\n    const pendingTasks = this.data.tasks.filter(\n      (t) => t.status === 'pending' || t.status === 'in_progress' || t.status === 'assigned',\n    ).length;\n\n    const completedTasks = this.data.tasks.filter((t) => t.status === 'completed').length;\n\n    return {\n      totalAgents: this.data.agents.length,\n      activeAgents,\n      totalTasks: this.data.tasks.length,\n      pendingTasks,\n      completedTasks,\n    };\n  }\n\n  close(): void {\n    // No-op for JSON persistence\n  }\n}\n"],"names":["join","mkdir","access","readFile","writeFile","JsonPersistenceManager","dataPath","data","dataDir","agents","tasks","lastUpdated","Date","now","initialize","recursive","content","JSON","parse","error","console","save","stringify","saveAgent","agent","filter","a","id","push","getAgent","find","getActiveAgents","status","getAllAgents","updateAgentStatus","saveTask","task","t","getTask","getActiveTasks","getAllTasks","updateTaskStatus","assignedAgent","undefined","completedAt","updateTaskProgress","progress","getStats","activeAgents","length","pendingTasks","completedTasks","totalAgents","totalTasks","close"],"mappings":"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"}