{"version":3,"sources":["../../../src/verification/interfaces.ts"],"sourcesContent":["/**\n * Verification and Truth Enforcement Interfaces\n * Core type definitions for the verification system\n */\n\n// Core Verification Types\nexport interface VerificationConfig {\n  enabled: boolean;\n  mode: 'passive' | 'active' | 'strict';\n  truth_threshold: number;\n  rollback_enabled: boolean;\n  weights: VerificationWeights;\n  enforcement: EnforcementConfig;\n  integrations: IntegrationConfig;\n  reporting: ReportingConfig;\n}\n\nexport interface VerificationWeights {\n  tests: number;\n  integration_tests: number;\n  lint: number;\n  type_check: number;\n  build: number;\n  performance: number;\n}\n\nexport interface EnforcementConfig {\n  passive: {\n    log_only: boolean;\n    warn_on_failure: boolean;\n    block_on_failure: boolean;\n  };\n  active: {\n    log_only: boolean;\n    warn_on_failure: boolean;\n    block_on_failure: boolean;\n  };\n  strict: {\n    log_only: boolean;\n    warn_on_failure: boolean;\n    block_on_failure: boolean;\n  };\n}\n\nexport interface IntegrationConfig {\n  github_actions: boolean;\n  mcp_tools: boolean;\n  npx_commands: boolean;\n  memory_persistence: boolean;\n}\n\nexport interface ReportingConfig {\n  auto_generate: boolean;\n  frequency: 'on_completion' | 'hourly' | 'daily';\n  format: 'json' | 'html' | 'markdown';\n  include_evidence: boolean;\n}\n\n// Checkpoint System\nexport interface Checkpoint {\n  id: string;\n  type: 'pre' | 'during' | 'post';\n  agent_id: string;\n  task_id: string;\n  timestamp: number;\n  required: boolean;\n  validations: Validation[];\n  state_snapshot: StateSnapshot;\n  description: string;\n  scope: CheckpointScope;\n}\n\nexport interface Validation {\n  name: string;\n  type: 'test' | 'lint' | 'type' | 'build' | 'integration' | 'performance';\n  command: string;\n  expected_result: any;\n  actual_result?: any;\n  passed: boolean;\n  weight: number;\n  execution_time_ms: number;\n  error_message?: string;\n}\n\nexport type CheckpointScope = 'local' | 'agent' | 'task' | 'system' | 'global';\n\nexport interface CheckpointFilter {\n  agent_id?: string;\n  task_id?: string;\n  type?: string;\n  from_timestamp?: number;\n  to_timestamp?: number;\n  scope?: CheckpointScope;\n}\n\n// Truth Scoring System\nexport interface TruthScore {\n  score: number;\n  threshold: number;\n  passed: boolean;\n  discrepancies: Discrepancy[];\n  evidence_quality: EvidenceQuality;\n  timestamp: number;\n  agent_id: string;\n  task_id: string;\n  calculation_method: string;\n}\n\nexport interface Discrepancy {\n  type: string;\n  description: string;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  claimed_value: any;\n  actual_value: any;\n  impact_score: number;\n}\n\nexport interface EvidenceQuality {\n  completeness: number; // 0-1\n  freshness: number; // 0-1\n  reliability: number; // 0-1\n  coverage: number; // 0-1\n  overall: number; // 0-1\n}\n\nexport interface AgentClaims {\n  task_id: string;\n  agent_id: string;\n  timestamp: number;\n  test_claims: TestClaims;\n  quality_claims: QualityClaims;\n  build_claims: BuildClaims;\n  performance_claims: PerformanceClaims;\n  integration_claims: IntegrationClaims;\n}\n\nexport interface TestClaims {\n  all_tests_pass: boolean;\n  test_coverage_percentage: number;\n  no_failing_tests: boolean;\n  performance_tests_pass: boolean;\n}\n\nexport interface QualityClaims {\n  no_lint_errors: boolean;\n  no_type_errors: boolean;\n  code_complexity_acceptable: boolean;\n  security_scan_clean: boolean;\n}\n\nexport interface BuildClaims {\n  builds_successfully: boolean;\n  no_build_warnings: boolean;\n  deployment_ready: boolean;\n  dependencies_resolved: boolean;\n}\n\nexport interface PerformanceClaims {\n  meets_performance_targets: boolean;\n  memory_usage_acceptable: boolean;\n  response_time_acceptable: boolean;\n  throughput_acceptable: boolean;\n}\n\nexport interface IntegrationClaims {\n  api_compatibility_maintained: boolean;\n  database_migrations_successful: boolean;\n  external_services_compatible: boolean;\n  cross_agent_communication_working: boolean;\n}\n\n// Evidence Collection\nexport interface Evidence {\n  test_results: TestResults;\n  code_quality: CodeQuality;\n  system_health: SystemHealth;\n  agent_coordination: AgentCoordination;\n  collection_timestamp: number;\n  collection_duration_ms: number;\n}\n\nexport interface TestResults {\n  unit_tests: TestExecution;\n  integration_tests: TestExecution;\n  e2e_tests: TestExecution;\n  cross_agent_tests: TestExecution;\n  performance_tests: TestExecution;\n}\n\nexport interface TestExecution {\n  total: number;\n  passed: number;\n  failed: number;\n  skipped: number;\n  coverage_percentage: number;\n  execution_time_ms: number;\n  failures: TestFailure[];\n}\n\nexport interface TestFailure {\n  test_name: string;\n  error_message: string;\n  stack_trace: string;\n  category: 'unit' | 'integration' | 'e2e' | 'performance';\n}\n\nexport interface CodeQuality {\n  lint_results: LintResults;\n  type_results: TypeResults;\n  complexity_metrics: ComplexityMetrics;\n  security_scan: SecurityResults;\n}\n\nexport interface LintResults {\n  errors: number;\n  warnings: number;\n  total_files_checked: number;\n  issues: LintIssue[];\n}\n\nexport interface LintIssue {\n  file: string;\n  line: number;\n  column: number;\n  rule: string;\n  message: string;\n  severity: 'error' | 'warning' | 'info';\n}\n\nexport interface TypeResults {\n  errors: number;\n  warnings: number;\n  total_files_checked: number;\n  issues: TypeIssue[];\n}\n\nexport interface TypeIssue {\n  file: string;\n  line: number;\n  column: number;\n  message: string;\n  code: number;\n}\n\nexport interface ComplexityMetrics {\n  cyclomatic_complexity: number;\n  cognitive_complexity: number;\n  lines_of_code: number;\n  maintainability_index: number;\n}\n\nexport interface SecurityResults {\n  vulnerabilities_found: number;\n  severity_breakdown: {\n    critical: number;\n    high: number;\n    medium: number;\n    low: number;\n  };\n  scan_coverage_percentage: number;\n}\n\nexport interface SystemHealth {\n  build_results: BuildResults;\n  deployment_status: DeploymentStatus;\n  performance_metrics: PerformanceMetrics;\n  resource_usage: ResourceMetrics;\n}\n\nexport interface BuildResults {\n  success: boolean;\n  build_time_ms: number;\n  warnings: number;\n  errors: number;\n  output_size_bytes: number;\n}\n\nexport interface DeploymentStatus {\n  deployable: boolean;\n  environment_validated: boolean;\n  dependencies_satisfied: boolean;\n  configuration_valid: boolean;\n}\n\nexport interface PerformanceMetrics {\n  response_time_p95_ms: number;\n  throughput_requests_per_second: number;\n  error_rate_percentage: number;\n  cpu_usage_percentage: number;\n  memory_usage_mb: number;\n}\n\nexport interface ResourceMetrics {\n  cpu_usage_percentage: number;\n  memory_usage_mb: number;\n  disk_usage_mb: number;\n  network_io_mbps: number;\n  file_descriptors_used: number;\n}\n\nexport interface AgentCoordination {\n  communication_logs: CommunicationLogs;\n  state_consistency: StateValidation;\n  task_dependencies: DependencyValidation;\n}\n\nexport interface CommunicationLogs {\n  total_messages: number;\n  successful_deliveries: number;\n  failed_deliveries: number;\n  average_latency_ms: number;\n  message_types: Record<string, number>;\n}\n\nexport interface StateValidation {\n  consistent: boolean;\n  inconsistencies: StateInconsistency[];\n  last_validated: number;\n}\n\nexport interface StateInconsistency {\n  type: string;\n  description: string;\n  affected_agents: string[];\n  severity: 'low' | 'medium' | 'high' | 'critical';\n}\n\nexport interface DependencyValidation {\n  satisfied: boolean;\n  missing_dependencies: string[];\n  circular_dependencies: string[];\n  version_conflicts: VersionConflict[];\n}\n\nexport interface VersionConflict {\n  dependency: string;\n  required_version: string;\n  actual_version: string;\n  affected_agents: string[];\n}\n\n// State Management\nexport interface StateSnapshot {\n  id: string;\n  timestamp: number;\n  agent_states: Map<string, AgentState>;\n  system_state: SystemState;\n  task_states: Map<string, TaskState>;\n  memory_state: MemoryState;\n  file_system_state: FileSystemState;\n  database_state: DatabaseState;\n  checksum: string;\n  metadata: SnapshotMetadata;\n}\n\nexport interface SnapshotMetadata {\n  version: string;\n  created_by: string;\n  description: string;\n  tags: string[];\n  size_bytes: number;\n  compression_ratio: number;\n}\n\nexport interface AgentState {\n  id: string;\n  status: 'idle' | 'active' | 'error' | 'suspended';\n  current_task: string | null;\n  capabilities: string[];\n  memory: AgentMemory;\n  configuration: AgentConfig;\n  performance_metrics: PerformanceMetrics;\n  last_heartbeat: number;\n}\n\nexport interface AgentMemory {\n  working_memory: Record<string, any>;\n  long_term_memory: Record<string, any>;\n  shared_memory_keys: string[];\n  memory_usage_mb: number;\n}\n\nexport interface AgentConfig {\n  model: string;\n  temperature: number;\n  max_tokens: number;\n  timeout_ms: number;\n  retry_attempts: number;\n  custom_parameters: Record<string, any>;\n}\n\nexport interface SystemState {\n  version: string;\n  uptime_ms: number;\n  active_agents: number;\n  active_tasks: number;\n  memory_usage: ResourceMetrics;\n  configuration: SystemConfig;\n}\n\nexport interface SystemConfig {\n  max_agents: number;\n  max_concurrent_tasks: number;\n  truth_threshold: number;\n  verification_enabled: boolean;\n  rollback_enabled: boolean;\n}\n\nexport interface TaskState {\n  id: string;\n  status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n  assigned_agent: string;\n  dependencies: string[];\n  start_time: number;\n  end_time?: number;\n  progress_percentage: number;\n  result?: any;\n  error?: string;\n}\n\nexport interface MemoryState {\n  total_size_mb: number;\n  used_size_mb: number;\n  fragmentation_percentage: number;\n  cache_hit_rate: number;\n  active_sessions: number;\n}\n\nexport interface FileSystemState {\n  total_files: number;\n  total_size_mb: number;\n  last_modified: number;\n  checksums: Record<string, string>;\n  permissions_valid: boolean;\n}\n\nexport interface DatabaseState {\n  connection_status: 'connected' | 'disconnected' | 'error';\n  transaction_count: number;\n  pending_migrations: number;\n  data_integrity_check: boolean;\n  backup_status: 'current' | 'stale' | 'missing';\n}\n\n// Rollback System\nexport interface RollbackResult {\n  success: boolean;\n  checkpoint_id: string;\n  rollback_time_ms: number;\n  verification_details: VerificationDetails;\n  affected_components: string[];\n  error_message?: string;\n}\n\nexport interface VerificationDetails {\n  verified: boolean;\n  checks_performed: string[];\n  failed_checks: string[];\n  verification_time_ms: number;\n}\n\nexport type RollbackMode = 'strict' | 'partial' | 'force' | 'simulation';\n\nexport interface RollbackOptions {\n  mode: RollbackMode;\n  verify_before_rollback: boolean;\n  verify_after_rollback: boolean;\n  create_backup_before: boolean;\n  components_to_rollback: string[];\n  exclude_components: string[];\n}\n\n// Cross-Agent Testing\nexport interface CrossAgentTest {\n  id: string;\n  name: string;\n  description: string;\n  participating_agents: string[];\n  scenario: TestScenario;\n  expected_outcomes: ExpectedOutcome[];\n  validation_rules: ValidationRule[];\n  dependencies: string[];\n  timeout_ms: number;\n  retry_attempts: number;\n}\n\nexport interface TestScenario {\n  description: string;\n  setup: SetupStep[];\n  interactions: AgentInteraction[];\n  teardown: CleanupStep[];\n  parallel_execution: boolean;\n}\n\nexport interface SetupStep {\n  description: string;\n  action: string;\n  parameters: Record<string, any>;\n  expected_result: any;\n  timeout_ms: number;\n}\n\nexport interface AgentInteraction {\n  from_agent: string;\n  to_agent: string;\n  message_type: string;\n  payload: any;\n  expected_response: any;\n  timeout_ms: number;\n  retry_on_failure: boolean;\n}\n\nexport interface CleanupStep {\n  description: string;\n  action: string;\n  parameters: Record<string, any>;\n  ignore_errors: boolean;\n}\n\nexport interface ExpectedOutcome {\n  description: string;\n  assertion: string;\n  expected_value: any;\n  tolerance?: number;\n  mandatory: boolean;\n}\n\nexport interface ValidationRule {\n  name: string;\n  type: 'timing' | 'data' | 'state' | 'communication';\n  condition: string;\n  error_message: string;\n  weight: number;\n}\n\nexport interface CrossAgentTestResult {\n  test_id: string;\n  passed: boolean;\n  execution_time_ms: number;\n  details: TestExecutionDetails;\n  evidence: TestEvidence;\n  error?: string;\n}\n\nexport interface TestExecutionDetails {\n  setup_results: SetupResult[];\n  interaction_results: InteractionResult[];\n  teardown_results: CleanupResult[];\n  validation_results: ValidationResult[];\n}\n\nexport interface SetupResult {\n  step_index: number;\n  success: boolean;\n  execution_time_ms: number;\n  actual_result: any;\n  error_message?: string;\n}\n\nexport interface InteractionResult {\n  interaction_index: number;\n  success: boolean;\n  request_sent_at: number;\n  response_received_at: number;\n  actual_response: any;\n  latency_ms: number;\n  error_message?: string;\n}\n\nexport interface CleanupResult {\n  step_index: number;\n  success: boolean;\n  execution_time_ms: number;\n  error_message?: string;\n}\n\nexport interface ValidationResult {\n  rule_name: string;\n  passed: boolean;\n  expected_value: any;\n  actual_value: any;\n  error_message?: string;\n}\n\nexport interface TestEvidence {\n  agent_logs: Record<string, string[]>;\n  system_metrics: PerformanceMetrics;\n  communication_trace: CommunicationTrace[];\n  state_snapshots: StateSnapshot[];\n}\n\nexport interface CommunicationTrace {\n  timestamp: number;\n  from_agent: string;\n  to_agent: string;\n  message_type: string;\n  message_id: string;\n  status: 'sent' | 'delivered' | 'failed' | 'timeout';\n  latency_ms?: number;\n}\n\n// Reliability and Reporting\nexport interface ReliabilityReport {\n  agent_id: string;\n  reliability: number;\n  pass_rate: number;\n  sample_size: number;\n  trend: 'improving' | 'declining' | 'stable' | 'insufficient_data';\n  last_updated: number;\n  historical_scores: TruthScore[];\n}\n\nexport interface ConsistencyReport {\n  consistent: boolean;\n  inconsistencies: Inconsistency[];\n  checked_at: string;\n  repair_suggestions: RepairSuggestion[];\n  overall_health_score: number;\n}\n\nexport interface Inconsistency {\n  type: string;\n  component: string;\n  description: string;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  affected_items: string[];\n  detected_at: number;\n}\n\nexport interface RepairSuggestion {\n  inconsistency_type: string;\n  suggested_action: string;\n  risk_level: 'low' | 'medium' | 'high';\n  estimated_duration_ms: number;\n  requires_human_approval: boolean;\n}\n\nexport interface VerificationReport {\n  id: string;\n  generated_at: string;\n  report_type: 'summary' | 'detailed' | 'audit';\n  time_period: {\n    start: string;\n    end: string;\n  };\n  summary: ReportSummary;\n  agent_performance: Record<string, AgentPerformanceReport>;\n  system_health: SystemHealthReport;\n  trends: TrendAnalysis;\n  recommendations: Recommendation[];\n}\n\nexport interface ReportSummary {\n  total_verifications: number;\n  average_truth_score: number;\n  pass_rate: number;\n  critical_issues: number;\n  system_uptime_percentage: number;\n}\n\nexport interface AgentPerformanceReport {\n  agent_id: string;\n  total_tasks: number;\n  average_truth_score: number;\n  pass_rate: number;\n  trend: string;\n  last_active: string;\n  performance_metrics: PerformanceMetrics;\n}\n\nexport interface SystemHealthReport {\n  overall_health: number;\n  component_health: Record<string, number>;\n  active_issues: Issue[];\n  resolved_issues: Issue[];\n  uptime_statistics: UptimeStatistics;\n}\n\nexport interface Issue {\n  id: string;\n  type: string;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  description: string;\n  first_detected: string;\n  last_detected: string;\n  affected_components: string[];\n  resolution_status: 'open' | 'in_progress' | 'resolved' | 'ignored';\n}\n\nexport interface UptimeStatistics {\n  total_uptime_percentage: number;\n  longest_uptime_period_hours: number;\n  total_downtime_minutes: number;\n  number_of_incidents: number;\n  mean_time_to_recovery_minutes: number;\n}\n\nexport interface TrendAnalysis {\n  truth_score_trend: TrendData;\n  performance_trend: TrendData;\n  reliability_trend: TrendData;\n  issue_frequency_trend: TrendData;\n}\n\nexport interface TrendData {\n  direction: 'improving' | 'declining' | 'stable';\n  rate_of_change: number;\n  confidence: number;\n  data_points: number;\n}\n\nexport interface Recommendation {\n  id: string;\n  category: 'performance' | 'reliability' | 'security' | 'maintenance';\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  title: string;\n  description: string;\n  estimated_impact: string;\n  implementation_effort: 'low' | 'medium' | 'high';\n  action_items: string[];\n}\n\n// Manager Interfaces\nexport interface VerificationManager {\n  // Checkpoint management\n  createCheckpoint(description: string, scope: CheckpointScope): Promise<string>;\n  listCheckpoints(filter?: CheckpointFilter): Promise<Checkpoint[]>;\n  deleteCheckpoint(id: string): Promise<void>;\n  \n  // Truth scoring\n  calculateTruthScore(evidence: Evidence, claims: AgentClaims): Promise<TruthScore>;\n  storeTruthScore(score: TruthScore): Promise<void>;\n  getAgentReliability(agent_id: string): Promise<ReliabilityReport>;\n  \n  // State management\n  captureSystemState(scope: StateScope): Promise<StateSnapshot>;\n  rollbackToCheckpoint(checkpoint_id: string, options: RollbackOptions): Promise<RollbackResult>;\n  validateStateConsistency(): Promise<ConsistencyReport>;\n  \n  // Integration testing\n  runCrossAgentTests(suite?: string): Promise<TestResults>;\n  validateAgentCommunication(): Promise<CommunicationLogs>;\n  \n  // Reporting\n  generateVerificationReport(format: 'json' | 'html' | 'markdown'): Promise<string>;\n  exportMetrics(timeframe: string): Promise<MetricsExport>;\n}\n\nexport interface AgentVerificationInterface {\n  // Required by all agents\n  validateCapabilities(): Promise<CapabilityValidation>;\n  reportTaskClaims(task_id: string, claims: TaskClaims): Promise<void>;\n  provideEvidence(task_id: string): Promise<Evidence>;\n  \n  // State management\n  saveState(): Promise<AgentState>;\n  restoreState(state: AgentState): Promise<void>;\n  validateState(): Promise<StateValidation>;\n  \n  // Communication verification\n  validateMessage(message: AgentMessage): Promise<MessageValidation>;\n  reportCommunicationMetrics(): Promise<CommunicationMetrics>;\n}\n\nexport interface StateScope {\n  include_agents: boolean;\n  include_tasks: boolean;\n  include_memory: boolean;\n  include_filesystem: boolean;\n  include_database: boolean;\n  agent_filter?: string[];\n  task_filter?: string[];\n}\n\nexport interface CapabilityValidation {\n  valid: boolean;\n  missing_capabilities: string[];\n  outdated_capabilities: string[];\n  validation_time_ms: number;\n}\n\nexport interface TaskClaims {\n  task_id: string;\n  claims: Record<string, any>;\n  confidence: number;\n  evidence_provided: boolean;\n}\n\nexport interface AgentMessage {\n  id: string;\n  from: string;\n  to: string;\n  type: string;\n  payload: any;\n  timestamp: number;\n  correlation_id?: string;\n}\n\nexport interface MessageValidation {\n  valid: boolean;\n  issues: MessageIssue[];\n  validation_time_ms: number;\n}\n\nexport interface MessageIssue {\n  type: string;\n  description: string;\n  severity: 'low' | 'medium' | 'high';\n  field?: string;\n}\n\nexport interface CommunicationMetrics {\n  messages_sent: number;\n  messages_received: number;\n  average_latency_ms: number;\n  error_rate: number;\n  last_activity: number;\n}\n\nexport interface MetricsExport {\n  timeframe: string;\n  exported_at: string;\n  format: string;\n  data: Record<string, any>;\n  metadata: ExportMetadata;\n}\n\nexport interface ExportMetadata {\n  total_records: number;\n  file_size_bytes: number;\n  compression_used: boolean;\n  export_duration_ms: number;\n}"],"names":[],"mappings":"AA2zBA,WAKC"}