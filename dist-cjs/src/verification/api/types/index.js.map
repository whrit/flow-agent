{"version":3,"sources":["../../../../../src/verification/api/types/index.ts"],"sourcesContent":["/**\n * Verification API Types\n * Core type definitions for verification system\n */\n\nexport interface VerificationStatus {\n  id: string;\n  timestamp: number;\n  status: 'verified' | 'pending' | 'failed' | 'unknown';\n  confidence: number; // 0-1 score\n  source: string;\n  target: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface TruthMonitoringEvent {\n  id: string;\n  type: 'truth_change' | 'confidence_update' | 'verification_complete' | 'error';\n  timestamp: number;\n  data: any;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n}\n\nexport interface VerificationQuery {\n  id?: string;\n  sources?: string[];\n  targets?: string[];\n  status?: VerificationStatus['status'][];\n  confidence_min?: number;\n  confidence_max?: number;\n  timestamp_start?: number;\n  timestamp_end?: number;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface VerificationMetrics {\n  total_verifications: number;\n  successful_verifications: number;\n  failed_verifications: number;\n  pending_verifications: number;\n  average_confidence: number;\n  success_rate: number;\n  verification_rate: number; // per hour\n  response_time: {\n    avg: number;\n    p50: number;\n    p95: number;\n    p99: number;\n  };\n}\n\nexport interface AgentVerificationConfig {\n  agent_id: string;\n  verification_enabled: boolean;\n  confidence_threshold: number;\n  auto_verify: boolean;\n  webhook_url?: string;\n  rate_limit: {\n    requests_per_minute: number;\n    burst_capacity: number;\n  };\n}\n\nexport interface VerificationRule {\n  id: string;\n  name: string;\n  description: string;\n  condition: string; // JSON Logic or similar\n  action: 'approve' | 'reject' | 'flag' | 'escalate';\n  priority: number;\n  enabled: boolean;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface APIResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: {\n    code: string;\n    message: string;\n    details?: any;\n  };\n  metadata?: {\n    timestamp: number;\n    request_id: string;\n    version: string;\n  };\n}\n\nexport interface WebSocketMessage {\n  type: 'subscribe' | 'unsubscribe' | 'event' | 'error' | 'heartbeat';\n  payload?: any;\n  id?: string;\n}\n\nexport interface SubscriptionFilter {\n  event_types?: TruthMonitoringEvent['type'][];\n  severity_levels?: TruthMonitoringEvent['severity'][];\n  sources?: string[];\n  targets?: string[];\n}\n\nexport interface GraphQLContext {\n  user_id?: string;\n  agent_id?: string;\n  api_key?: string;\n  rate_limit_remaining?: number;\n}\n\nexport interface VerificationBatch {\n  id: string;\n  items: VerificationRequest[];\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  created_at: number;\n  completed_at?: number;\n  results?: VerificationStatus[];\n}\n\nexport interface VerificationRequest {\n  source: string;\n  target: string;\n  metadata?: Record<string, any>;\n  priority?: 'low' | 'normal' | 'high' | 'urgent';\n  timeout?: number;\n}\n\nexport interface HealthStatus {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  timestamp: number;\n  services: {\n    api: ServiceHealth;\n    websocket: ServiceHealth;\n    graphql: ServiceHealth;\n    database: ServiceHealth;\n    cache: ServiceHealth;\n  };\n  metrics: {\n    uptime: number;\n    memory_usage: number;\n    cpu_usage: number;\n    active_connections: number;\n  };\n}\n\nexport interface ServiceHealth {\n  status: 'up' | 'down' | 'degraded';\n  response_time?: number;\n  last_check: number;\n  error_count: number;\n}\n"],"names":[],"mappings":"AAkJA,WAKC"}