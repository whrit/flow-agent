{"version":3,"sources":["../../../../src/cli/commands/hook-types.ts"],"sourcesContent":["/**\n * TypeScript type definitions for all hook commands\n */\n\nexport interface BaseHookOptions {\n  description?: string;\n  metadata?: Record<string, any>;\n  verbose?: boolean;\n}\n\nexport interface PreTaskOptions extends BaseHookOptions {\n  autoSpawnAgents?: boolean;\n  complexity?: 'low' | 'medium' | 'high';\n  estimatedMinutes?: number;\n  requiresResearch?: boolean;\n  requiresTesting?: boolean;\n}\n\nexport interface PostTaskOptions extends BaseHookOptions {\n  taskId: string;\n  analyzePerformance?: boolean;\n  generateReport?: boolean;\n}\n\nexport interface PreEditOptions extends BaseHookOptions {\n  file: string;\n  operation?: 'read' | 'write' | 'edit' | 'delete';\n  validate?: boolean;\n  autoAssignAgents?: boolean;\n  'auto-assign-agents'?: boolean;\n  loadContext?: boolean;\n  'load-context'?: boolean;\n}\n\nexport interface PostEditOptions extends BaseHookOptions {\n  file: string;\n  memoryKey?: string;\n  'memory-key'?: string;\n  format?: boolean;\n  analyze?: boolean;\n  updateMemory?: boolean;\n  'update-memory'?: boolean;\n  trainNeural?: boolean;\n  'train-neural'?: boolean;\n}\n\nexport interface PreCommandOptions extends BaseHookOptions {\n  command: string;\n  validate?: boolean;\n  'validate-safety'?: boolean;\n  sandbox?: boolean;\n  prepareResources?: boolean;\n  'prepare-resources'?: boolean;\n}\n\nexport interface PostCommandOptions extends BaseHookOptions {\n  command: string;\n  exitCode?: number;\n  'exit-code'?: number;\n  duration?: number;\n  trackMetrics?: boolean;\n  'track-metrics'?: boolean;\n  storeResults?: boolean;\n  'store-results'?: boolean;\n  output?: string;\n}\n\nexport interface SessionStartOptions extends BaseHookOptions {\n  sessionId?: string;\n  loadPrevious?: boolean;\n  autoRestore?: boolean;\n}\n\nexport interface SessionEndOptions extends BaseHookOptions {\n  sessionId?: string;\n  exportMetrics?: boolean;\n  'export-metrics'?: boolean;\n  generateSummary?: boolean;\n  'generate-summary'?: boolean;\n  persistState?: boolean;\n  'persist-state'?: boolean;\n  saveTo?: string;\n}\n\nexport interface SessionRestoreOptions extends BaseHookOptions {\n  sessionId: string;\n  loadMemory?: boolean;\n  loadAgents?: boolean;\n  loadTasks?: boolean;\n}\n\nexport interface PreSearchOptions extends BaseHookOptions {\n  query: string;\n  cacheResults?: boolean;\n  maxResults?: number;\n}\n\nexport interface NotificationOptions extends BaseHookOptions {\n  message: string;\n  level?: 'info' | 'warning' | 'error';\n  telemetry?: boolean;\n  persist?: boolean;\n}\n\nexport interface PerformanceOptions extends BaseHookOptions {\n  operation?: string;\n  duration?: number;\n  metrics?: Record<string, number>;\n}\n\nexport interface MemorySyncOptions extends BaseHookOptions {\n  namespace?: string;\n  direction?: 'push' | 'pull' | 'sync';\n  target?: string;\n}\n\nexport interface TelemetryOptions extends BaseHookOptions {\n  event: string;\n  data?: Record<string, any>;\n  tags?: string[];\n}\n\nexport type HookType =\n  | 'pre-task'\n  | 'post-task'\n  | 'pre-edit'\n  | 'post-edit'\n  | 'pre-command'\n  | 'post-command'\n  | 'session-start'\n  | 'session-end'\n  | 'session-restore'\n  | 'pre-search'\n  | 'notification'\n  | 'performance'\n  | 'memory-sync'\n  | 'telemetry';\n\nexport interface HookResult {\n  success: boolean;\n  message?: string;\n  data?: any;\n  error?: Error;\n}\n\nexport interface HookCommandOptions {\n  args: string[];\n}\n"],"names":[],"mappings":"AAiJA,WAEC"}