{"version":3,"sources":["../../../../../src/cli/commands/start/event-emitter.ts"],"sourcesContent":["/**\n * Simple EventEmitter implementation for process management\n */\n\ntype EventHandler = (...args: any[]) => void;\n\nexport class EventEmitter {\n  private events: Map<string, EventHandler[]> = new Map();\n\n  on(event: string, handler: EventHandler): void {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)!.push(handler);\n  }\n\n  emit(event: string, ...args: any[]): void {\n    const handlers = this.events.get(event);\n    if (handlers) {\n      handlers.forEach((handler) => handler(...args));\n    }\n  }\n\n  off(event: string, handler: EventHandler): void {\n    const handlers = this.events.get(event);\n    if (handlers) {\n      const index = handlers.indexOf(handler);\n      if (index > -1) {\n        handlers.splice(index, 1);\n      }\n    }\n  }\n\n  once(event: string, handler: EventHandler): void {\n    const onceHandler = (...args: any[]) => {\n      handler(...args);\n      this.off(event, onceHandler);\n    };\n    this.on(event, onceHandler);\n  }\n}\n"],"names":["EventEmitter","events","Map","on","event","handler","has","set","get","push","emit","args","handlers","forEach","off","index","indexOf","splice","once","onceHandler"],"mappings":"AAMA,OAAO,MAAMA;IACHC,SAAsC,IAAIC,MAAM;IAExDC,GAAGC,KAAa,EAAEC,OAAqB,EAAQ;QAC7C,IAAI,CAAC,IAAI,CAACJ,MAAM,CAACK,GAAG,CAACF,QAAQ;YAC3B,IAAI,CAACH,MAAM,CAACM,GAAG,CAACH,OAAO,EAAE;QAC3B;QACA,IAAI,CAACH,MAAM,CAACO,GAAG,CAACJ,OAAQK,IAAI,CAACJ;IAC/B;IAEAK,KAAKN,KAAa,EAAE,GAAGO,IAAW,EAAQ;QACxC,MAAMC,WAAW,IAAI,CAACX,MAAM,CAACO,GAAG,CAACJ;QACjC,IAAIQ,UAAU;YACZA,SAASC,OAAO,CAAC,CAACR,UAAYA,WAAWM;QAC3C;IACF;IAEAG,IAAIV,KAAa,EAAEC,OAAqB,EAAQ;QAC9C,MAAMO,WAAW,IAAI,CAACX,MAAM,CAACO,GAAG,CAACJ;QACjC,IAAIQ,UAAU;YACZ,MAAMG,QAAQH,SAASI,OAAO,CAACX;YAC/B,IAAIU,QAAQ,CAAC,GAAG;gBACdH,SAASK,MAAM,CAACF,OAAO;YACzB;QACF;IACF;IAEAG,KAAKd,KAAa,EAAEC,OAAqB,EAAQ;QAC/C,MAAMc,cAAc,CAAC,GAAGR;YACtBN,WAAWM;YACX,IAAI,CAACG,GAAG,CAACV,OAAOe;QAClB;QACA,IAAI,CAAChB,EAAE,CAACC,OAAOe;IACjB;AACF"}