{"version":3,"sources":["../../../../../src/cli/commands/hive-mind/resume.ts"],"sourcesContent":["#!/usr/bin/env node\n/**\n * Hive Mind Resume Command\n *\n * Resume paused swarm sessions\n */\n\nimport { Command } from '../commander-fix.js';\nimport chalk from 'chalk';\nimport { HiveMindSessionManager } from '../../simple-commands/hive-mind/session-manager.js';\nimport inquirer from 'inquirer';\n\nexport const resumeCommand = new Command('resume')\n  .description('Resume paused hive mind sessions')\n  .option('-s, --session <id>', 'Resume specific session by ID')\n  .action(async (options) => {\n    const sessionManager = new HiveMindSessionManager();\n\n    try {\n      if (options.session) {\n        // Resume specific session\n        const sessionId = options.session;\n\n        console.log(chalk.cyan(`Resuming session ${sessionId}...`));\n        const session = await sessionManager.resumeSession(sessionId);\n\n        console.log(chalk.green(`✓ Session ${sessionId} resumed successfully`));\n        console.log(chalk.gray(`Swarm: ${(session as any).swarm_name || 'N/A'}`));\n        console.log(chalk.gray(`Objective: ${(session as any).objective || 'N/A'}`));\n        console.log(chalk.gray(`Progress: ${session.statistics.completionPercentage}%`));\n      } else {\n        // Interactive selection\n        const sessions = await sessionManager.getActiveSessions();\n        const pausedSessions = sessions.filter((s: any) => s.status === 'paused');\n\n        if (pausedSessions.length === 0) {\n          console.log(chalk.yellow('No paused sessions found to resume'));\n          return;\n        }\n\n        const { sessionId } = await inquirer.prompt([\n          {\n            type: 'list',\n            name: 'sessionId',\n            message: 'Select session to resume:',\n            choices: pausedSessions.map((s: any) => ({\n              name: `${s.swarm_name} (${s.id}) - ${s.completion_percentage}% complete`,\n              value: s.id,\n            })),\n          },\n        ]);\n\n        console.log(chalk.cyan(`Resuming session ${sessionId}...`));\n        const session = await sessionManager.resumeSession(sessionId);\n\n        console.log(chalk.green(`✓ Session resumed successfully`));\n        console.log(chalk.gray(`Swarm: ${(session as any).swarm_name || 'N/A'}`));\n        console.log(chalk.gray(`Objective: ${(session as any).objective || 'N/A'}`));\n        console.log(chalk.gray(`Progress: ${session.statistics.completionPercentage}%`));\n      }\n    } catch (error) {\n      console.error(chalk.red('Error resuming session:'), (error as Error).message);\n      process.exit(1);\n    } finally {\n      sessionManager.close();\n    }\n  });\n"],"names":["Command","chalk","HiveMindSessionManager","inquirer","resumeCommand","description","option","action","options","sessionManager","session","sessionId","console","log","cyan","resumeSession","green","gray","swarm_name","objective","statistics","completionPercentage","sessions","getActiveSessions","pausedSessions","filter","s","status","length","yellow","prompt","type","name","message","choices","map","id","completion_percentage","value","error","red","process","exit","close"],"mappings":";AAOA,SAASA,OAAO,QAAQ,sBAAsB;AAC9C,OAAOC,WAAW,QAAQ;AAC1B,SAASC,sBAAsB,QAAQ,qDAAqD;AAC5F,OAAOC,cAAc,WAAW;AAEhC,OAAO,MAAMC,gBAAgB,IAAIJ,QAAQ,UACtCK,WAAW,CAAC,oCACZC,MAAM,CAAC,sBAAsB,iCAC7BC,MAAM,CAAC,OAAOC;IACb,MAAMC,iBAAiB,IAAIP;IAE3B,IAAI;QACF,IAAIM,QAAQE,OAAO,EAAE;YAEnB,MAAMC,YAAYH,QAAQE,OAAO;YAEjCE,QAAQC,GAAG,CAACZ,MAAMa,IAAI,CAAC,CAAC,iBAAiB,EAAEH,UAAU,GAAG,CAAC;YACzD,MAAMD,UAAU,MAAMD,eAAeM,aAAa,CAACJ;YAEnDC,QAAQC,GAAG,CAACZ,MAAMe,KAAK,CAAC,CAAC,UAAU,EAAEL,UAAU,qBAAqB,CAAC;YACrEC,QAAQC,GAAG,CAACZ,MAAMgB,IAAI,CAAC,CAAC,OAAO,EAAE,AAACP,QAAgBQ,UAAU,IAAI,OAAO;YACvEN,QAAQC,GAAG,CAACZ,MAAMgB,IAAI,CAAC,CAAC,WAAW,EAAE,AAACP,QAAgBS,SAAS,IAAI,OAAO;YAC1EP,QAAQC,GAAG,CAACZ,MAAMgB,IAAI,CAAC,CAAC,UAAU,EAAEP,QAAQU,UAAU,CAACC,oBAAoB,CAAC,CAAC,CAAC;QAChF,OAAO;YAEL,MAAMC,WAAW,MAAMb,eAAec,iBAAiB;YACvD,MAAMC,iBAAiBF,SAASG,MAAM,CAAC,CAACC,IAAWA,EAAEC,MAAM,KAAK;YAEhE,IAAIH,eAAeI,MAAM,KAAK,GAAG;gBAC/BhB,QAAQC,GAAG,CAACZ,MAAM4B,MAAM,CAAC;gBACzB;YACF;YAEA,MAAM,EAAElB,SAAS,EAAE,GAAG,MAAMR,SAAS2B,MAAM,CAAC;gBAC1C;oBACEC,MAAM;oBACNC,MAAM;oBACNC,SAAS;oBACTC,SAASV,eAAeW,GAAG,CAAC,CAACT,IAAY,CAAA;4BACvCM,MAAM,GAAGN,EAAER,UAAU,CAAC,EAAE,EAAEQ,EAAEU,EAAE,CAAC,IAAI,EAAEV,EAAEW,qBAAqB,CAAC,UAAU,CAAC;4BACxEC,OAAOZ,EAAEU,EAAE;wBACb,CAAA;gBACF;aACD;YAEDxB,QAAQC,GAAG,CAACZ,MAAMa,IAAI,CAAC,CAAC,iBAAiB,EAAEH,UAAU,GAAG,CAAC;YACzD,MAAMD,UAAU,MAAMD,eAAeM,aAAa,CAACJ;YAEnDC,QAAQC,GAAG,CAACZ,MAAMe,KAAK,CAAC,CAAC,8BAA8B,CAAC;YACxDJ,QAAQC,GAAG,CAACZ,MAAMgB,IAAI,CAAC,CAAC,OAAO,EAAE,AAACP,QAAgBQ,UAAU,IAAI,OAAO;YACvEN,QAAQC,GAAG,CAACZ,MAAMgB,IAAI,CAAC,CAAC,WAAW,EAAE,AAACP,QAAgBS,SAAS,IAAI,OAAO;YAC1EP,QAAQC,GAAG,CAACZ,MAAMgB,IAAI,CAAC,CAAC,UAAU,EAAEP,QAAQU,UAAU,CAACC,oBAAoB,CAAC,CAAC,CAAC;QAChF;IACF,EAAE,OAAOkB,OAAO;QACd3B,QAAQ2B,KAAK,CAACtC,MAAMuC,GAAG,CAAC,4BAA4B,AAACD,MAAgBN,OAAO;QAC5EQ,QAAQC,IAAI,CAAC;IACf,SAAU;QACRjC,eAAekC,KAAK;IACtB;AACF,GAAG"}