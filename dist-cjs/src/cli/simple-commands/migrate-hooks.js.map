{"version":3,"sources":["../../../../src/cli/simple-commands/migrate-hooks.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * CLI command wrapper for migrate-hooks script\n */\n\nimport { execSync } from 'child_process';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\nimport { promises as fs } from 'fs';\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\nexport async function migrateHooksCommand(flags, args) {\n  console.log('üîÑ Claude Flow Hooks Migration\\n');\n\n  try {\n    // Find the migration script\n    const scriptPath = path.join(__dirname, '../../../scripts/migrate-hooks.js');\n\n    // Check if script exists\n    try {\n      await fs.access(scriptPath);\n    } catch {\n      console.error('‚ùå Migration script not found. Please ensure you have the latest version.');\n      process.exit(1);\n    }\n\n    // Build command with any additional arguments\n    const command = ['node', scriptPath];\n    if (args.length > 0) {\n      command.push(...args);\n    }\n\n    // Execute the migration script\n    execSync(command.join(' '), {\n      stdio: 'inherit',\n      cwd: process.cwd(),\n    });\n  } catch (error) {\n    console.error('‚ùå Migration failed:', error.message);\n    process.exit(1);\n  }\n}\n\n// Export the command configuration\nexport const migrateHooksCommandConfig = {\n  handler: migrateHooksCommand,\n  description: 'Migrate settings.json hooks to Claude Code 1.0.51+ format',\n  usage: 'migrate-hooks [settings-file]',\n  examples: [\n    'claude-flow migrate-hooks                    # Migrate all found settings.json files',\n    'claude-flow migrate-hooks .claude/settings.json  # Migrate specific file',\n  ],\n  details: `\nMigrates old hooks format to new Claude Code 1.0.51+ format:\n  ‚Ä¢ Converts object-based hooks to array-based format\n  ‚Ä¢ Creates backup before making changes\n  ‚Ä¢ Removes unsupported fields (mcpServers, features, performance)\n  ‚Ä¢ Searches common locations if no file specified\n\nThe migration is safe and creates backups of original files.`,\n};\n"],"names":["execSync","path","fileURLToPath","promises","fs","__dirname","dirname","url","migrateHooksCommand","flags","args","console","log","scriptPath","join","access","error","process","exit","command","length","push","stdio","cwd","message","migrateHooksCommandConfig","handler","description","usage","examples","details"],"mappings":";AAMA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,UAAU,OAAO;AACxB,SAASC,aAAa,QAAQ,MAAM;AACpC,SAASC,YAAYC,EAAE,QAAQ,KAAK;AAEpC,MAAMC,YAAYJ,KAAKK,OAAO,CAACJ,cAAc,YAAYK,GAAG;AAE5D,OAAO,eAAeC,oBAAoBC,KAAK,EAAEC,IAAI;IACnDC,QAAQC,GAAG,CAAC;IAEZ,IAAI;QAEF,MAAMC,aAAaZ,KAAKa,IAAI,CAACT,WAAW;QAGxC,IAAI;YACF,MAAMD,GAAGW,MAAM,CAACF;QAClB,EAAE,OAAM;YACNF,QAAQK,KAAK,CAAC;YACdC,QAAQC,IAAI,CAAC;QACf;QAGA,MAAMC,UAAU;YAAC;YAAQN;SAAW;QACpC,IAAIH,KAAKU,MAAM,GAAG,GAAG;YACnBD,QAAQE,IAAI,IAAIX;QAClB;QAGAV,SAASmB,QAAQL,IAAI,CAAC,MAAM;YAC1BQ,OAAO;YACPC,KAAKN,QAAQM,GAAG;QAClB;IACF,EAAE,OAAOP,OAAO;QACdL,QAAQK,KAAK,CAAC,uBAAuBA,MAAMQ,OAAO;QAClDP,QAAQC,IAAI,CAAC;IACf;AACF;AAGA,OAAO,MAAMO,4BAA4B;IACvCC,SAASlB;IACTmB,aAAa;IACbC,OAAO;IACPC,UAAU;QACR;QACA;KACD;IACDC,SAAS,CAAC;;;;;;;4DAOgD,CAAC;AAC7D,EAAE"}