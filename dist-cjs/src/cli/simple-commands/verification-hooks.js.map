{"version":3,"sources":["../../../../src/cli/simple-commands/verification-hooks.js"],"sourcesContent":["#!/usr/bin/env node\n/**\n * Verification Hooks CLI\n * Provides verification integration for other commands via CLI\n */\n\nimport { execSync } from 'child_process';\nimport fs from 'fs';\nimport path from 'path';\n\n// Parse command line arguments\nconst args = process.argv.slice(2);\nconst command = args[0];\nconst taskId = args[1];\nconst agentType = args[2] || 'unknown';\nconst additionalData = args[3] ? JSON.parse(args[3]) : {};\n\n// Verification thresholds\nconst THRESHOLDS = {\n  strict: 0.95,\n  moderate: 0.85,\n  development: 0.75\n};\n\n// Get current mode from environment or default\nconst mode = process.env.VERIFICATION_MODE || 'moderate';\nconst threshold = THRESHOLDS[mode];\n\n/**\n * Pre-task verification\n */\nasync function preTaskVerification(taskId, agentType, data) {\n  console.log(`üîç Pre-task verification: ${taskId} (${agentType})`);\n  \n  const checks = [];\n  \n  // Check git status\n  try {\n    const gitStatus = execSync('git status --porcelain', { encoding: 'utf8' });\n    const isClean = gitStatus.trim() === '';\n    checks.push({\n      name: 'git-status',\n      passed: isClean || data.allowDirty,\n      score: isClean ? 1.0 : 0.7\n    });\n  } catch (e) {\n    checks.push({ name: 'git-status', passed: false, score: 0 });\n  }\n  \n  // Check npm dependencies\n  if (fs.existsSync('package.json')) {\n    try {\n      execSync('npm ls --depth=0', { stdio: 'ignore' });\n      checks.push({ name: 'npm-deps', passed: true, score: 1.0 });\n    } catch {\n      checks.push({ name: 'npm-deps', passed: false, score: 0.5 });\n    }\n  }\n  \n  const avgScore = checks.reduce((sum, c) => sum + c.score, 0) / checks.length;\n  const passed = avgScore >= threshold;\n  \n  // Store result\n  storeVerification(taskId, 'pre', { \n    passed, \n    score: avgScore, \n    checks,\n    agentType \n  });\n  \n  if (!passed) {\n    console.error(`‚ùå Pre-task verification failed (${avgScore.toFixed(2)} < ${threshold})`);\n    process.exit(1);\n  }\n  \n  console.log(`‚úÖ Pre-task verification passed (${avgScore.toFixed(2)})`);\n  return 0;\n}\n\n/**\n * Post-task verification\n */\nasync function postTaskVerification(taskId, agentType, data) {\n  console.log(`üîç Post-task verification: ${taskId} (${agentType})`);\n  \n  const checks = [];\n  \n  // Run type checking if available\n  if (fs.existsSync('tsconfig.json') || fs.existsSync('package.json')) {\n    try {\n      const result = execSync('npm run typecheck 2>&1 || true', { encoding: 'utf8' });\n      const hasErrors = result.toLowerCase().includes('error');\n      checks.push({\n        name: 'typecheck',\n        passed: !hasErrors,\n        score: hasErrors ? 0.5 : 1.0\n      });\n    } catch {\n      checks.push({ name: 'typecheck', passed: false, score: 0.3 });\n    }\n  }\n  \n  // Run tests if available\n  if (fs.existsSync('package.json')) {\n    try {\n      const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));\n      if (pkg.scripts && pkg.scripts.test) {\n        const result = execSync('npm test 2>&1 || true', { encoding: 'utf8' });\n        const passed = result.includes('PASS') || result.includes('passing');\n        checks.push({\n          name: 'tests',\n          passed,\n          score: passed ? 1.0 : 0.4\n        });\n      }\n    } catch {\n      checks.push({ name: 'tests', passed: false, score: 0.2 });\n    }\n  }\n  \n  // Run linting if available\n  if (fs.existsSync('.eslintrc.js') || fs.existsSync('.eslintrc.json')) {\n    try {\n      const result = execSync('npm run lint 2>&1 || true', { encoding: 'utf8' });\n      const hasErrors = result.toLowerCase().includes('error');\n      checks.push({\n        name: 'lint',\n        passed: !hasErrors,\n        score: hasErrors ? 0.6 : 1.0\n      });\n    } catch {\n      checks.push({ name: 'lint', passed: false, score: 0.4 });\n    }\n  }\n  \n  // If no checks were possible, use default\n  if (checks.length === 0) {\n    checks.push({\n      name: 'default',\n      passed: true,\n      score: 0.8\n    });\n  }\n  \n  const avgScore = checks.reduce((sum, c) => sum + c.score, 0) / checks.length;\n  const passed = avgScore >= threshold;\n  \n  // Store result\n  storeVerification(taskId, 'post', { \n    passed, \n    score: avgScore, \n    checks,\n    agentType \n  });\n  \n  if (!passed) {\n    console.error(`‚ùå Post-task verification failed (${avgScore.toFixed(2)} < ${threshold})`);\n    \n    // Attempt rollback if enabled\n    if (process.env.VERIFICATION_ROLLBACK === 'true') {\n      console.log('üîÑ Attempting rollback...');\n      try {\n        execSync('git reset --hard HEAD');\n        console.log('‚úÖ Rollback completed');\n      } catch (e) {\n        console.error('‚ùå Rollback failed:', e.message);\n      }\n    }\n    \n    process.exit(1);\n  }\n  \n  console.log(`‚úÖ Post-task verification passed (${avgScore.toFixed(2)})`);\n  return 0;\n}\n\n/**\n * Training integration - feed results to training system\n */\nasync function feedToTraining(taskId, agentType, data) {\n  const verificationData = loadVerification(taskId);\n  \n  if (!verificationData) {\n    console.log('‚ö†Ô∏è  No verification data to feed to training');\n    return;\n  }\n  \n  // Format for training system\n  const trainingData = {\n    taskId,\n    agentType,\n    preScore: verificationData.pre?.score || 0,\n    postScore: verificationData.post?.score || 0,\n    success: verificationData.post?.passed || false,\n    timestamp: new Date().toISOString()\n  };\n  \n  // Store in training data file\n  const trainingFile = '.claude-flow/training/verification-data.jsonl';\n  const dir = path.dirname(trainingFile);\n  \n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir, { recursive: true });\n  }\n  \n  fs.appendFileSync(trainingFile, JSON.stringify(trainingData) + '\\n');\n  console.log(`üìä Verification data fed to training system`);\n  \n  // If score is particularly low, flag for attention\n  if (trainingData.postScore < 0.5) {\n    console.warn(`‚ö†Ô∏è  Low verification score for ${agentType}: ${trainingData.postScore}`);\n  }\n}\n\n/**\n * Store verification results\n */\nfunction storeVerification(taskId, phase, data) {\n  const file = '.swarm/verification-memory.json';\n  const dir = path.dirname(file);\n  \n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir, { recursive: true });\n  }\n  \n  let memory = {};\n  if (fs.existsSync(file)) {\n    try {\n      memory = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch {\n      memory = {};\n    }\n  }\n  \n  if (!memory.history) memory.history = [];\n  if (!memory.tasks) memory.tasks = {};\n  \n  // Store task-specific data\n  if (!memory.tasks[taskId]) {\n    memory.tasks[taskId] = {};\n  }\n  memory.tasks[taskId][phase] = data;\n  \n  // Add to history\n  memory.history.push({\n    taskId,\n    phase,\n    ...data,\n    timestamp: new Date().toISOString()\n  });\n  \n  // Keep only last 1000 entries\n  if (memory.history.length > 1000) {\n    memory.history = memory.history.slice(-1000);\n  }\n  \n  fs.writeFileSync(file, JSON.stringify(memory, null, 2));\n}\n\n/**\n * Load verification results\n */\nfunction loadVerification(taskId) {\n  const file = '.swarm/verification-memory.json';\n  \n  if (!fs.existsSync(file)) {\n    return null;\n  }\n  \n  try {\n    const memory = JSON.parse(fs.readFileSync(file, 'utf8'));\n    return memory.tasks?.[taskId] || null;\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Show verification status\n */\nfunction showStatus() {\n  const file = '.swarm/verification-memory.json';\n  \n  if (!fs.existsSync(file)) {\n    console.log('No verification history found');\n    return;\n  }\n  \n  try {\n    const memory = JSON.parse(fs.readFileSync(file, 'utf8'));\n    const recent = memory.history?.slice(-10) || [];\n    \n    console.log(`üìä Verification Status`);\n    console.log(`Mode: ${mode} (threshold: ${threshold})`);\n    console.log(`Total verifications: ${memory.history?.length || 0}`);\n    \n    if (recent.length > 0) {\n      console.log(`\\nRecent verifications:`);\n      for (const v of recent) {\n        const status = v.passed ? '‚úÖ' : '‚ùå';\n        console.log(`  ${status} ${v.taskId} (${v.phase}): ${v.score.toFixed(2)}`);\n      }\n    }\n  } catch (e) {\n    console.error('Error reading verification history:', e.message);\n  }\n}\n\n// Main CLI handler\nasync function main() {\n  switch (command) {\n    case 'pre':\n      return preTaskVerification(taskId, agentType, additionalData);\n    \n    case 'post':\n      return postTaskVerification(taskId, agentType, additionalData);\n    \n    case 'train':\n      return feedToTraining(taskId, agentType, additionalData);\n    \n    case 'status':\n      return showStatus();\n    \n    default:\n      console.log('Usage: verification-hooks <pre|post|train|status> <taskId> [agentType] [data]');\n      process.exit(1);\n  }\n}\n\n// Run if called directly\nif (require.main === module) {\n  main().catch(console.error);\n}\n\n// Export for programmatic use\nexport {\n  preTaskVerification,\n  postTaskVerification,\n  feedToTraining,\n  showStatus\n};"],"names":["execSync","fs","path","args","process","argv","slice","command","taskId","agentType","additionalData","JSON","parse","THRESHOLDS","strict","moderate","development","mode","env","VERIFICATION_MODE","threshold","preTaskVerification","data","console","log","checks","gitStatus","encoding","isClean","trim","push","name","passed","allowDirty","score","e","existsSync","stdio","avgScore","reduce","sum","c","length","storeVerification","error","toFixed","exit","postTaskVerification","result","hasErrors","toLowerCase","includes","pkg","readFileSync","scripts","test","VERIFICATION_ROLLBACK","message","feedToTraining","verificationData","loadVerification","trainingData","preScore","pre","postScore","post","success","timestamp","Date","toISOString","trainingFile","dir","dirname","mkdirSync","recursive","appendFileSync","stringify","warn","phase","file","memory","history","tasks","writeFileSync","showStatus","recent","v","status","main","require","module","catch"],"mappings":"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"}