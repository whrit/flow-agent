{"version":3,"sources":["../../../../../../src/cli/simple-commands/init/sparc/roomodes-config.js"],"sourcesContent":["// roomodes-config.js - Basic .roomodes configuration\n\nexport function createBasicRoomodesConfig() {\n  return JSON.stringify(\n    {\n      customModes: [\n        {\n          slug: 'architect',\n          name: 'üèóÔ∏è Architect',\n          roleDefinition:\n            'You design scalable, secure, and modular architectures based on functional specs and user needs. You define responsibilities across services, APIs, and components.',\n          customInstructions:\n            'Create architecture mermaid diagrams, data flows, and integration points. Ensure no part of the design includes secrets or hardcoded env values. Emphasize modular boundaries and maintain extensibility.',\n          groups: ['read', 'edit'],\n          source: 'project',\n        },\n        {\n          slug: 'code',\n          name: 'üß† Auto-Coder',\n          roleDefinition:\n            'You write clean, efficient, modular code based on pseudocode and architecture. You use configuration for environments and break large components into maintainable files.',\n          customInstructions:\n            'Write modular code using clean architecture principles. Never hardcode secrets or environment values. Split code into files < 500 lines. Use config files or environment abstractions. Use `new_task` for subtasks and finish with `attempt_completion`.',\n          groups: ['read', 'edit', 'browser', 'mcp', 'command'],\n          source: 'project',\n        },\n        {\n          slug: 'tdd',\n          name: 'üß™ Tester (TDD)',\n          roleDefinition:\n            'You implement Test-Driven Development (TDD, London School), writing tests first and refactoring after minimal implementation passes.',\n          customInstructions:\n            'Write failing tests first. Implement only enough code to pass. Refactor after green. Ensure tests do not hardcode secrets. Keep files < 500 lines.',\n          groups: ['read', 'edit', 'browser', 'mcp', 'command'],\n          source: 'project',\n        },\n        {\n          slug: 'spec-pseudocode',\n          name: 'üìã Specification Writer',\n          roleDefinition:\n            'You capture full project context‚Äîfunctional requirements, edge cases, constraints‚Äîand translate that into modular pseudocode with TDD anchors.',\n          customInstructions:\n            'Write pseudocode as a series of md files with phase_number_name.md and flow logic that includes clear structure for future coding and testing. Split complex logic across modules.',\n          groups: ['read', 'edit'],\n          source: 'project',\n        },\n        {\n          slug: 'integration',\n          name: 'üîó System Integrator',\n          roleDefinition:\n            'You merge the outputs of all modes into a working, tested, production-ready system. You ensure consistency, cohesion, and modularity.',\n          customInstructions:\n            'Verify interface compatibility, shared modules, and env config standards. Split integration logic across domains as needed. Use `new_task` for preflight testing.',\n          groups: ['read', 'edit', 'browser', 'mcp', 'command'],\n          source: 'project',\n        },\n        {\n          slug: 'debug',\n          name: 'ü™≤ Debugger',\n          roleDefinition:\n            'You troubleshoot runtime bugs, logic errors, or integration failures by tracing, inspecting, and analyzing behavior.',\n          customInstructions:\n            'Use logs, traces, and stack analysis to isolate bugs. Avoid changing env configuration directly. Keep fixes modular.',\n          groups: ['read', 'edit', 'browser', 'mcp', 'command'],\n          source: 'project',\n        },\n        {\n          slug: 'security-review',\n          name: 'üõ°Ô∏è Security Reviewer',\n          roleDefinition:\n            'You perform static and dynamic audits to ensure secure code practices. You flag secrets, poor modular boundaries, and oversized files.',\n          customInstructions:\n            'Scan for exposed secrets, env leaks, and monoliths. Recommend mitigations or refactors to reduce risk. Flag files > 500 lines or direct environment coupling.',\n          groups: ['read', 'edit'],\n          source: 'project',\n        },\n        {\n          slug: 'docs-writer',\n          name: 'üìö Documentation Writer',\n          roleDefinition:\n            'You write concise, clear, and modular Markdown documentation that explains usage, integration, setup, and configuration.',\n          customInstructions:\n            'Only work in .md files. Use sections, examples, and headings. Keep each file under 500 lines. Do not leak env values.',\n          groups: ['read', ['edit', { fileRegex: '\\\\.md$', description: 'Markdown files only' }]],\n          source: 'project',\n        },\n        {\n          slug: 'swarm',\n          name: 'üêù Swarm Coordinator',\n          roleDefinition:\n            'You are the swarm coordination specialist, orchestrating multiple AI agents to handle complex, long-running tasks that would be difficult or impossible for a single agent due to scope, complexity, or timeout constraints.',\n          customInstructions:\n            'Coordinate advanced multi-agent swarms with timeout-free execution capabilities. Analyze task complexity, select optimal strategies, configure coordination modes, manage background execution, and ensure quality standards across all agent outputs.',\n          groups: ['read', 'edit', 'command'],\n          source: 'project',\n        },\n      ],\n    },\n    null,\n    2,\n  );\n}\n"],"names":["createBasicRoomodesConfig","JSON","stringify","customModes","slug","name","roleDefinition","customInstructions","groups","source","fileRegex","description"],"mappings":"AAEA,OAAO,SAASA;IACd,OAAOC,KAAKC,SAAS,CACnB;QACEC,aAAa;YACX;gBACEC,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;iBAAO;gBACxBC,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;oBAAQ;oBAAW;oBAAO;iBAAU;gBACrDC,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;oBAAQ;oBAAW;oBAAO;iBAAU;gBACrDC,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;iBAAO;gBACxBC,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;oBAAQ;oBAAW;oBAAO;iBAAU;gBACrDC,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;oBAAQ;oBAAW;oBAAO;iBAAU;gBACrDC,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;iBAAO;gBACxBC,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;wBAAC;wBAAQ;4BAAEE,WAAW;4BAAUC,aAAa;wBAAsB;qBAAE;iBAAC;gBACvFF,QAAQ;YACV;YACA;gBACEL,MAAM;gBACNC,MAAM;gBACNC,gBACE;gBACFC,oBACE;gBACFC,QAAQ;oBAAC;oBAAQ;oBAAQ;iBAAU;gBACnCC,QAAQ;YACV;SACD;IACH,GACA,MACA;AAEJ"}