{"version":3,"sources":["../../../../../src/cli/simple-commands/init/sparc-structure.js"],"sourcesContent":["// sparc-structure.js - Create SPARC development structure\n\nimport { createBasicRoomodesConfig } from './sparc/roomodes-config.js';\nimport { errors } from '../../node-compat.js';\nimport { promises as fs } from 'fs';\nimport { createBasicSparcWorkflow } from './sparc/workflows.js';\nimport { createRooReadme } from './sparc/roo-readme.js';\nimport { createClaudeSlashCommands } from './claude-commands/slash-commands.js';\nimport { cwd } from '../../node-compat.js';\nimport process from 'process';\n\n// Helper function to create SPARC structure manually\nexport async function createSparcStructureManually() {\n  try {\n    // Ensure we're in the working directory\n    const workingDir = process.env.PWD || cwd();\n\n    // Create .roo directory structure in working directory (legacy support)\n    const rooDirectories = [\n      `${workingDir}/.roo`,\n      `${workingDir}/.roo/templates`,\n      `${workingDir}/.roo/workflows`,\n      `${workingDir}/.roo/modes`,\n      `${workingDir}/.roo/configs`,\n    ];\n\n    for (const dir of rooDirectories) {\n      try {\n        await fs.mkdir(dir, { recursive: true });\n        console.log(`  ✓ Created ${dir}/`);\n      } catch (err) {\n        if (!(err instanceof errors.AlreadyExists)) {\n          throw err;\n        }\n      }\n    }\n\n    // Create .roomodes file (copy from existing if available, or create basic version)\n    let roomodesContent;\n    try {\n      // Check if .roomodes already exists and read it\n      roomodesContent = await fs.readFile(`${workingDir}/.roomodes`, 'utf8');\n      console.log('  ✓ Using existing .roomodes configuration');\n    } catch {\n      // Create basic .roomodes configuration\n      roomodesContent = createBasicRoomodesConfig();\n      await fs.writeFile(`${workingDir}/.roomodes`, roomodesContent, 'utf8');\n      console.log('  ✓ Created .roomodes configuration');\n    }\n\n    // Create basic workflow templates\n    const basicWorkflow = createBasicSparcWorkflow();\n    await fs.writeFile(`${workingDir}/.roo/workflows/basic-tdd.json`, basicWorkflow, 'utf8');\n    console.log('  ✓ Created .roo/workflows/basic-tdd.json');\n\n    // Create README for .roo directory\n    const rooReadme = createRooReadme();\n    await fs.writeFile(`${workingDir}/.roo/README.md`, rooReadme, 'utf8');\n    console.log('  ✓ Created .roo/README.md');\n\n    // Create Claude Code slash commands for SPARC modes\n    await createClaudeSlashCommands(workingDir);\n\n    console.log('  ✅ Basic SPARC structure created successfully');\n  } catch (err) {\n    console.log(`  ❌ Failed to create SPARC structure: ${err.message}`);\n  }\n}\n"],"names":["createBasicRoomodesConfig","errors","promises","fs","createBasicSparcWorkflow","createRooReadme","createClaudeSlashCommands","cwd","process","createSparcStructureManually","workingDir","env","PWD","rooDirectories","dir","mkdir","recursive","console","log","err","AlreadyExists","roomodesContent","readFile","writeFile","basicWorkflow","rooReadme","message"],"mappings":"AAEA,SAASA,yBAAyB,QAAQ,6BAA6B;AACvE,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,YAAYC,EAAE,QAAQ,KAAK;AACpC,SAASC,wBAAwB,QAAQ,uBAAuB;AAChE,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,yBAAyB,QAAQ,sCAAsC;AAChF,SAASC,GAAG,QAAQ,uBAAuB;AAC3C,OAAOC,aAAa,UAAU;AAG9B,OAAO,eAAeC;IACpB,IAAI;QAEF,MAAMC,aAAaF,QAAQG,GAAG,CAACC,GAAG,IAAIL;QAGtC,MAAMM,iBAAiB;YACrB,GAAGH,WAAW,KAAK,CAAC;YACpB,GAAGA,WAAW,eAAe,CAAC;YAC9B,GAAGA,WAAW,eAAe,CAAC;YAC9B,GAAGA,WAAW,WAAW,CAAC;YAC1B,GAAGA,WAAW,aAAa,CAAC;SAC7B;QAED,KAAK,MAAMI,OAAOD,eAAgB;YAChC,IAAI;gBACF,MAAMV,GAAGY,KAAK,CAACD,KAAK;oBAAEE,WAAW;gBAAK;gBACtCC,QAAQC,GAAG,CAAC,CAAC,YAAY,EAAEJ,IAAI,CAAC,CAAC;YACnC,EAAE,OAAOK,KAAK;gBACZ,IAAI,CAAEA,CAAAA,eAAelB,OAAOmB,aAAa,AAAD,GAAI;oBAC1C,MAAMD;gBACR;YACF;QACF;QAGA,IAAIE;QACJ,IAAI;YAEFA,kBAAkB,MAAMlB,GAAGmB,QAAQ,CAAC,GAAGZ,WAAW,UAAU,CAAC,EAAE;YAC/DO,QAAQC,GAAG,CAAC;QACd,EAAE,OAAM;YAENG,kBAAkBrB;YAClB,MAAMG,GAAGoB,SAAS,CAAC,GAAGb,WAAW,UAAU,CAAC,EAAEW,iBAAiB;YAC/DJ,QAAQC,GAAG,CAAC;QACd;QAGA,MAAMM,gBAAgBpB;QACtB,MAAMD,GAAGoB,SAAS,CAAC,GAAGb,WAAW,8BAA8B,CAAC,EAAEc,eAAe;QACjFP,QAAQC,GAAG,CAAC;QAGZ,MAAMO,YAAYpB;QAClB,MAAMF,GAAGoB,SAAS,CAAC,GAAGb,WAAW,eAAe,CAAC,EAAEe,WAAW;QAC9DR,QAAQC,GAAG,CAAC;QAGZ,MAAMZ,0BAA0BI;QAEhCO,QAAQC,GAAG,CAAC;IACd,EAAE,OAAOC,KAAK;QACZF,QAAQC,GAAG,CAAC,CAAC,sCAAsC,EAAEC,IAAIO,OAAO,EAAE;IACpE;AACF"}