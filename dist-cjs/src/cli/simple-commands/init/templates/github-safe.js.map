{"version":3,"sources":["../../../../../../src/cli/simple-commands/init/templates/github-safe.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Safe GitHub CLI Helper\n * Prevents timeout issues when using gh commands with special characters\n * \n * Usage:\n *   ./github-safe.js issue comment 123 \"Message with `backticks`\"\n *   ./github-safe.js pr create --title \"Title\" --body \"Complex body\"\n */\n\nimport { execSync } from 'child_process';\nimport { writeFileSync, unlinkSync } from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'path';\nimport { randomBytes } from 'crypto';\n\nconst args = process.argv.slice(2);\n\nif (args.length < 2) {\n  console.log(`\nSafe GitHub CLI Helper\n\nUsage:\n  ./github-safe.js issue comment <number> <body>\n  ./github-safe.js pr comment <number> <body>\n  ./github-safe.js issue create --title <title> --body <body>\n  ./github-safe.js pr create --title <title> --body <body>\n\nThis helper prevents timeout issues with special characters like:\n- Backticks in code examples\n- Command substitution \\$(...)\n- Directory paths\n- Special shell characters\n`);\n  process.exit(1);\n}\n\nconst [command, subcommand, ...restArgs] = args;\n\n// Handle commands that need body content\nif ((command === 'issue' || command === 'pr') && \n    (subcommand === 'comment' || subcommand === 'create')) {\n  \n  let bodyIndex = -1;\n  let body = '';\n  \n  if (subcommand === 'comment' && restArgs.length >= 2) {\n    // Simple format: github-safe.js issue comment 123 \"body\"\n    body = restArgs[1];\n    bodyIndex = 1;\n  } else {\n    // Flag format: --body \"content\" \n    bodyIndex = restArgs.indexOf('--body');\n    if (bodyIndex !== -1 && bodyIndex < restArgs.length - 1) {\n      body = restArgs[bodyIndex + 1];\n    }\n  }\n  \n  if (body) {\n    // Use temporary file for body content\n    const tmpFile = join(tmpdir(), `gh-body-${randomBytes(8).toString('hex')}.tmp`);\n    \n    try {\n      writeFileSync(tmpFile, body, 'utf8');\n      \n      // Build new command with --body-file\n      const newArgs = [...restArgs];\n      if (subcommand === 'comment' && bodyIndex === 1) {\n        // Replace body with --body-file\n        newArgs[1] = '--body-file';\n        newArgs.push(tmpFile);\n      } else if (bodyIndex !== -1) {\n        // Replace --body with --body-file\n        newArgs[bodyIndex] = '--body-file';\n        newArgs[bodyIndex + 1] = tmpFile;\n      }\n      \n      // Execute safely\n      const ghCommand = `gh ${command} ${subcommand} ${newArgs.join(' ')}`;\n      console.log(`Executing: ${ghCommand}`);\n      \n      const result = execSync(ghCommand, { \n        stdio: 'inherit',\n        timeout: 30000 // 30 second timeout\n      });\n      \n    } catch (error) {\n      console.error('Error:', error.message);\n      process.exit(1);\n    } finally {\n      // Clean up\n      try {\n        unlinkSync(tmpFile);\n      } catch (e) {\n        // Ignore cleanup errors\n      }\n    }\n  } else {\n    // No body content, execute normally\n    execSync(`gh ${args.join(' ')}`, { stdio: 'inherit' });\n  }\n} else {\n  // Other commands, execute normally\n  execSync(`gh ${args.join(' ')}`, { stdio: 'inherit' });\n}"],"names":["execSync","writeFileSync","unlinkSync","tmpdir","join","randomBytes","args","process","argv","slice","length","console","log","exit","command","subcommand","restArgs","bodyIndex","body","indexOf","tmpFile","toString","newArgs","push","ghCommand","result","stdio","timeout","error","message","e"],"mappings":";AAWA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,aAAa,EAAEC,UAAU,QAAQ,KAAK;AAC/C,SAASC,MAAM,QAAQ,KAAK;AAC5B,SAASC,IAAI,QAAQ,OAAO;AAC5B,SAASC,WAAW,QAAQ,SAAS;AAErC,MAAMC,OAAOC,QAAQC,IAAI,CAACC,KAAK,CAAC;AAEhC,IAAIH,KAAKI,MAAM,GAAG,GAAG;IACnBC,QAAQC,GAAG,CAAC,CAAC;;;;;;;;;;;;;;AAcf,CAAC;IACCL,QAAQM,IAAI,CAAC;AACf;AAEA,MAAM,CAACC,SAASC,YAAY,GAAGC,SAAS,GAAGV;AAG3C,IAAI,AAACQ,CAAAA,YAAY,WAAWA,YAAY,IAAG,KACtCC,CAAAA,eAAe,aAAaA,eAAe,QAAO,GAAI;IAEzD,IAAIE,YAAY,CAAC;IACjB,IAAIC,OAAO;IAEX,IAAIH,eAAe,aAAaC,SAASN,MAAM,IAAI,GAAG;QAEpDQ,OAAOF,QAAQ,CAAC,EAAE;QAClBC,YAAY;IACd,OAAO;QAELA,YAAYD,SAASG,OAAO,CAAC;QAC7B,IAAIF,cAAc,CAAC,KAAKA,YAAYD,SAASN,MAAM,GAAG,GAAG;YACvDQ,OAAOF,QAAQ,CAACC,YAAY,EAAE;QAChC;IACF;IAEA,IAAIC,MAAM;QAER,MAAME,UAAUhB,KAAKD,UAAU,CAAC,QAAQ,EAAEE,YAAY,GAAGgB,QAAQ,CAAC,OAAO,IAAI,CAAC;QAE9E,IAAI;YACFpB,cAAcmB,SAASF,MAAM;YAG7B,MAAMI,UAAU;mBAAIN;aAAS;YAC7B,IAAID,eAAe,aAAaE,cAAc,GAAG;gBAE/CK,OAAO,CAAC,EAAE,GAAG;gBACbA,QAAQC,IAAI,CAACH;YACf,OAAO,IAAIH,cAAc,CAAC,GAAG;gBAE3BK,OAAO,CAACL,UAAU,GAAG;gBACrBK,OAAO,CAACL,YAAY,EAAE,GAAGG;YAC3B;YAGA,MAAMI,YAAY,CAAC,GAAG,EAAEV,QAAQ,CAAC,EAAEC,WAAW,CAAC,EAAEO,QAAQlB,IAAI,CAAC,MAAM;YACpEO,QAAQC,GAAG,CAAC,CAAC,WAAW,EAAEY,WAAW;YAErC,MAAMC,SAASzB,SAASwB,WAAW;gBACjCE,OAAO;gBACPC,SAAS;YACX;QAEF,EAAE,OAAOC,OAAO;YACdjB,QAAQiB,KAAK,CAAC,UAAUA,MAAMC,OAAO;YACrCtB,QAAQM,IAAI,CAAC;QACf,SAAU;YAER,IAAI;gBACFX,WAAWkB;YACb,EAAE,OAAOU,GAAG,CAEZ;QACF;IACF,OAAO;QAEL9B,SAAS,CAAC,GAAG,EAAEM,KAAKF,IAAI,CAAC,MAAM,EAAE;YAAEsB,OAAO;QAAU;IACtD;AACF,OAAO;IAEL1B,SAAS,CAAC,GAAG,EAAEM,KAAKF,IAAI,CAAC,MAAM,EAAE;QAAEsB,OAAO;IAAU;AACtD"}