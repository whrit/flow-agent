{"version":3,"sources":["../../../../../../src/cli/simple-commands/init/templates/github-safe-enhanced.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Enhanced Safe GitHub CLI Helper - Production Ready\n * Uses the comprehensive GitHubCliSafe wrapper for secure command execution\n * \n * Prevents:\n * - Timeout issues with large content\n * - Command injection attacks  \n * - Process resource leaks\n * - Rate limiting issues\n * - Input validation bypasses\n * \n * Usage:\n *   ./github-safe-enhanced.js issue comment 123 \"Message with `backticks` and $(dangerous) content\"\n *   ./github-safe-enhanced.js pr create --title \"Title\" --body \"Complex body with special chars\"\n *   ./github-safe-enhanced.js issue create --title \"Bug Report\" --body \"Long description...\" --labels \"bug,urgent\"\n *   ./github-safe-enhanced.js release create v1.0.0 --title \"Release v1.0.0\" --body \"Release notes...\"\n */\n\n// Import the production-ready GitHub CLI safety wrapper\nimport { githubCli, GitHubCliError, GitHubCliTimeoutError, GitHubCliValidationError } from '../../../utils/github-cli-safety-wrapper.js';\n\nconst args = process.argv.slice(2);\n\n/**\n * Show help message\n */\nfunction showHelp() {\n  console.log(`\nüõ°Ô∏è  Enhanced Safe GitHub CLI Helper\n\nFEATURES:\n  ‚úÖ Injection attack prevention\n  ‚úÖ Timeout handling with cleanup\n  ‚úÖ Input validation and sanitization\n  ‚úÖ Rate limiting protection\n  ‚úÖ Comprehensive error handling\n  ‚úÖ Process resource management\n\nUSAGE:\n  ./github-safe-enhanced.js <command> <subcommand> [arguments] [options]\n\nCOMMANDS:\n  Issue Operations:\n    issue create --title \"Title\" --body \"Body\" [--labels \"label1,label2\"] [--assignees \"user1,user2\"]\n    issue comment <number> \"Comment body\"\n    \n  Pull Request Operations:\n    pr create --title \"Title\" --body \"Body\" [--base branch] [--head branch] [--draft]\n    pr comment <number> \"Comment body\"\n    \n  Release Operations:\n    release create <tag> --title \"Title\" --body \"Body\" [--prerelease] [--draft]\n\nOPTIONS:\n  --timeout <ms>     Override default timeout (30000ms)\n  --verbose          Enable detailed logging\n  --dry-run         Show what would be executed without running\n  --help            Show this help message\n\nEXAMPLES:\n  # Create issue with special characters safely\n  ./github-safe-enhanced.js issue create \\\\\n    --title \"Bug: Login fails with special chars\" \\\\\n    --body \"Steps: 1. Enter \\`user@domain.com\\` 2. Use password with \\$(special) chars\" \\\\\n    --labels \"bug,high-priority\"\n\n  # Add comment with code blocks\n  ./github-safe-enhanced.js issue comment 123 \\\\\n    \"Fixed in commit abc123. Test with: \\`npm test && npm run build\\`\"\n\n  # Create PR with complex body\n  ./github-safe-enhanced.js pr create \\\\\n    --title \"Feature: Add authentication\" \\\\\n    --body \"## Changes\\\\n- Added JWT auth\\\\n- Updated tests\\\\n\\\\n\\`\\`\\`js\\\\nconst token = jwt.sign(payload);\\\\n\\`\\`\\`\" \\\\\n    --base main --head feature/auth\n\n  # Create release with detailed notes\n  ./github-safe-enhanced.js release create v2.1.0 \\\\\n    --title \"Version 2.1.0 - Security Update\" \\\\\n    --body \"## Features\\\\n- Enhanced security\\\\n- Bug fixes\\\\n\\\\n## Breaking Changes\\\\nNone\"\n\nSECURITY FEATURES:\n  üîí Blocks dangerous patterns: \\$(cmd), \\`cmd\\`, eval(), exec()\n  üîí Prevents command chaining: &&, ||, ;\n  üîí Validates file sizes and input lengths\n  üîí Uses secure temporary files with restricted permissions\n  üîí Implements proper process cleanup and timeout handling\n`);\n}\n\n/**\n * Parse command line arguments into structured format\n */\nfunction parseArguments(args) {\n  if (args.length === 0 || args.includes('--help')) {\n    showHelp();\n    process.exit(0);\n  }\n\n  const [command, subcommand, ...restArgs] = args;\n  const options = {};\n  const positionalArgs = [];\n  \n  // Parse flags and options\n  for (let i = 0; i < restArgs.length; i++) {\n    const arg = restArgs[i];\n    \n    if (arg.startsWith('--')) {\n      const flagName = arg.substring(2);\n      const nextArg = restArgs[i + 1];\n      \n      if (nextArg && !nextArg.startsWith('--')) {\n        options[flagName] = nextArg;\n        i++; // Skip the next argument\n      } else {\n        options[flagName] = true;\n      }\n    } else {\n      positionalArgs.push(arg);\n    }\n  }\n  \n  return { command, subcommand, positionalArgs, options };\n}\n\n/**\n * Execute GitHub CLI command safely\n */\nasync function executeCommand(command, subcommand, positionalArgs, options) {\n  try {\n    // Handle dry-run mode\n    if (options['dry-run']) {\n      console.log('üîç DRY RUN MODE - Would execute:');\n      console.log(`Command: ${command} ${subcommand}`);\n      console.log(`Arguments:`, positionalArgs);\n      console.log(`Options:`, options);\n      return;\n    }\n    \n    // Configure GitHub CLI wrapper\n    const cliOptions = {\n      timeout: parseInt(options.timeout) || 30000,\n      enableLogging: options.verbose || false\n    };\n    \n    let result;\n    \n    // Route to appropriate method based on command\n    if (command === 'issue') {\n      result = await handleIssueCommand(subcommand, positionalArgs, options, cliOptions);\n    } else if (command === 'pr') {\n      result = await handlePRCommand(subcommand, positionalArgs, options, cliOptions);\n    } else if (command === 'release') {\n      result = await handleReleaseCommand(subcommand, positionalArgs, options, cliOptions);\n    } else {\n      throw new Error(`Unsupported command: ${command}`);\n    }\n    \n    // Output result\n    console.log('‚úÖ Command executed successfully');\n    if (options.verbose && result.stdout) {\n      console.log('Output:', result.stdout);\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Command failed:', error.message);\n    \n    if (error instanceof GitHubCliTimeoutError) {\n      console.error('üí° Try increasing timeout with --timeout <ms>');\n    } else if (error instanceof GitHubCliValidationError) {\n      console.error('üí° Input validation failed. Check for dangerous characters or patterns.');\n    }\n    \n    if (options.verbose && error.details) {\n      console.error('Details:', error.details);\n    }\n    \n    process.exit(1);\n  }\n}\n\n/**\n * Handle issue commands\n */\nasync function handleIssueCommand(subcommand, positionalArgs, options, cliOptions) {\n  if (subcommand === 'create') {\n    if (!options.title || !options.body) {\n      throw new Error('Issue creation requires --title and --body options');\n    }\n    \n    return await githubCli.createIssue({\n      title: options.title,\n      body: options.body,\n      labels: options.labels ? options.labels.split(',') : [],\n      assignees: options.assignees ? options.assignees.split(',') : [],\n      ...cliOptions\n    });\n    \n  } else if (subcommand === 'comment') {\n    const [issueNumber] = positionalArgs;\n    const body = positionalArgs[1] || options.body;\n    \n    if (!issueNumber || !body) {\n      throw new Error('Issue comment requires issue number and body');\n    }\n    \n    return await githubCli.addIssueComment(parseInt(issueNumber), body, cliOptions);\n    \n  } else {\n    throw new Error(`Unsupported issue subcommand: ${subcommand}`);\n  }\n}\n\n/**\n * Handle PR commands\n */\nasync function handlePRCommand(subcommand, positionalArgs, options, cliOptions) {\n  if (subcommand === 'create') {\n    if (!options.title || !options.body) {\n      throw new Error('PR creation requires --title and --body options');\n    }\n    \n    return await githubCli.createPR({\n      title: options.title,\n      body: options.body,\n      base: options.base || 'main',\n      head: options.head,\n      draft: options.draft || false,\n      ...cliOptions\n    });\n    \n  } else if (subcommand === 'comment') {\n    const [prNumber] = positionalArgs;\n    const body = positionalArgs[1] || options.body;\n    \n    if (!prNumber || !body) {\n      throw new Error('PR comment requires PR number and body');\n    }\n    \n    return await githubCli.addPRComment(parseInt(prNumber), body, cliOptions);\n    \n  } else {\n    throw new Error(`Unsupported PR subcommand: ${subcommand}`);\n  }\n}\n\n/**\n * Handle release commands\n */\nasync function handleReleaseCommand(subcommand, positionalArgs, options, cliOptions) {\n  if (subcommand === 'create') {\n    const [tag] = positionalArgs;\n    \n    if (!tag || !options.title || !options.body) {\n      throw new Error('Release creation requires tag, --title, and --body');\n    }\n    \n    return await githubCli.createRelease({\n      tag,\n      title: options.title,\n      body: options.body,\n      prerelease: options.prerelease || false,\n      draft: options.draft || false,\n      ...cliOptions\n    });\n    \n  } else {\n    throw new Error(`Unsupported release subcommand: ${subcommand}`);\n  }\n}\n\n/**\n * Main execution\n */\nasync function main() {\n  try {\n    // Parse arguments\n    const { command, subcommand, positionalArgs, options } = parseArguments(args);\n    \n    // Check GitHub CLI availability\n    const isAvailable = await githubCli.checkGitHubCli();\n    if (!isAvailable) {\n      console.error('‚ùå GitHub CLI is not installed or not in PATH');\n      console.error('üí° Install from: https://cli.github.com/');\n      process.exit(1);\n    }\n    \n    // Check authentication (unless dry-run)\n    if (!options['dry-run']) {\n      const isAuthenticated = await githubCli.checkAuthentication();\n      if (!isAuthenticated) {\n        console.error('‚ùå GitHub CLI is not authenticated');\n        console.error('üí° Run: gh auth login');\n        process.exit(1);\n      }\n    }\n    \n    // Execute command\n    await executeCommand(command, subcommand, positionalArgs, options);\n    \n  } catch (error) {\n    console.error('‚ùå Unexpected error:', error.message);\n    if (args.includes('--verbose')) {\n      console.error('Stack trace:', error.stack);\n    }\n    process.exit(1);\n  }\n}\n\n// Handle process cleanup\nprocess.on('SIGINT', async () => {\n  console.log('\\nüõë Received interrupt signal, cleaning up...');\n  await githubCli.cleanup();\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', async () => {\n  console.log('\\nüõë Received termination signal, cleaning up...');\n  await githubCli.cleanup();\n  process.exit(0);\n});\n\n// Run if called directly\nif (import.meta.main || process.argv[1].endsWith('github-safe-enhanced.js')) {\n  main().catch(error => {\n    console.error('üí• Fatal error:', error.message);\n    process.exit(1);\n  });\n}\n\nexport { executeCommand, handleIssueCommand, handlePRCommand, handleReleaseCommand };"],"names":["githubCli","GitHubCliTimeoutError","GitHubCliValidationError","args","process","argv","slice","showHelp","console","log","parseArguments","length","includes","exit","command","subcommand","restArgs","options","positionalArgs","i","arg","startsWith","flagName","substring","nextArg","push","executeCommand","cliOptions","timeout","parseInt","enableLogging","verbose","result","handleIssueCommand","handlePRCommand","handleReleaseCommand","Error","stdout","error","message","details","title","body","createIssue","labels","split","assignees","issueNumber","addIssueComment","createPR","base","head","draft","prNumber","addPRComment","tag","createRelease","prerelease","main","isAvailable","checkGitHubCli","isAuthenticated","checkAuthentication","stack","on","cleanup","endsWith","catch"],"mappings":"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"}