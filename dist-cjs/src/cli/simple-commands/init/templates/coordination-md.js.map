{"version":3,"sources":["../../../../../../src/cli/simple-commands/init/templates/coordination-md.js"],"sourcesContent":["// coordination-md.js - Coordination templates\n\nexport function createMinimalCoordinationMd() {\n  return `# Agent Coordination\n\n## Quick Commands\n- \\`npx claude-flow agent spawn <type>\\`: Create new agent\n- \\`npx claude-flow agent list\\`: Show active agents\n- \\`npx claude-flow task create <type> <description>\\`: Create task\n\n## Agent Types\n- researcher, coder, analyst, coordinator, general\n`;\n}\n\nexport function createFullCoordinationMd() {\n  return `# Agent Coordination System\n\n## Overview\nThe Claude-Flow coordination system manages multiple AI agents working together on complex tasks. It provides intelligent task distribution, resource management, and inter-agent communication.\n\n## Agent Types and Capabilities\n- **Researcher**: Web search, information gathering, knowledge synthesis\n- **Coder**: Code analysis, development, debugging, testing\n- **Analyst**: Data processing, pattern recognition, insights generation\n- **Coordinator**: Task planning, resource allocation, workflow management\n- **General**: Multi-purpose agent with balanced capabilities\n\n## Task Management\n- **Priority Levels**: 1 (lowest) to 10 (highest)\n- **Dependencies**: Tasks can depend on completion of other tasks\n- **Parallel Execution**: Independent tasks run concurrently\n- **Load Balancing**: Automatic distribution based on agent capacity\n\n## Coordination Commands\n\\`\\`\\`bash\n# Agent Management\nnpx claude-flow agent spawn <type> --name <name> --priority <1-10>\nnpx claude-flow agent list\nnpx claude-flow agent info <agent-id>\nnpx claude-flow agent terminate <agent-id>\n\n# Task Management  \nnpx claude-flow task create <type> <description> --priority <1-10> --deps <task-ids>\nnpx claude-flow task list --verbose\nnpx claude-flow task status <task-id>\nnpx claude-flow task cancel <task-id>\n\n# System Monitoring\nnpx claude-flow status --verbose\nnpx claude-flow monitor --interval 5000\n\\`\\`\\`\n\n## Workflow Execution\nWorkflows are defined in JSON format and can orchestrate complex multi-agent operations:\n\\`\\`\\`bash\nnpx claude-flow workflow examples/research-workflow.json\nnpx claude-flow workflow examples/development-config.json --async\n\\`\\`\\`\n\n## Advanced Features\n- **Circuit Breakers**: Automatic failure handling and recovery\n- **Work Stealing**: Dynamic load redistribution for efficiency\n- **Resource Limits**: Memory and CPU usage constraints\n- **Metrics Collection**: Performance monitoring and optimization\n\n## Configuration\nCoordination settings in \\`claude-flow.config.json\\`:\n\\`\\`\\`json\n{\n  \"orchestrator\": {\n    \"maxConcurrentTasks\": 10,\n    \"taskTimeout\": 300000,\n    \"defaultPriority\": 5\n  },\n  \"agents\": {\n    \"maxAgents\": 20,\n    \"defaultCapabilities\": [\"research\", \"code\", \"terminal\"],\n    \"resourceLimits\": {\n      \"memory\": \"1GB\",\n      \"cpu\": \"50%\"\n    }\n  }\n}\n\\`\\`\\`\n\n## Communication Patterns\n- **Direct Messaging**: Agent-to-agent communication\n- **Event Broadcasting**: System-wide notifications\n- **Shared Memory**: Common information access\n- **Task Handoff**: Seamless work transfer between agents\n\n## Best Practices\n- Start with general agents and specialize as needed\n- Use descriptive task names and clear requirements\n- Monitor system resources during heavy workloads\n- Implement proper error handling in workflows\n- Regular cleanup of completed tasks and inactive agents\n\n## Troubleshooting\n- Check agent health with \\`npx claude-flow status\\`\n- View detailed logs with \\`npx claude-flow monitor\\`\n- Restart stuck agents with terminate/spawn cycle\n- Use \\`--verbose\\` flags for detailed diagnostic information\n`;\n}\n\n// Create optimized Coordination with batchtools support\nexport async function createOptimizedCoordinationMd() {\n  return `# Agent Coordination System (Batchtools Optimized)\n\n## Overview\nThe Claude-Flow coordination system manages multiple AI agents working together on complex tasks. It provides intelligent task distribution, resource management, and inter-agent communication.\n\n**ðŸš€ Batchtools Enhancement**: This configuration includes parallel processing capabilities for agent coordination, batch task management, and concurrent workflow execution.\n\n## Agent Types and Capabilities (Enhanced)\n- **Researcher**: Web search, information gathering, knowledge synthesis with parallel processing\n- **Coder**: Code analysis, development, debugging, testing with concurrent operations\n- **Analyst**: Data processing, pattern recognition, insights generation with batch analysis\n- **Coordinator**: Task planning, resource allocation, workflow management with parallel coordination\n- **General**: Multi-purpose agent with balanced capabilities and batch processing\n- **BatchProcessor**: Specialized agent for high-throughput batch operations\n- **ParallelExecutor**: Agent optimized for concurrent task execution\n\n## Task Management (Batchtools Enhanced)\n- **Priority Levels**: 1 (lowest) to 10 (highest) with parallel priority processing\n- **Dependencies**: Tasks can depend on completion of other tasks with concurrent validation\n- **Parallel Execution**: Independent tasks run concurrently with intelligent load balancing\n- **Batch Processing**: Group related tasks for efficient parallel execution\n- **Work Stealing**: Dynamic redistribution with real-time load monitoring\n- **Circuit Breakers**: Fault tolerance with parallel recovery mechanisms\n\n## Coordination Commands (Enhanced)\n\n### Standard Commands\n\\`\\`\\`bash\n# Agent Management\nnpx claude-flow agent spawn <type> --name <name> --priority <1-10>\nnpx claude-flow agent list\nnpx claude-flow agent info <agent-id>\nnpx claude-flow agent terminate <agent-id>\n\n# Task Management  \nnpx claude-flow task create <type> <description> --priority <1-10> --deps <task-ids>\nnpx claude-flow task list --verbose\nnpx claude-flow task status <task-id>\nnpx claude-flow task cancel <task-id>\n\n# System Monitoring\nnpx claude-flow status --verbose\nnpx claude-flow monitor --interval 5000\n\\`\\`\\`\n\n### Batchtools Commands\n\\`\\`\\`bash\n# Batch Agent Management\nnpx claude-flow agent batch-spawn <agents-config> --parallel\nnpx claude-flow agent parallel-status --all-agents\nnpx claude-flow agent concurrent-terminate <agent-ids>\n\n# Batch Task Management\nnpx claude-flow task batch-create <tasks-file> --parallel\nnpx claude-flow task parallel-execute <task-ids> --concurrent\nnpx claude-flow task batch-monitor --real-time --parallel\n\n# Advanced Coordination\nnpx claude-flow coordination batch-workflow <workflows-config> --parallel\nnpx claude-flow coordination parallel-orchestrate <orchestration-config>\nnpx claude-flow coordination concurrent-monitor --all-systems\n\\`\\`\\`\n\n## Workflow Execution (Batchtools Enhanced)\nWorkflows support parallel execution, batch processing, and concurrent orchestration:\n\\`\\`\\`bash\n# Standard workflow execution\nnpx claude-flow workflow examples/research-workflow.json\nnpx claude-flow workflow examples/development-config.json --async\n\n# Batchtools workflow execution\nnpx claude-flow workflow batch-execute <workflow-configs> --parallel\nnpx claude-flow workflow parallel-orchestrate <workflows-dir> --concurrent\nnpx claude-flow workflow concurrent-monitor --all-workflows --real-time\n\\`\\`\\`\n\n## Advanced Features (Enhanced)\n\n### Parallel Processing Capabilities\n- **Concurrent Agent Spawning**: Create multiple agents simultaneously\n- **Batch Task Distribution**: Distribute tasks to multiple agents in parallel\n- **Parallel Workflow Execution**: Execute multiple workflows concurrently\n- **Concurrent Resource Management**: Monitor and manage resources across parallel operations\n\n### Performance Optimizations\n- **Smart Batching**: Group related coordination operations for efficiency\n- **Pipeline Processing**: Chain coordination operations with parallel stages\n- **Load Balancing**: Dynamic distribution with real-time performance monitoring\n- **Resource Optimization**: Efficient utilization with parallel resource allocation\n\n### Fault Tolerance (Enhanced)\n- **Circuit Breakers**: Automatic failure handling with parallel recovery\n- **Work Stealing**: Dynamic redistribution with concurrent monitoring\n- **Health Monitoring**: Real-time agent and task health with parallel checks\n- **Retry Mechanisms**: Intelligent retry with exponential backoff and parallel validation\n\n## Configuration (Batchtools Enhanced)\nCoordination settings in \\`claude-flow.config.json\\` with batchtools optimizations:\n\\`\\`\\`json\n{\n  \"orchestrator\": {\n    \"maxConcurrentTasks\": 50,\n    \"taskTimeout\": 300000,\n    \"defaultPriority\": 5,\n    \"batchtools\": {\n      \"enabled\": true,\n      \"maxParallelTasks\": 20,\n      \"batchSize\": 10,\n      \"concurrentAgents\": 15,\n      \"parallelWorkflows\": 5\n    }\n  },\n  \"agents\": {\n    \"maxAgents\": 100,\n    \"defaultCapabilities\": [\"research\", \"code\", \"terminal\", \"batch\", \"parallel\"],\n    \"resourceLimits\": {\n      \"memory\": \"4GB\",\n      \"cpu\": \"80%\"\n    },\n    \"batchProcessing\": {\n      \"maxConcurrentOperations\": 25,\n      \"batchQueueSize\": 100,\n      \"parallelSpawning\": true,\n      \"concurrentMonitoring\": true\n    }\n  },\n  \"performance\": {\n    \"enableParallelCoordination\": true,\n    \"concurrentTaskExecution\": 30,\n    \"batchWorkflowSize\": 5,\n    \"parallelResourceMonitoring\": true,\n    \"smartLoadBalancing\": true\n  }\n}\n\\`\\`\\`\n\n## Communication Patterns (Enhanced)\n- **Direct Messaging**: Agent-to-agent communication with parallel channels\n- **Event Broadcasting**: System-wide notifications with concurrent delivery\n- **Shared Memory**: Common information access with parallel synchronization\n- **Task Handoff**: Seamless work transfer with concurrent validation\n- **Batch Communication**: Group messaging for efficient coordination\n- **Parallel Synchronization**: Concurrent coordination across multiple agents\n\n## Batchtools Integration\n\n### Parallel Coordination Patterns\n\\`\\`\\`bash\n# Spawn multiple specialized agents in parallel\nnpx claude-flow agent batch-spawn sparc-agents.json --parallel --validate\n\n# Execute batch of related tasks concurrently\nnpx claude-flow task parallel-execute research-tasks.json --concurrent --monitor\n\n# Orchestrate multiple workflows simultaneously\nnpx claude-flow workflow concurrent-orchestrate project-workflows/ --parallel\n\\`\\`\\`\n\n### Performance Monitoring (Enhanced)\n\\`\\`\\`bash\n# Monitor concurrent operations across all agents\nnpx claude-flow monitor --concurrent --all-agents --verbose\n\n# Analyze batch processing performance\nnpx claude-flow coordination performance-report --batchtools --detailed\n\n# Real-time parallel task monitoring\nnpx claude-flow task parallel-monitor --real-time --performance-metrics\n\\`\\`\\`\n\n## Best Practices (Batchtools Enhanced)\n\n### Performance Optimization\n- Use batch operations for multiple related coordination tasks\n- Enable parallel processing for independent agent operations\n- Monitor concurrent operation limits to avoid resource exhaustion\n- Implement smart batching for related workflow executions\n\n### Resource Management\n- Monitor system resources during parallel agent operations\n- Implement throttling for batch coordination under heavy load\n- Use parallel processing judiciously based on system capabilities\n- Balance concurrent operations with system stability\n\n### Agent Coordination\n- Use batch spawning for creating multiple related agents\n- Enable parallel task distribution for improved efficiency\n- Implement concurrent monitoring for real-time system health\n- Use parallel workflow execution for complex multi-step processes\n\n## Performance Benchmarks\n\n### Batchtools Performance Improvements\n- **Agent Spawning**: Up to 500% faster with parallel creation\n- **Task Distribution**: 350% improvement with concurrent assignment\n- **Workflow Execution**: 400% faster with parallel orchestration\n- **Resource Monitoring**: 250% improvement with concurrent monitoring\n- **Communication**: 300% faster with batch messaging\n\n## Troubleshooting (Enhanced)\n\n### Common Batchtools Issues\n- **Concurrent Limit Exceeded**: Reduce maxParallelTasks in configuration\n- **Batch Size Too Large**: Decrease batchSize for resource-constrained systems\n- **Agent Spawn Conflicts**: Enable parallelSpawning with appropriate coordination\n- **Resource Exhaustion**: Monitor system resources during concurrent operations\n\n### Debug Commands (Enhanced)\n\\`\\`\\`bash\n# Check concurrent coordination status\nnpx claude-flow coordination debug --concurrent --verbose\n\n# Analyze batch operation performance\nnpx claude-flow coordination analyze --batchtools --performance\n\n# Validate parallel agent integrity\nnpx claude-flow agent validate --parallel --health-check\n\n# Monitor resource usage during concurrent operations\nnpx claude-flow monitor --resources --concurrent --real-time\n\\`\\`\\`\n\n### Advanced Troubleshooting\n- Check agent health with parallel monitoring: \\`npx claude-flow status --concurrent\\`\n- View detailed logs with concurrent analysis: \\`npx claude-flow monitor --parallel --verbose\\`\n- Restart stuck agents with batch operations: \\`npx claude-flow agent batch-restart <agent-ids>\\`\n- Use concurrent diagnostics: \\`npx claude-flow debug --all-systems --parallel\\`\n\nFor more information about coordination system optimization, see: https://github.com/ruvnet/claude-code-flow/docs/coordination-batchtools.md\n`;\n}\n"],"names":["createMinimalCoordinationMd","createFullCoordinationMd","createOptimizedCoordinationMd"],"mappings":"AAEA,OAAO,SAASA;IACd,OAAO,CAAC;;;;;;;;;AASV,CAAC;AACD;AAEA,OAAO,SAASC;IACd,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFV,CAAC;AACD;AAGA,OAAO,eAAeC;IACpB,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOV,CAAC;AACD"}