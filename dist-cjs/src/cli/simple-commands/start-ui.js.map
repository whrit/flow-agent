{"version":3,"sources":["../../../../src/cli/simple-commands/start-ui.js"],"sourcesContent":["// start-ui.js - Standalone UI launcher (Web UI by default)\nimport { printSuccess, printError, printWarning, printInfo } from '../utils.js';\nimport { compat } from '../runtime-detector.js';\n\nexport async function launchUI(args = []) {\n  try {\n    // Parse arguments\n    const portValue = getArgValue(args, '--port') || getArgValue(args, '-p');\n    const port = portValue ? parseInt(portValue) : 3000;\n\n    const terminal = args.includes('--terminal') || args.includes('-t');\n    const web = !terminal; // Default to web UI unless terminal is specified\n\n    if (web) {\n      // Launch Web UI\n      try {\n        const { ClaudeCodeWebServer } = await import('./web-server.js');\n        const webServer = new ClaudeCodeWebServer(port);\n        await webServer.start();\n\n        printSuccess('🌐 Claude Flow Web UI is running!');\n        console.log(`📍 Open your browser to: http://localhost:${port}/console`);\n        console.log();\n        console.log('Features:');\n        console.log('  ✨ Access all 71+ MCP tools through the web interface');\n        console.log('  📊 Real-time monitoring and analytics');\n        console.log('  🧠 Neural network training and management');\n        console.log('  🔄 Workflow automation and SPARC modes');\n        console.log('  🐙 GitHub integration and DAA management');\n        console.log();\n        console.log('Press Ctrl+C to stop the server');\n\n        // Open browser if possible\n        try {\n          const openCommand =\n            process.platform === 'darwin'\n              ? 'open'\n              : process.platform === 'win32'\n                ? 'start'\n                : 'xdg-open';\n\n          const { exec } = await import('child_process');\n          exec(`${openCommand} http://localhost:${port}/console`);\n        } catch {\n          // Browser opening failed, that's okay\n        }\n\n        // Handle shutdown\n        const shutdown = async () => {\n          console.log('\\n' + '⏹️  Shutting down Web UI...');\n          await webServer.stop();\n          printSuccess('✓ Shutdown complete');\n          process.exit(0);\n        };\n\n        process.on('SIGINT', shutdown);\n        process.on('SIGTERM', shutdown);\n\n        // Keep process alive\n        await new Promise(() => {});\n      } catch (err) {\n        printError(`Failed to launch Web UI: ${err.message}`);\n        console.error('Stack trace:', err.stack);\n        console.log();\n        printWarning('Falling back to terminal UI...');\n        // Fall back to terminal UI\n        await launchTerminalUI(port);\n      }\n    }\n\n    if (terminal) {\n      await launchTerminalUI(port);\n    }\n  } catch (err) {\n    printError(`Failed to launch UI: ${err.message}`);\n    console.error('Stack trace:', err.stack);\n  }\n}\n\nasync function launchTerminalUI(port) {\n  // Launch Terminal UI\n  try {\n    // Try enhanced UI first\n    const { launchEnhancedUI } = await import('./process-ui-enhanced.js');\n    await launchEnhancedUI();\n  } catch (err) {\n    // Try simple UI as fallback\n    try {\n      let ProcessManager, ProcessUI;\n      try {\n        // Try the compiled version first (for production/npm packages)\n        const pmModule = await import('../../../dist/cli/commands/start/process-manager.js');\n        const puiModule = await import('../../../dist/cli/commands/start/process-ui-simple.js');\n        ProcessManager = pmModule.ProcessManager;\n        ProcessUI = puiModule.ProcessUI;\n      } catch (distError) {\n        // If dist version not found, try TypeScript version (for development)\n        const pmModule = await import('../commands/start/process-manager.ts');\n        const puiModule = await import('../commands/start/process-ui-simple.ts');\n        ProcessManager = pmModule.ProcessManager;\n        ProcessUI = puiModule.ProcessUI;\n      }\n\n      printSuccess('🚀 Claude-Flow Process Management UI');\n      console.log('─'.repeat(60));\n\n      // Initialize process manager\n      const processManager = new ProcessManager();\n      await processManager.initialize();\n\n      // Start the UI\n      const ui = new ProcessUI(processManager);\n      await ui.start();\n\n      // Cleanup on exit\n      await processManager.stopAll();\n      console.log();\n      printSuccess('✓ Shutdown complete');\n    } catch (fallbackErr) {\n      printError(`Failed to launch Terminal UI: ${fallbackErr.message}`);\n      console.error('Stack trace:', fallbackErr.stack);\n\n      // Final fallback\n      console.log();\n      printWarning('UI launch failed. Use these commands instead:');\n      console.log();\n      console.log('Process Management Commands:');\n      console.log('  • Start all: claude-flow start');\n      console.log('  • Check status: claude-flow status');\n      console.log('  • View logs: claude-flow logs');\n      console.log('  • Stop: claude-flow stop');\n    }\n  }\n}\n\nfunction getArgValue(args, flag) {\n  const index = args.indexOf(flag);\n  if (index !== -1 && index < args.length - 1) {\n    return args[index + 1];\n  }\n  return null;\n}\n\n// Run if called directly\nif (import.meta.main) {\n  await launchUI();\n}\n"],"names":["printSuccess","printError","printWarning","launchUI","args","portValue","getArgValue","port","parseInt","terminal","includes","web","ClaudeCodeWebServer","webServer","start","console","log","openCommand","process","platform","exec","shutdown","stop","exit","on","Promise","err","message","error","stack","launchTerminalUI","launchEnhancedUI","ProcessManager","ProcessUI","pmModule","puiModule","distError","repeat","processManager","initialize","ui","stopAll","fallbackErr","flag","index","indexOf","length","main"],"mappings":"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"}