{"version":3,"sources":["../../../../src/cli/simple-commands/timestamp-fix.js"],"sourcesContent":["/**\n * Fix for hive-mind creation time issue #246\n * This file demonstrates how to properly handle timezones in hive-mind displays\n */\n\nimport {\n  getLocalTimestamp,\n  convertToLocalTime,\n  formatTimestampForDisplay,\n  getTimezoneInfo,\n} from '../../utils/timezone-utils.js';\n\n/**\n * Fixed function to create session with proper timezone handling\n */\nexport function createSessionWithProperTimezone(objective, options = {}) {\n  const sessionId = `session-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Store both UTC timestamp (for consistency) and timezone info\n  const utcTimestamp = new Date().toISOString();\n  const localTimestamp = getLocalTimestamp();\n  const timezoneInfo = getTimezoneInfo();\n\n  const session = {\n    id: sessionId,\n    objective,\n    createdAt: utcTimestamp,\n    createdAtLocal: localTimestamp,\n    timezone: timezoneInfo,\n    status: 'active',\n    ...options,\n  };\n\n  return session;\n}\n\n/**\n * Fixed function to display session info with proper timezone\n */\nexport function displaySessionInfo(session) {\n  const timeDisplay = formatTimestampForDisplay(session.createdAt);\n\n  console.log(`🐝 Hive Mind Session`);\n  console.log(`📋 ID: ${session.id}`);\n  console.log(`🎯 Objective: ${session.objective}`);\n  console.log(`⏰ Created: ${timeDisplay.display}`);\n  console.log(`🌍 Timezone: ${session.timezone?.name || 'Unknown'}`);\n  console.log(`📊 Status: ${session.status}`);\n}\n\n/**\n * Fixed function to list sessions with proper timezone display\n */\nexport function listSessionsWithTimezone(sessions) {\n  console.log('📋 Hive Mind Sessions:\\n');\n\n  if (sessions.length === 0) {\n    console.log('No sessions found.');\n    return;\n  }\n\n  // Table header\n  console.log('ID'.padEnd(25) + 'Objective'.padEnd(30) + 'Created'.padEnd(25) + 'Status');\n  console.log('-'.repeat(100));\n\n  sessions.forEach((session) => {\n    const timeDisplay = formatTimestampForDisplay(session.createdAt);\n    const id = session.id.length > 22 ? session.id.substr(0, 22) + '...' : session.id;\n    const objective =\n      session.objective.length > 27 ? session.objective.substr(0, 27) + '...' : session.objective;\n\n    console.log(\n      id.padEnd(25) + objective.padEnd(30) + timeDisplay.relative.padEnd(25) + session.status,\n    );\n  });\n\n  console.log(`\\n💡 Times shown in your timezone: ${getTimezoneInfo().name}`);\n}\n\n/**\n * Example usage and test function\n */\nexport function demonstrateTimezonefix() {\n  console.log('🧪 Testing timezone fix for issue #246\\n');\n\n  // Show timezone info\n  const tz = getTimezoneInfo();\n  console.log(`🌍 Your timezone: ${tz.name} (${tz.abbreviation})`);\n  console.log(`⏰ UTC offset: ${tz.offset > 0 ? '+' : ''}${tz.offset} hours\\n`);\n\n  // Create sample session\n  const session = createSessionWithProperTimezone('Build microservices API', {\n    queenType: 'strategic',\n    maxWorkers: 6,\n  });\n\n  // Display with proper timezone\n  displaySessionInfo(session);\n\n  console.log('\\n📋 Session list example:');\n  listSessionsWithTimezone([session]);\n\n  console.log(\"\\n✅ Fix applied - timestamps now show in user's local timezone!\");\n}\n"],"names":["getLocalTimestamp","formatTimestampForDisplay","getTimezoneInfo","createSessionWithProperTimezone","objective","options","sessionId","Date","now","Math","random","toString","substr","utcTimestamp","toISOString","localTimestamp","timezoneInfo","session","id","createdAt","createdAtLocal","timezone","status","displaySessionInfo","timeDisplay","console","log","display","name","listSessionsWithTimezone","sessions","length","padEnd","repeat","forEach","relative","demonstrateTimezonefix","tz","abbreviation","offset","queenType","maxWorkers"],"mappings":"AAKA,SACEA,iBAAiB,EAEjBC,yBAAyB,EACzBC,eAAe,QACV,gCAAgC;AAKvC,OAAO,SAASC,gCAAgCC,SAAS,EAAEC,UAAU,CAAC,CAAC;IACrE,MAAMC,YAAY,CAAC,QAAQ,EAAEC,KAAKC,GAAG,GAAG,CAAC,EAAEC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,MAAM,CAAC,GAAG,IAAI;IAGpF,MAAMC,eAAe,IAAIN,OAAOO,WAAW;IAC3C,MAAMC,iBAAiBf;IACvB,MAAMgB,eAAed;IAErB,MAAMe,UAAU;QACdC,IAAIZ;QACJF;QACAe,WAAWN;QACXO,gBAAgBL;QAChBM,UAAUL;QACVM,QAAQ;QACR,GAAGjB,OAAO;IACZ;IAEA,OAAOY;AACT;AAKA,OAAO,SAASM,mBAAmBN,OAAO;IACxC,MAAMO,cAAcvB,0BAA0BgB,QAAQE,SAAS;IAE/DM,QAAQC,GAAG,CAAC,CAAC,oBAAoB,CAAC;IAClCD,QAAQC,GAAG,CAAC,CAAC,OAAO,EAAET,QAAQC,EAAE,EAAE;IAClCO,QAAQC,GAAG,CAAC,CAAC,cAAc,EAAET,QAAQb,SAAS,EAAE;IAChDqB,QAAQC,GAAG,CAAC,CAAC,WAAW,EAAEF,YAAYG,OAAO,EAAE;IAC/CF,QAAQC,GAAG,CAAC,CAAC,aAAa,EAAET,QAAQI,QAAQ,EAAEO,QAAQ,WAAW;IACjEH,QAAQC,GAAG,CAAC,CAAC,WAAW,EAAET,QAAQK,MAAM,EAAE;AAC5C;AAKA,OAAO,SAASO,yBAAyBC,QAAQ;IAC/CL,QAAQC,GAAG,CAAC;IAEZ,IAAII,SAASC,MAAM,KAAK,GAAG;QACzBN,QAAQC,GAAG,CAAC;QACZ;IACF;IAGAD,QAAQC,GAAG,CAAC,KAAKM,MAAM,CAAC,MAAM,YAAYA,MAAM,CAAC,MAAM,UAAUA,MAAM,CAAC,MAAM;IAC9EP,QAAQC,GAAG,CAAC,IAAIO,MAAM,CAAC;IAEvBH,SAASI,OAAO,CAAC,CAACjB;QAChB,MAAMO,cAAcvB,0BAA0BgB,QAAQE,SAAS;QAC/D,MAAMD,KAAKD,QAAQC,EAAE,CAACa,MAAM,GAAG,KAAKd,QAAQC,EAAE,CAACN,MAAM,CAAC,GAAG,MAAM,QAAQK,QAAQC,EAAE;QACjF,MAAMd,YACJa,QAAQb,SAAS,CAAC2B,MAAM,GAAG,KAAKd,QAAQb,SAAS,CAACQ,MAAM,CAAC,GAAG,MAAM,QAAQK,QAAQb,SAAS;QAE7FqB,QAAQC,GAAG,CACTR,GAAGc,MAAM,CAAC,MAAM5B,UAAU4B,MAAM,CAAC,MAAMR,YAAYW,QAAQ,CAACH,MAAM,CAAC,MAAMf,QAAQK,MAAM;IAE3F;IAEAG,QAAQC,GAAG,CAAC,CAAC,mCAAmC,EAAExB,kBAAkB0B,IAAI,EAAE;AAC5E;AAKA,OAAO,SAASQ;IACdX,QAAQC,GAAG,CAAC;IAGZ,MAAMW,KAAKnC;IACXuB,QAAQC,GAAG,CAAC,CAAC,kBAAkB,EAAEW,GAAGT,IAAI,CAAC,EAAE,EAAES,GAAGC,YAAY,CAAC,CAAC,CAAC;IAC/Db,QAAQC,GAAG,CAAC,CAAC,cAAc,EAAEW,GAAGE,MAAM,GAAG,IAAI,MAAM,KAAKF,GAAGE,MAAM,CAAC,QAAQ,CAAC;IAG3E,MAAMtB,UAAUd,gCAAgC,2BAA2B;QACzEqC,WAAW;QACXC,YAAY;IACd;IAGAlB,mBAAmBN;IAEnBQ,QAAQC,GAAG,CAAC;IACZG,yBAAyB;QAACZ;KAAQ;IAElCQ,QAAQC,GAAG,CAAC;AACd"}