{"version":3,"sources":["../../../../src/cli/simple-commands/stream-processor.js"],"sourcesContent":["/**\n * Stream processor for Claude stream-json output\n * Provides real-time status updates and progress tracking\n */\n\nimport { Transform } from 'stream';\n\nexport class StreamJsonProcessor extends Transform {\n  constructor(options = {}) {\n    super({ objectMode: false });\n    this.buffer = '';\n    this.agentId = options.agentId;\n    this.agentName = options.agentName || 'Agent';\n    this.agentIcon = options.agentIcon || 'ü§ñ';\n    this.taskId = options.taskId || 'unknown';\n    this.startTime = Date.now();\n    this.eventCount = 0;\n    this.lastUpdate = Date.now();\n    this.options = options;\n    this.display = options.display; // Reference to concurrent display\n  }\n\n  _transform(chunk, encoding, callback) {\n    this.buffer += chunk.toString();\n    const lines = this.buffer.split('\\n');\n    this.buffer = lines.pop() || '';\n\n    for (const line of lines) {\n      if (line.trim()) {\n        try {\n          const event = JSON.parse(line);\n          this.processEvent(event);\n        } catch (e) {\n          // Not JSON, pass through if in verbose mode\n          if (this.options.verbose) {\n            console.log(`[${this.agentName}] ${line}`);\n          }\n        }\n      }\n    }\n\n    // Update progress display periodically\n    if (Date.now() - this.lastUpdate > 1000) {\n      this.updateProgress();\n      this.lastUpdate = Date.now();\n    }\n\n    callback();\n  }\n\n  _flush(callback) {\n    if (this.buffer.trim()) {\n      try {\n        const event = JSON.parse(this.buffer);\n        this.processEvent(event);\n      } catch (e) {\n        // Ignore\n      }\n    }\n    this.showFinalStatus();\n    callback();\n  }\n\n  processEvent(event) {\n    this.eventCount++;\n    \n    // If we have a concurrent display, update it instead of console logging\n    if (this.display) {\n      this.updateDisplay(event);\n      return;\n    }\n    \n    // Handle quiet mode - show important actions and commands\n    if (this.options.verbose === false && this.options.logLevel === 'quiet') {\n      switch (event.type) {\n        case 'system':\n          if (event.subtype === 'init') {\n            console.log(`ü§ñ ${this.agentName} - Started`);\n          }\n          break;\n        case 'assistant':\n          // In quiet mode, still show bash commands and key actions\n          if (event.message?.content?.length > 0) {\n            const content = event.message.content[0];\n            if (content.type === 'tool_use' && content.name === 'Bash' && content.input?.command) {\n              const command = content.input.command;\n              if (command.length > 60) {\n                console.log(`  üîß ${command.substring(0, 57)}...`);\n              } else {\n                console.log(`  üîß ${command}`);\n              }\n            } else if (content.type === 'tool_use' && ['WebSearch', 'Read', 'Write'].includes(content.name)) {\n              const toolName = content.name.replace(/([A-Z])/g, ' $1').trim();\n              if (content.input) {\n                const firstKey = Object.keys(content.input)[0];\n                const firstValue = content.input[firstKey];\n                if (typeof firstValue === 'string' && firstValue.length < 40) {\n                  console.log(`  üîß ${toolName}: ${firstValue}`);\n                } else {\n                  console.log(`  üîß ${toolName}`);\n                }\n              }\n            }\n          }\n          break;\n        case 'result':\n          if (event.subtype === 'success') {\n            console.log(`‚úÖ ${this.agentName} - Completed (${this.formatDuration(event.duration_ms)})`);\n          } else if (event.is_error) {\n            console.log(`‚ùå ${this.agentName} - Failed: ${event.error || 'Unknown error'}`);\n          }\n          break;\n      }\n      return;\n    }\n    \n    // Use clean, concise formatting for non-interactive mode\n    switch (event.type) {\n      case 'system':\n        if (event.subtype === 'init') {\n          console.log(`\\nü§ñ ${this.agentName} - Started (Session: ${event.session_id?.substring(0, 8) || 'unknown'})`);\n        }\n        break;\n        \n      case 'assistant':\n        if (event.message?.content?.length > 0) {\n          const content = event.message.content[0];\n          if (content.type === 'text') {\n            // Show only the first meaningful line, skip verbose details\n            const lines = content.text.split('\\n').filter(line => line.trim());\n            if (lines.length > 0) {\n              const firstLine = lines[0].trim();\n              if (firstLine.length > 100) {\n                console.log(`üí≠ ${firstLine.substring(0, 97)}...`);\n              } else {\n                console.log(`üí≠ ${firstLine}`);\n              }\n            }\n          } else if (content.type === 'tool_use') {\n            // Show tool use with actual command/input when available\n            const toolName = content.name.replace(/([A-Z])/g, ' $1').trim();\n            \n            // For Bash tool, show the actual command\n            if (content.name === 'Bash' && content.input?.command) {\n              const command = content.input.command;\n              if (command.length > 80) {\n                console.log(`üîß Bash: ${command.substring(0, 77)}...`);\n              } else {\n                console.log(`üîß Bash: ${command}`);\n              }\n            }\n            // For other tools, show key parameters\n            else if (content.input && Object.keys(content.input).length > 0) {\n              const firstKey = Object.keys(content.input)[0];\n              const firstValue = content.input[firstKey];\n              \n              if (typeof firstValue === 'string' && firstValue.length < 60) {\n                console.log(`üîß ${toolName}: ${firstValue}`);\n              } else if (typeof firstValue === 'string') {\n                console.log(`üîß ${toolName}: ${firstValue.substring(0, 57)}...`);\n              } else {\n                console.log(`üîß ${toolName}`);\n              }\n            } else {\n              console.log(`üîß ${toolName}`);\n            }\n          }\n        }\n        break;\n        \n      case 'user':\n        // Tool results - show only success/failure\n        if (event.message?.content?.[0]?.type === 'tool_result') {\n          const result = event.message.content[0];\n          if (!result.is_error) {\n            console.log(`  ‚úÖ Tool completed`);\n          } else {\n            console.log(`  ‚ùå Tool failed: ${result.error || 'Unknown error'}`);\n          }\n        }\n        break;\n        \n      case 'result':\n        if (event.subtype === 'success') {\n          console.log(`\\n‚úÖ ${this.agentName} - Completed (${this.formatDuration(event.duration_ms)})`);\n          if (event.total_cost_usd) {\n            console.log(`   üí∞ Cost: $${event.total_cost_usd.toFixed(4)}`);\n          }\n        } else if (event.is_error) {\n          console.log(`\\n‚ùå ${this.agentName} - Failed: ${event.error || 'Unknown error'}`);\n        }\n        break;\n        \n      default:\n        // Only show important events in verbose mode\n        if (this.options.verbose && ['tool_call', 'error', 'warning'].includes(event.type)) {\n          console.log(`‚ÑπÔ∏è  [${event.type}] ${event.message || JSON.stringify(event).substring(0, 80)}...`);\n        }\n    }\n  }\n  \n  /**\n   * Update the concurrent display instead of console\n   */\n  updateDisplay(event) {\n    switch (event.type) {\n      case 'system':\n        if (event.subtype === 'init') {\n          this.display.updateAgent(this.agentId, { status: 'active' });\n          this.display.addActivity(this.agentId, 'Initialized');\n        }\n        break;\n        \n      case 'assistant':\n        if (event.message?.content?.length > 0) {\n          const content = event.message.content[0];\n          if (content.type === 'text') {\n            const preview = content.text.substring(0, 80);\n            this.display.addActivity(this.agentId, preview);\n          } else if (content.type === 'tool_use') {\n            this.display.addActivity(this.agentId, `Using ${content.name}`, content.name);\n          }\n        }\n        break;\n        \n      case 'user':\n        // Tool results\n        if (event.message?.content?.[0]?.type === 'tool_result') {\n          const result = event.message.content[0];\n          if (!result.is_error) {\n            this.display.addActivity(this.agentId, 'Tool completed', null);\n          }\n        }\n        break;\n        \n      case 'result':\n        if (event.subtype === 'success') {\n          this.display.updateAgent(this.agentId, { \n            status: 'completed',\n            progress: 100\n          });\n          this.display.addActivity(this.agentId, 'Task completed successfully');\n        } else if (event.is_error) {\n          this.display.updateAgent(this.agentId, { \n            status: 'failed'\n          });\n          this.display.addActivity(this.agentId, `Failed: ${event.error || 'Unknown error'}`);\n        }\n        break;\n    }\n  }\n\n  updateProgress() {\n    // Don't show progress updates in interactive-style mode - events handle the display\n  }\n\n  showFinalStatus() {\n    const elapsed = this.formatDuration(Date.now() - this.startTime);\n    if (this.eventCount > 0) {\n      console.log(`\\nüìä ${this.agentName} - Processed ${this.eventCount} events in ${elapsed}`);\n    }\n  }\n\n  getSpinner() {\n    const frames = ['‚†ã', '‚†ô', '‚†π', '‚†∏', '‚†º', '‚†¥', '‚†¶', '‚†ß', '‚†á', '‚†è'];\n    return frames[Math.floor(Date.now() / 100) % frames.length];\n  }\n\n  getProgressBar(elapsed, expected) {\n    const progress = Math.min(elapsed / expected, 1);\n    const filled = Math.floor(progress * 10);\n    const empty = 10 - filled;\n    return '[' + '‚ñà'.repeat(filled) + '‚ñë'.repeat(empty) + ']';\n  }\n\n  formatDuration(ms) {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    }\n    return `${seconds}s`;\n  }\n\n  formatToolParams(input) {\n    if (!input || typeof input !== 'object' || Object.keys(input).length === 0) {\n      return '';\n    }\n    \n    // Format key parameters for display\n    const keys = Object.keys(input);\n    if (keys.length === 1) {\n      const key = keys[0];\n      const value = input[key];\n      if (typeof value === 'string' && value.length < 30) {\n        return `(${key}: \"${value}\")`;\n      } else if (typeof value === 'number' || typeof value === 'boolean') {\n        return `(${key}: ${value})`;\n      }\n    } else if (keys.length <= 3) {\n      const params = keys.map(key => {\n        const value = input[key];\n        if (typeof value === 'string' && value.length < 20) {\n          return `${key}: \"${value}\"`;\n        } else if (typeof value === 'number' || typeof value === 'boolean') {\n          return `${key}: ${value}`;\n        } else {\n          return `${key}: ...`;\n        }\n      }).join(', ');\n      return `(${params})`;\n    }\n    \n    return '(...)';\n  }\n}\n\n/**\n * Create a stream processor for an agent\n */\nexport function createStreamProcessor(agentName, agentIcon, options = {}) {\n  return new StreamJsonProcessor({\n    agentName,\n    agentIcon,\n    ...options\n  });\n}"],"names":["Transform","StreamJsonProcessor","options","objectMode","buffer","agentId","agentName","agentIcon","taskId","startTime","Date","now","eventCount","lastUpdate","display","_transform","chunk","encoding","callback","toString","lines","split","pop","line","trim","event","JSON","parse","processEvent","e","verbose","console","log","updateProgress","_flush","showFinalStatus","updateDisplay","logLevel","type","subtype","message","content","length","name","input","command","substring","includes","toolName","replace","firstKey","Object","keys","firstValue","formatDuration","duration_ms","is_error","error","session_id","text","filter","firstLine","result","total_cost_usd","toFixed","stringify","updateAgent","status","addActivity","preview","progress","elapsed","getSpinner","frames","Math","floor","getProgressBar","expected","min","filled","empty","repeat","ms","seconds","minutes","formatToolParams","key","value","params","map","join","createStreamProcessor"],"mappings":"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"}