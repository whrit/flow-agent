{"version":3,"sources":["../../../../src/cli/simple-commands/pair-working.js"],"sourcesContent":["/**\n * Enhanced Pair Programming with Working Auto-Fix\n * This version actually applies fixes using real commands\n */\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { spawn, exec } from 'child_process';\nimport { promisify } from 'util';\nimport readline from 'readline';\n\nconst execAsync = promisify(exec);\n\n// Guidance mode configurations\nconst GUIDANCE_MODES = {\n  beginner: {\n    verbosity: 'high',\n    suggestions: 'frequent',\n    explanations: 'detailed',\n    autoFix: true,\n    threshold: 0.9,\n    description: 'Detailed explanations and step-by-step guidance'\n  },\n  intermediate: {\n    verbosity: 'medium',\n    suggestions: 'balanced',\n    explanations: 'concise',\n    autoFix: true,\n    threshold: 0.95,\n    description: 'Balanced guidance with key explanations'\n  },\n  expert: {\n    verbosity: 'low',\n    suggestions: 'minimal',\n    explanations: 'brief',\n    autoFix: true,\n    threshold: 0.98,\n    description: 'Minimal guidance, maximum efficiency'\n  },\n  mentor: {\n    verbosity: 'high',\n    suggestions: 'educational',\n    explanations: 'teaching',\n    autoFix: false,\n    threshold: 0.9,\n    description: 'Educational focus with learning opportunities'\n  },\n  strict: {\n    verbosity: 'medium',\n    suggestions: 'quality-focused',\n    explanations: 'standards',\n    autoFix: true,\n    threshold: 0.99,\n    description: 'Enforces highest code quality standards'\n  }\n};\n\nclass WorkingPairSession {\n  constructor(options = {}) {\n    this.sessionId = `pair_${Date.now()}`;\n    this.guidanceMode = options.guidance || 'intermediate';\n    this.guidance = GUIDANCE_MODES[this.guidanceMode];\n    this.autoFix = options.autoFix ?? this.guidance.autoFix;\n    this.threshold = options.threshold || this.guidance.threshold;\n    this.maxIterations = options.maxIterations || 5;\n    this.verify = options.verify || false;\n    this.startTime = new Date();\n    this.status = 'active';\n    this.verificationScores = [];\n    this.fixHistory = [];\n    this.currentIteration = 0;\n    this.rl = null;\n  }\n\n  async start() {\n    await this.saveSession();\n    this.showWelcome();\n    \n    if (this.verify && this.autoFix) {\n      console.log('\\nüîÑ Auto-Fix Mode Enabled');\n      console.log('  ‚Ä¢ Will automatically fix issues until threshold is met');\n      console.log(`  ‚Ä¢ Maximum iterations: ${this.maxIterations}`);\n      console.log(`  ‚Ä¢ Target threshold: ${this.threshold}`);\n      \n      await this.recursiveFixLoop();\n    } else if (this.verify) {\n      await this.runVerification();\n    }\n    \n    await this.startInteractiveMode();\n  }\n\n  /**\n   * Working recursive fix loop that actually applies fixes\n   */\n  async recursiveFixLoop() {\n    console.log('\\nüöÄ Starting Auto-Fix Loop with Real Fixes...');\n    console.log('‚îÅ'.repeat(50));\n    \n    let score = 0;\n    this.currentIteration = 0;\n    \n    while (score < this.threshold && this.currentIteration < this.maxIterations) {\n      this.currentIteration++;\n      console.log(`\\nüìç Iteration ${this.currentIteration}/${this.maxIterations}`);\n      \n      // Step 1: Run verification\n      const verificationResult = await this.runVerification();\n      score = verificationResult.score;\n      \n      if (score >= this.threshold) {\n        console.log(`\\n‚ú® Threshold met! Score: ${score.toFixed(2)} >= ${this.threshold}`);\n        break;\n      }\n      \n      // Step 2: Apply actual fixes\n      console.log('\\nüîß Applying fixes...');\n      const fixResults = await this.applyRealFixes(verificationResult);\n      \n      if (fixResults.applied > 0) {\n        console.log(`  ‚úÖ Applied ${fixResults.applied} fixes`);\n        this.fixHistory.push({\n          iteration: this.currentIteration,\n          fixes: fixResults.fixes,\n          timestamp: new Date()\n        });\n      }\n      \n      // Wait before next iteration\n      await new Promise(resolve => setTimeout(resolve, 2000));\n    }\n    \n    this.showFixSummary();\n  }\n\n  /**\n   * Apply real fixes to the codebase\n   */\n  async applyRealFixes(verificationResult) {\n    const fixResults = {\n      applied: 0,\n      fixes: []\n    };\n    \n    // Fix linting issues\n    if (verificationResult.lintScore < 0.8) {\n      console.log('  üîß Fixing linting issues...');\n      try {\n        // First try auto-fix\n        const { stdout, stderr } = await execAsync('npm run lint -- --fix 2>&1 || true');\n        \n        // Check if fixes were applied\n        const afterLint = await execAsync('npm run lint 2>&1 || true');\n        const stillHasErrors = afterLint.stdout.toLowerCase().includes('error');\n        \n        if (!stillHasErrors || afterLint.stdout.match(/error/gi)?.length < \n            stdout.match(/error/gi)?.length) {\n          console.log('    ‚úÖ Applied ESLint auto-fixes');\n          fixResults.applied++;\n          fixResults.fixes.push('ESLint auto-fix');\n        }\n        \n        // If still has errors, try prettier\n        if (stillHasErrors) {\n          await execAsync('npx prettier --write \"src/**/*.{js,ts,jsx,tsx}\" 2>&1 || true');\n          console.log('    ‚úÖ Applied Prettier formatting');\n          fixResults.applied++;\n          fixResults.fixes.push('Prettier formatting');\n        }\n      } catch (error) {\n        console.log('    ‚ö†Ô∏è Some linting issues require manual fixes');\n      }\n    }\n    \n    // Fix TypeScript issues\n    if (verificationResult.typeScore < 0.8) {\n      console.log('  üîß Analyzing TypeScript errors...');\n      try {\n        const { stdout: tsErrors } = await execAsync('npm run typecheck 2>&1 || true');\n        \n        // Common auto-fixable TypeScript issues\n        if (tsErrors.includes('Could not find a declaration file')) {\n          console.log('    üì¶ Installing missing type definitions...');\n          const missingTypes = this.extractMissingTypes(tsErrors);\n          for (const pkg of missingTypes) {\n            try {\n              await execAsync(`npm install --save-dev @types/${pkg} 2>&1 || true`);\n              console.log(`      ‚úÖ Installed @types/${pkg}`);\n              fixResults.applied++;\n              fixResults.fixes.push(`Installed @types/${pkg}`);\n            } catch (e) {\n              // Type package might not exist\n            }\n          }\n        }\n        \n        // Add basic type annotations for 'any' types\n        if (tsErrors.includes(\"implicitly has an 'any' type\")) {\n          console.log('    üìù Adding type annotations for implicit any...');\n          // This would need more complex AST manipulation in production\n          // For now, we'll just report it\n          console.log('      ‚ÑπÔ∏è Manual type annotations needed');\n        }\n      } catch (error) {\n        console.log('    ‚ö†Ô∏è TypeScript fixes require manual intervention');\n      }\n    }\n    \n    // Fix build issues\n    if (verificationResult.buildScore < 0.8) {\n      console.log('  üîß Fixing build configuration...');\n      try {\n        // Clear cache and rebuild\n        await execAsync('rm -rf dist 2>&1 || true');\n        await execAsync('npm run build 2>&1 || true');\n        console.log('    ‚úÖ Cleared cache and rebuilt');\n        fixResults.applied++;\n        fixResults.fixes.push('Cache clear and rebuild');\n      } catch (error) {\n        console.log('    ‚ö†Ô∏è Build issues may require configuration changes');\n      }\n    }\n    \n    // Fix package issues\n    console.log('  üîß Checking for dependency issues...');\n    try {\n      // Audit and fix vulnerabilities\n      const { stdout: auditOutput } = await execAsync('npm audit --json 2>&1 || true');\n      const audit = JSON.parse(auditOutput);\n      \n      if (audit.metadata?.vulnerabilities?.total > 0) {\n        console.log('    üõ°Ô∏è Fixing security vulnerabilities...');\n        await execAsync('npm audit fix 2>&1 || true');\n        console.log('    ‚úÖ Applied security fixes');\n        fixResults.applied++;\n        fixResults.fixes.push('Security vulnerability fixes');\n      }\n      \n      // Update outdated packages (only patch/minor)\n      await execAsync('npm update 2>&1 || true');\n      console.log('    ‚úÖ Updated dependencies');\n      fixResults.applied++;\n      fixResults.fixes.push('Dependency updates');\n    } catch (error) {\n      // Audit might fail, that's okay\n    }\n    \n    return fixResults;\n  }\n\n  /**\n   * Extract missing type packages from TypeScript errors\n   */\n  extractMissingTypes(tsErrors) {\n    const packages = new Set();\n    const regex = /Could not find a declaration file for module '([^']+)'/g;\n    let match;\n    \n    while ((match = regex.exec(tsErrors)) !== null) {\n      const pkg = match[1];\n      // Clean package name (remove @org/ prefix if present)\n      const cleanPkg = pkg.replace(/^@[^/]+\\//, '');\n      packages.add(cleanPkg);\n    }\n    \n    return Array.from(packages);\n  }\n\n  /**\n   * Run verification with detailed scoring\n   */\n  async runVerification() {\n    console.log('\\nüîç Running verification check...');\n    \n    const checks = [\n      { \n        name: 'Type Check', \n        command: 'npm run typecheck 2>&1 || true',\n        weight: 0.4,\n        scoreKey: 'typeScore'\n      },\n      { \n        name: 'Linting', \n        command: 'npm run lint 2>&1 || true',\n        weight: 0.3,\n        scoreKey: 'lintScore'\n      },\n      { \n        name: 'Build', \n        command: 'npm run build 2>&1 || true',\n        weight: 0.3,\n        scoreKey: 'buildScore'\n      }\n    ];\n    \n    const results = {};\n    let totalScore = 0;\n    let totalWeight = 0;\n    \n    for (const check of checks) {\n      try {\n        const { stdout, stderr } = await execAsync(check.command);\n        const output = stdout + stderr;\n        \n        // Calculate score based on actual errors/warnings\n        let score = 1.0;\n        const errorCount = (output.match(/error/gi) || []).length;\n        const warningCount = (output.match(/warning/gi) || []).length;\n        \n        if (errorCount > 0) {\n          score = Math.max(0.2, 1.0 - (errorCount * 0.1));\n        } else if (warningCount > 0) {\n          score = Math.max(0.7, 1.0 - (warningCount * 0.05));\n        }\n        \n        results[check.scoreKey] = score;\n        totalScore += score * check.weight;\n        totalWeight += check.weight;\n        \n        const icon = score >= 0.8 ? '‚úÖ' : score >= 0.5 ? '‚ö†Ô∏è' : '‚ùå';\n        console.log(`  ${icon} ${check.name}: ${score.toFixed(2)}`);\n      } catch (error) {\n        console.log(`  ‚ùå ${check.name}: 0.00 (failed)`);\n        results[check.scoreKey] = 0;\n        totalWeight += check.weight;\n      }\n    }\n    \n    const averageScore = totalWeight > 0 ? totalScore / totalWeight : 0;\n    console.log(`\\nüìä Verification Score: ${averageScore.toFixed(2)}/${this.threshold}`);\n    \n    if (this.guidanceMode === 'beginner' && averageScore < this.threshold) {\n      console.log('\\nüí° Don\\'t worry! Use /autofix to automatically improve the score');\n    }\n    \n    const verificationResult = {\n      score: averageScore,\n      ...results,\n      timestamp: new Date(),\n      iteration: this.currentIteration\n    };\n    \n    this.verificationScores.push(verificationResult);\n    return verificationResult;\n  }\n\n  showWelcome() {\n    console.log('\\nüöÄ Enhanced Pair Programming Session');\n    console.log('‚îÅ'.repeat(50));\n    console.log(`Session ID: ${this.sessionId}`);\n    console.log(`Guidance Mode: ${this.guidanceMode.charAt(0).toUpperCase() + this.guidanceMode.slice(1)}`);\n    console.log(`Description: ${this.guidance.description}`);\n    console.log(`Verification: ${this.verify ? '‚úÖ Enabled' : '‚ùå Disabled'}`);\n    console.log(`Auto-Fix: ${this.autoFix ? '‚úÖ Enabled' : '‚ùå Disabled'}`);\n    console.log(`Target Threshold: ${this.threshold}`);\n    console.log('‚îÅ'.repeat(50));\n    \n    if (this.guidanceMode === 'beginner') {\n      console.log('\\nüìö Guidance Settings:');\n      console.log(`  ‚Ä¢ Mode: ${this.guidanceMode.charAt(0).toUpperCase() + this.guidanceMode.slice(1)}`);\n      console.log(`  ‚Ä¢ Verbosity: ${this.guidance.verbosity}`);\n      console.log(`  ‚Ä¢ Suggestions: ${this.guidance.suggestions}`);\n      console.log(`  ‚Ä¢ Explanations: ${this.guidance.explanations}`);\n      \n      console.log('\\nüí° Beginner Tips:');\n      console.log('  ‚Ä¢ Use /explain for detailed explanations');\n      console.log('  ‚Ä¢ Use /pattern to see design patterns');\n      console.log('  ‚Ä¢ Use /best for best practices');\n      console.log('  ‚Ä¢ Use /why to understand decisions');\n    }\n  }\n\n  showFixSummary() {\n    if (this.fixHistory.length > 0) {\n      console.log('\\nüìã Fix Summary:');\n      console.log('‚îÅ'.repeat(50));\n      \n      let totalFixes = 0;\n      for (const entry of this.fixHistory) {\n        console.log(`\\nIteration ${entry.iteration}:`);\n        for (const fix of entry.fixes) {\n          console.log(`  ‚úÖ ${fix}`);\n          totalFixes++;\n        }\n      }\n      \n      console.log('‚îÅ'.repeat(50));\n      console.log(`Total fixes applied: ${totalFixes}`);\n      console.log(`Iterations completed: ${this.currentIteration}`);\n      \n      if (this.verificationScores.length > 1) {\n        const first = this.verificationScores[0].score;\n        const last = this.verificationScores[this.verificationScores.length - 1].score;\n        const improvement = ((last - first) * 100).toFixed(1);\n        if (improvement > 0) {\n          console.log(`Score improvement: +${improvement}%`);\n        }\n      }\n    }\n  }\n\n  async startInteractiveMode() {\n    this.rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout,\n      prompt: '\\nüíª pair> '\n    });\n\n    console.log('\\nüí° Interactive mode active. Type /help for commands.\\n');\n    \n    this.showCommands();\n    this.rl.prompt();\n\n    this.rl.on('line', async (line) => {\n      const input = line.trim();\n      \n      if (input.startsWith('/')) {\n        await this.handleCommand(input);\n      } else if (input.startsWith('?')) {\n        await this.askQuestion(input.slice(1).trim());\n      } else if (input) {\n        console.log('ü§ñ Processing your input...');\n      }\n      \n      this.rl.prompt();\n    });\n\n    this.rl.on('close', () => {\n      this.end();\n    });\n  }\n\n  showCommands() {\n    console.log('\\nüìù Session Commands:');\n    console.log('  /help         - Show all commands');\n    console.log('  /verify       - Run verification');\n    console.log('  /autofix      - Start auto-fix loop');\n    console.log('  /suggest      - Get suggestions');\n    console.log('  /explain <topic> - Explain concept');\n    console.log('  /best <area>  - Show best practices');\n    console.log('  /pattern      - Pattern suggestions');\n    console.log('  /why          - Explain decisions');\n    console.log('  /status       - Session status');\n    console.log('  /metrics      - Quality metrics');\n    console.log('  /guidance     - Change guidance mode');\n    console.log('  /test         - Run tests');\n    console.log('  /commit       - Commit with verification');\n    console.log('  /end          - End session');\n    \n    if (this.guidanceMode === 'beginner') {\n      console.log('\\nüí° Quick tips:');\n      console.log('  ‚Ä¢ Type ? followed by question for Q&A');\n      console.log('  ‚Ä¢ Use Tab for command completion');\n    }\n  }\n\n  async handleCommand(command) {\n    const [cmd, ...args] = command.split(' ');\n    \n    switch (cmd) {\n      case '/help':\n        this.showCommands();\n        break;\n        \n      case '/verify':\n        await this.runVerification();\n        break;\n        \n      case '/autofix':\n        await this.recursiveFixLoop();\n        break;\n        \n      case '/suggest':\n        await this.showSuggestions();\n        break;\n        \n      case '/explain':\n        await this.explainConcept(args.join(' '));\n        break;\n        \n      case '/best':\n        this.showBestPractices(args[0] || 'general');\n        break;\n        \n      case '/pattern':\n        this.showPatternSuggestions();\n        break;\n        \n      case '/why':\n        this.explainDecisions();\n        break;\n        \n      case '/status':\n        await this.showStatus();\n        break;\n        \n      case '/metrics':\n        this.showMetrics();\n        break;\n        \n      case '/guidance':\n        await this.changeGuidanceMode(args[0]);\n        break;\n        \n      case '/test':\n        await this.runTests();\n        break;\n        \n      case '/commit':\n        await this.commitWithVerification();\n        break;\n        \n      case '/end':\n      case '/exit':\n        await this.end();\n        process.exit(0);\n        break;\n        \n      default:\n        console.log(`‚ùå Unknown command: ${cmd}`);\n        console.log('üí° Type /help for available commands');\n    }\n  }\n\n  async showSuggestions() {\n    console.log('\\nüí° Analyzing for suggestions...');\n    \n    // Get latest verification scores\n    let latestScore = null;\n    if (this.verificationScores.length > 0) {\n      latestScore = this.verificationScores[this.verificationScores.length - 1];\n    } else {\n      latestScore = await this.runVerification();\n    }\n    \n    console.log('\\nüìù Immediate Actions:');\n    if (latestScore.lintScore < 0.8) {\n      console.log('  1. Fix linting issues: Run /autofix or npm run lint --fix');\n    }\n    if (latestScore.typeScore < 0.8) {\n      console.log('  2. Fix TypeScript errors: Check npm run typecheck output');\n    }\n    if (latestScore.buildScore < 0.8) {\n      console.log('  3. Fix build issues: Clear cache and rebuild');\n    }\n    \n    if (latestScore.score >= this.threshold) {\n      console.log('  ‚ú® Code quality meets threshold! Consider adding tests or documentation.');\n    }\n  }\n\n  async explainConcept(topic) {\n    if (!topic) {\n      console.log('Usage: /explain <topic>');\n      return;\n    }\n    \n    console.log(`\\nüìö Explaining: ${topic}`);\n    console.log('‚îÅ'.repeat(40));\n    \n    // Provide explanations based on common topics\n    const explanations = {\n      'typescript': 'TypeScript adds static typing to JavaScript, catching errors at compile time.',\n      'linting': 'Linting analyzes code for potential errors and style issues.',\n      'testing': 'Tests verify your code works as expected and prevent regressions.',\n      'async': 'Async/await provides cleaner syntax for handling promises.',\n      'hooks': 'React hooks allow using state in functional components.'\n    };\n    \n    const explanation = explanations[topic.toLowerCase()];\n    if (explanation) {\n      console.log(explanation);\n    } else {\n      console.log('Topic not found. Try: typescript, linting, testing, async, hooks');\n    }\n  }\n\n  showBestPractices(area) {\n    console.log(`\\nüìö Best Practices for ${area}:`);\n    console.log('‚îÅ'.repeat(40));\n    \n    const practices = {\n      general: [\n        '‚Ä¢ Write self-documenting code',\n        '‚Ä¢ Keep functions small and focused',\n        '‚Ä¢ Use meaningful variable names',\n        '‚Ä¢ Handle errors properly',\n        '‚Ä¢ Write tests for critical paths'\n      ],\n      testing: [\n        '‚Ä¢ Test behavior, not implementation',\n        '‚Ä¢ Use descriptive test names',\n        '‚Ä¢ Follow AAA pattern',\n        '‚Ä¢ Mock external dependencies',\n        '‚Ä¢ Test edge cases'\n      ]\n    };\n    \n    const selected = practices[area] || practices.general;\n    selected.forEach(p => console.log(p));\n  }\n\n  showPatternSuggestions() {\n    console.log('\\nüèóÔ∏è Recommended Design Patterns:');\n    console.log('‚îÅ'.repeat(40));\n    console.log('‚Ä¢ Singleton - One instance throughout app');\n    console.log('‚Ä¢ Factory - Create objects without specifying class');\n    console.log('‚Ä¢ Observer - Subscribe to and notify changes');\n    console.log('‚Ä¢ Strategy - Encapsulate algorithms');\n    console.log('‚Ä¢ Decorator - Add functionality to objects');\n  }\n\n  explainDecisions() {\n    console.log('\\nü§î Decision Rationale:');\n    console.log('‚îÅ'.repeat(40));\n    console.log('Auto-fix decisions are based on:');\n    console.log('‚Ä¢ Industry best practices');\n    console.log('‚Ä¢ Code maintainability');\n    console.log('‚Ä¢ Performance optimization');\n    console.log('‚Ä¢ Security considerations');\n    console.log('‚Ä¢ Team consistency');\n  }\n\n  async showStatus() {\n    const duration = Math.floor((Date.now() - this.startTime) / 1000 / 60);\n    \n    console.log('\\nüìä Session Status');\n    console.log('‚îÅ'.repeat(40));\n    console.log(`Session ID: ${this.sessionId}`);\n    console.log(`Duration: ${duration} minutes`);\n    console.log(`Guidance Mode: ${this.guidanceMode}`);\n    console.log(`Auto-Fix: ${this.autoFix ? 'Enabled' : 'Disabled'}`);\n    console.log(`Fix Iterations: ${this.currentIteration}`);\n    console.log(`Total Fixes Applied: ${this.fixHistory.reduce((sum, h) => sum + h.fixes.length, 0)}`);\n    \n    if (this.verificationScores.length > 0) {\n      const latest = this.verificationScores[this.verificationScores.length - 1];\n      console.log(`Latest Score: ${latest.score.toFixed(2)}`);\n    }\n  }\n\n  showMetrics() {\n    console.log('\\nüìà Quality Metrics');\n    console.log('‚îÅ'.repeat(40));\n    \n    if (this.verificationScores.length > 0) {\n      console.log('\\nScore Progression:');\n      this.verificationScores.forEach((v, i) => {\n        const bar = '‚ñà'.repeat(Math.floor(v.score * 20));\n        console.log(`  ${i + 1}. ${bar} ${v.score.toFixed(2)}`);\n      });\n      \n      if (this.verificationScores.length > 1) {\n        const first = this.verificationScores[0].score;\n        const last = this.verificationScores[this.verificationScores.length - 1].score;\n        const improvement = ((last - first) * 100).toFixed(1);\n        if (improvement > 0) {\n          console.log(`\\n  Improvement: +${improvement}%`);\n        }\n      }\n    }\n  }\n\n  async changeGuidanceMode(newMode) {\n    if (!newMode || !GUIDANCE_MODES[newMode]) {\n      console.log('Available modes: beginner, intermediate, expert, mentor, strict');\n      return;\n    }\n    \n    this.guidanceMode = newMode;\n    this.guidance = GUIDANCE_MODES[newMode];\n    console.log(`‚úÖ Guidance mode changed to: ${newMode}`);\n    console.log(`Description: ${this.guidance.description}`);\n  }\n\n  async askQuestion(question) {\n    console.log('\\n‚ùì Question:', question);\n    console.log('\\nüìö Answer:');\n    console.log('‚îÅ'.repeat(40));\n    \n    // Provide contextual answers\n    if (question.toLowerCase().includes('why')) {\n      console.log('This is important for code quality and maintainability.');\n    } else if (question.toLowerCase().includes('how')) {\n      console.log('You can achieve this by following the suggested approach.');\n    } else {\n      console.log('That\\'s a great question! Consider exploring the documentation.');\n    }\n  }\n\n  async runTests() {\n    console.log('\\nüß™ Running tests...');\n    try {\n      const { stdout } = await execAsync('npm test 2>&1 || true');\n      const passed = !stdout.toLowerCase().includes('fail');\n      console.log(`  ${passed ? '‚úÖ' : '‚ùå'} Tests ${passed ? 'passed' : 'failed'}`);\n      return passed;\n    } catch (error) {\n      console.log('  ‚ùå Test execution failed:', error.message);\n      return false;\n    }\n  }\n\n  async commitWithVerification() {\n    const result = await this.runVerification();\n    \n    if (result.score >= this.threshold) {\n      console.log('‚úÖ Verification passed! Ready to commit.');\n      console.log('\\nüìù Suggested commit message:');\n      console.log(`  \"feat: improved code quality to ${result.score.toFixed(2)} threshold\"`);\n    } else {\n      console.log('‚ùå Verification failed!');\n      console.log('üí° Run /autofix to automatically fix issues');\n    }\n  }\n\n  async end() {\n    console.log('\\nüõë Ending pair programming session...');\n    \n    if (this.rl) this.rl.close();\n    \n    this.status = 'completed';\n    await this.saveSession();\n    \n    const duration = Math.floor((Date.now() - this.startTime) / 1000 / 60);\n    console.log('\\n‚ú® Session Complete!');\n    console.log('‚îÅ'.repeat(40));\n    console.log(`Duration: ${duration} minutes`);\n    console.log(`Total Fixes Applied: ${this.fixHistory.reduce((sum, h) => sum + h.fixes.length, 0)}`);\n    console.log(`Final Iterations: ${this.currentIteration}`);\n    \n    if (this.verificationScores.length > 0) {\n      const final = this.verificationScores[this.verificationScores.length - 1];\n      console.log(`Final Score: ${final.score.toFixed(2)}`);\n    }\n    \n    console.log('\\nüëã Thanks for pair programming!\\n');\n  }\n\n  async saveSession() {\n    const sessionPath = '.claude-flow/sessions/pair';\n    await fs.mkdir(sessionPath, { recursive: true });\n    \n    const sessionData = {\n      id: this.sessionId,\n      guidanceMode: this.guidanceMode,\n      autoFix: this.autoFix,\n      threshold: this.threshold,\n      startTime: this.startTime.toISOString(),\n      status: this.status,\n      verificationScores: this.verificationScores,\n      fixHistory: this.fixHistory,\n      iterations: this.currentIteration\n    };\n    \n    await fs.writeFile(\n      path.join(sessionPath, `${this.sessionId}.json`),\n      JSON.stringify(sessionData, null, 2)\n    );\n  }\n}\n\nasync function pairCommand(args = [], flags = {}) {\n  console.log('\\nüë• Enhanced Pair Programming');\n  console.log('‚îÅ'.repeat(50));\n\n  if (flags.help || args.includes('--help')) {\n    showHelp();\n    return;\n  }\n\n  if (flags.start) {\n    const session = new WorkingPairSession({\n      guidance: flags.guidance || 'intermediate',\n      verify: flags.verify || false,\n      autoFix: flags.autofix || flags.fix || false,\n      threshold: parseFloat(flags.threshold) || undefined,\n      maxIterations: parseInt(flags.iterations) || 5\n    });\n    \n    return await session.start();\n  }\n\n  showHelp();\n}\n\nfunction showHelp() {\n  console.log(`\nüìö USAGE:\n  claude-flow pair [options]\n\n‚öôÔ∏è OPTIONS:\n  --start              Start a new pair programming session\n  --guidance <mode>    Set guidance mode (beginner, intermediate, expert, mentor, strict)\n  --verify             Enable verification\n  --autofix, --fix     Enable auto-fix with real fixes\n  --threshold <n>      Target verification threshold\n  --iterations <n>     Max fix iterations\n  --help               Show this help message\n\nüéØ GUIDANCE MODES:\n  beginner      - Detailed explanations and step-by-step guidance\n  intermediate  - Balanced guidance with key explanations\n  expert        - Minimal guidance, maximum efficiency\n  mentor        - Educational focus with learning opportunities\n  strict        - Enforces highest code quality standards\n\nüîÑ AUTO-FIX FEATURES:\n  ‚Ä¢ Real ESLint auto-fixes\n  ‚Ä¢ Prettier formatting\n  ‚Ä¢ Missing type definitions installation\n  ‚Ä¢ Security vulnerability fixes\n  ‚Ä¢ Dependency updates\n  ‚Ä¢ Cache clearing and rebuilding\n\nüí° EXAMPLES:\n  # Beginner mode with auto-fix\n  claude-flow pair --start --guidance beginner --verify --autofix\n  \n  # Expert mode with high threshold\n  claude-flow pair --start --guidance expert --verify --autofix --threshold 0.98\n  \n  # Mentor mode (educational, no auto-fix)\n  claude-flow pair --start --guidance mentor --verify\n\nüìä DURING SESSION:\n  /verify    - Manual verification\n  /autofix   - Start auto-fix loop\n  /suggest   - Get improvement suggestions\n  /guidance  - Change guidance mode\n  /metrics   - Show quality metrics\n  /status    - Current session status\n\nüìö For detailed documentation, see:\n  .claude/commands/pair/README.md\n`);\n}\n\nexport default pairCommand;"],"names":["fs","path","exec","promisify","readline","execAsync","GUIDANCE_MODES","beginner","verbosity","suggestions","explanations","autoFix","threshold","description","intermediate","expert","mentor","strict","WorkingPairSession","options","sessionId","Date","now","guidanceMode","guidance","maxIterations","verify","startTime","status","verificationScores","fixHistory","currentIteration","rl","start","saveSession","showWelcome","console","log","recursiveFixLoop","runVerification","startInteractiveMode","repeat","score","verificationResult","toFixed","fixResults","applyRealFixes","applied","push","iteration","fixes","timestamp","Promise","resolve","setTimeout","showFixSummary","lintScore","stdout","stderr","afterLint","stillHasErrors","toLowerCase","includes","match","length","error","typeScore","tsErrors","missingTypes","extractMissingTypes","pkg","e","buildScore","auditOutput","audit","JSON","parse","metadata","vulnerabilities","total","packages","Set","regex","cleanPkg","replace","add","Array","from","checks","name","command","weight","scoreKey","results","totalScore","totalWeight","check","output","errorCount","warningCount","Math","max","icon","averageScore","charAt","toUpperCase","slice","totalFixes","entry","fix","first","last","improvement","createInterface","input","process","stdin","prompt","showCommands","on","line","trim","startsWith","handleCommand","askQuestion","end","cmd","args","split","showSuggestions","explainConcept","join","showBestPractices","showPatternSuggestions","explainDecisions","showStatus","showMetrics","changeGuidanceMode","runTests","commitWithVerification","exit","latestScore","topic","explanation","area","practices","general","testing","selected","forEach","p","duration","floor","reduce","sum","h","latest","v","i","bar","newMode","question","passed","message","result","close","final","sessionPath","mkdir","recursive","sessionData","id","toISOString","iterations","writeFile","stringify","pairCommand","flags","help","showHelp","session","autofix","parseFloat","undefined","parseInt"],"mappings":"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"}