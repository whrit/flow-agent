{"version":3,"sources":["../../../../src/cli/utils/interactive-detector.js"],"sourcesContent":["// interactive-detector.js - Detect and handle non-interactive environments\n\n/**\n * Check if the current environment supports interactive TTY features\n */\nexport function isInteractive() {\n  // Check if stdin is a TTY\n  if (!process.stdin.isTTY) {\n    return false;\n  }\n\n  // Check if stdout is a TTY\n  if (!process.stdout.isTTY) {\n    return false;\n  }\n\n  // Check for CI environment variables\n  const ciVars = [\n    'CI',\n    'CONTINUOUS_INTEGRATION',\n    'GITHUB_ACTIONS',\n    'GITLAB_CI',\n    'JENKINS_URL',\n    'TRAVIS',\n    'CIRCLECI',\n    'CODEBUILD_BUILD_ID',\n    'BUILDKITE',\n    'DRONE',\n  ];\n\n  for (const varName of ciVars) {\n    if (process.env[varName]) {\n      return false;\n    }\n  }\n\n  // Check if running inside Docker (common indicator)\n  if (process.env.DOCKER_CONTAINER || process.env.KUBERNETES_SERVICE_HOST) {\n    return false;\n  }\n\n  // Check if running in non-interactive mode explicitly\n  if (process.env.CLAUDE_FLOW_NON_INTERACTIVE === 'true') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Check if raw mode is supported (for Ink UI components)\n */\nexport function isRawModeSupported() {\n  return process.stdin.isTTY && process.stdin.setRawMode !== undefined;\n}\n\n/**\n * Get environment type for logging/debugging\n */\nexport function getEnvironmentType() {\n  if (!process.stdin.isTTY) return 'non-tty-stdin';\n  if (!process.stdout.isTTY) return 'non-tty-stdout';\n  if (process.env.CI) return 'ci-environment';\n  if (process.env.GITHUB_ACTIONS) return 'github-actions';\n  if (process.env.DOCKER_CONTAINER) return 'docker';\n  if (process.env.WSL_DISTRO_NAME || process.env.WSL_INTEROP) return 'wsl';\n  if (process.platform === 'win32') return 'windows';\n  if (process.env.TERM_PROGRAM === 'vscode') return 'vscode';\n  if (!isRawModeSupported()) return 'no-raw-mode';\n  return 'interactive';\n}\n\n/**\n * Wrap a command to handle non-interactive environments\n */\nexport function handleNonInteractive(commandName, interactiveFn, nonInteractiveFn) {\n  return async (...args) => {\n    if (isInteractive() && isRawModeSupported()) {\n      // Run interactive version\n      return interactiveFn(...args);\n    } else {\n      // Run non-interactive version or show helpful message\n      if (nonInteractiveFn) {\n        return nonInteractiveFn(...args);\n      } else {\n        console.error(`\\n⚠️  ${commandName} requires an interactive terminal.`);\n        console.error(`\\nDetected environment: ${getEnvironmentType()}`);\n        console.error('\\nPossible solutions:');\n        console.error('1. Run this command in an interactive terminal');\n        console.error('2. Use environment variables for authentication:');\n        console.error('   export ANTHROPIC_API_KEY=\"your-api-key\"');\n        console.error('3. Use --non-interactive flag with required parameters');\n        console.error('4. If using Docker, run with: docker run -it');\n        console.error('5. If using SSH, ensure pseudo-TTY allocation with: ssh -t');\n        console.error(\n          '\\nFor more info: https://github.com/ruvnet/claude-code-flow/docs/non-interactive.md\\n',\n        );\n        process.exit(1);\n      }\n    }\n  };\n}\n\n/**\n * Show warning for commands that work better in interactive mode\n */\nexport function warnNonInteractive(commandName) {\n  if (!isInteractive()) {\n    console.warn(\n      `\\n⚠️  Running '${commandName}' in non-interactive mode (${getEnvironmentType()})`,\n    );\n    console.warn(\n      'Some features may be limited. For full functionality, use an interactive terminal.\\n',\n    );\n  }\n}\n\n/**\n * Check for required environment variables in non-interactive mode\n */\nexport function checkNonInteractiveAuth() {\n  if (!isInteractive()) {\n    const apiKey = process.env.ANTHROPIC_API_KEY || process.env.CLAUDE_API_KEY;\n    if (!apiKey) {\n      console.error('\\n❌ Non-interactive mode requires API key to be set.');\n      console.error('\\nSet one of these environment variables:');\n      console.error('  export ANTHROPIC_API_KEY=\"your-api-key\"');\n      console.error('  export CLAUDE_API_KEY=\"your-api-key\"');\n      console.error('\\nOr run in an interactive terminal for login prompt.\\n');\n      return false;\n    }\n    return true;\n  }\n  return true;\n}\n"],"names":["isInteractive","process","stdin","isTTY","stdout","ciVars","varName","env","DOCKER_CONTAINER","KUBERNETES_SERVICE_HOST","CLAUDE_FLOW_NON_INTERACTIVE","isRawModeSupported","setRawMode","undefined","getEnvironmentType","CI","GITHUB_ACTIONS","WSL_DISTRO_NAME","WSL_INTEROP","platform","TERM_PROGRAM","handleNonInteractive","commandName","interactiveFn","nonInteractiveFn","args","console","error","exit","warnNonInteractive","warn","checkNonInteractiveAuth","apiKey","ANTHROPIC_API_KEY","CLAUDE_API_KEY"],"mappings":"AAKA,OAAO,SAASA;IAEd,IAAI,CAACC,QAAQC,KAAK,CAACC,KAAK,EAAE;QACxB,OAAO;IACT;IAGA,IAAI,CAACF,QAAQG,MAAM,CAACD,KAAK,EAAE;QACzB,OAAO;IACT;IAGA,MAAME,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,KAAK,MAAMC,WAAWD,OAAQ;QAC5B,IAAIJ,QAAQM,GAAG,CAACD,QAAQ,EAAE;YACxB,OAAO;QACT;IACF;IAGA,IAAIL,QAAQM,GAAG,CAACC,gBAAgB,IAAIP,QAAQM,GAAG,CAACE,uBAAuB,EAAE;QACvE,OAAO;IACT;IAGA,IAAIR,QAAQM,GAAG,CAACG,2BAA2B,KAAK,QAAQ;QACtD,OAAO;IACT;IAEA,OAAO;AACT;AAKA,OAAO,SAASC;IACd,OAAOV,QAAQC,KAAK,CAACC,KAAK,IAAIF,QAAQC,KAAK,CAACU,UAAU,KAAKC;AAC7D;AAKA,OAAO,SAASC;IACd,IAAI,CAACb,QAAQC,KAAK,CAACC,KAAK,EAAE,OAAO;IACjC,IAAI,CAACF,QAAQG,MAAM,CAACD,KAAK,EAAE,OAAO;IAClC,IAAIF,QAAQM,GAAG,CAACQ,EAAE,EAAE,OAAO;IAC3B,IAAId,QAAQM,GAAG,CAACS,cAAc,EAAE,OAAO;IACvC,IAAIf,QAAQM,GAAG,CAACC,gBAAgB,EAAE,OAAO;IACzC,IAAIP,QAAQM,GAAG,CAACU,eAAe,IAAIhB,QAAQM,GAAG,CAACW,WAAW,EAAE,OAAO;IACnE,IAAIjB,QAAQkB,QAAQ,KAAK,SAAS,OAAO;IACzC,IAAIlB,QAAQM,GAAG,CAACa,YAAY,KAAK,UAAU,OAAO;IAClD,IAAI,CAACT,sBAAsB,OAAO;IAClC,OAAO;AACT;AAKA,OAAO,SAASU,qBAAqBC,WAAW,EAAEC,aAAa,EAAEC,gBAAgB;IAC/E,OAAO,OAAO,GAAGC;QACf,IAAIzB,mBAAmBW,sBAAsB;YAE3C,OAAOY,iBAAiBE;QAC1B,OAAO;YAEL,IAAID,kBAAkB;gBACpB,OAAOA,oBAAoBC;YAC7B,OAAO;gBACLC,QAAQC,KAAK,CAAC,CAAC,MAAM,EAAEL,YAAY,kCAAkC,CAAC;gBACtEI,QAAQC,KAAK,CAAC,CAAC,wBAAwB,EAAEb,sBAAsB;gBAC/DY,QAAQC,KAAK,CAAC;gBACdD,QAAQC,KAAK,CAAC;gBACdD,QAAQC,KAAK,CAAC;gBACdD,QAAQC,KAAK,CAAC;gBACdD,QAAQC,KAAK,CAAC;gBACdD,QAAQC,KAAK,CAAC;gBACdD,QAAQC,KAAK,CAAC;gBACdD,QAAQC,KAAK,CACX;gBAEF1B,QAAQ2B,IAAI,CAAC;YACf;QACF;IACF;AACF;AAKA,OAAO,SAASC,mBAAmBP,WAAW;IAC5C,IAAI,CAACtB,iBAAiB;QACpB0B,QAAQI,IAAI,CACV,CAAC,eAAe,EAAER,YAAY,2BAA2B,EAAER,qBAAqB,CAAC,CAAC;QAEpFY,QAAQI,IAAI,CACV;IAEJ;AACF;AAKA,OAAO,SAASC;IACd,IAAI,CAAC/B,iBAAiB;QACpB,MAAMgC,SAAS/B,QAAQM,GAAG,CAAC0B,iBAAiB,IAAIhC,QAAQM,GAAG,CAAC2B,cAAc;QAC1E,IAAI,CAACF,QAAQ;YACXN,QAAQC,KAAK,CAAC;YACdD,QAAQC,KAAK,CAAC;YACdD,QAAQC,KAAK,CAAC;YACdD,QAAQC,KAAK,CAAC;YACdD,QAAQC,KAAK,CAAC;YACd,OAAO;QACT;QACA,OAAO;IACT;IACA,OAAO;AACT"}