{"version":3,"sources":["../../../src/cli/validation-helper.ts"],"sourcesContent":["/**\n * CLI Parameter Validation Helper\n * Provides standardized error messages for invalid parameters\n */\n\nimport { HelpFormatter } from './help-formatter.js';\n\nexport class ValidationHelper {\n  /**\n   * Validate enum parameter\n   */\n  static validateEnum(\n    value: string,\n    paramName: string,\n    validOptions: string[],\n    commandPath: string,\n  ): void {\n    if (!validOptions.includes(value)) {\n      console.error(\n        HelpFormatter.formatValidationError(value, paramName, validOptions, commandPath),\n      );\n      process.exit(1);\n    }\n  }\n\n  /**\n   * Validate numeric parameter\n   */\n  static validateNumber(\n    value: string,\n    paramName: string,\n    min?: number,\n    max?: number,\n    commandPath?: string,\n  ): number {\n    const num = parseInt(value, 10);\n\n    if (isNaN(num)) {\n      console.error(\n        HelpFormatter.formatError(\n          `'${value}' is not a valid number for ${paramName}.`,\n          commandPath || 'claude-flow',\n        ),\n      );\n      process.exit(1);\n    }\n\n    if (min !== undefined && num < min) {\n      console.error(\n        HelpFormatter.formatError(\n          `${paramName} must be at least ${min}. Got: ${num}`,\n          commandPath || 'claude-flow',\n        ),\n      );\n      process.exit(1);\n    }\n\n    if (max !== undefined && num > max) {\n      console.error(\n        HelpFormatter.formatError(\n          `${paramName} must be at most ${max}. Got: ${num}`,\n          commandPath || 'claude-flow',\n        ),\n      );\n      process.exit(1);\n    }\n\n    return num;\n  }\n\n  /**\n   * Validate required parameter\n   */\n  static validateRequired(value: any, paramName: string, commandPath?: string): void {\n    if (!value || (typeof value === 'string' && value.trim() === '')) {\n      console.error(\n        HelpFormatter.formatError(\n          `Missing required parameter: ${paramName}`,\n          commandPath || 'claude-flow',\n        ),\n      );\n      process.exit(1);\n    }\n  }\n\n  /**\n   * Validate file path exists\n   */\n  static async validateFilePath(\n    path: string,\n    paramName: string,\n    commandPath?: string,\n  ): Promise<void> {\n    try {\n      const fs = await import('fs/promises');\n      await fs.access(path);\n    } catch (error) {\n      console.error(\n        HelpFormatter.formatError(\n          `File not found for ${paramName}: ${path}`,\n          commandPath || 'claude-flow',\n        ),\n      );\n      process.exit(1);\n    }\n  }\n\n  /**\n   * Validate boolean flag\n   */\n  static validateBoolean(value: string, paramName: string, commandPath?: string): boolean {\n    const lowerValue = value.toLowerCase();\n    if (lowerValue === 'true' || lowerValue === '1' || lowerValue === 'yes') {\n      return true;\n    }\n    if (lowerValue === 'false' || lowerValue === '0' || lowerValue === 'no') {\n      return false;\n    }\n\n    console.error(\n      HelpFormatter.formatError(\n        `'${value}' is not a valid boolean for ${paramName}. Use: true, false, yes, no, 1, or 0.`,\n        commandPath || 'claude-flow',\n      ),\n    );\n    process.exit(1);\n  }\n}\n"],"names":["HelpFormatter","ValidationHelper","validateEnum","value","paramName","validOptions","commandPath","includes","console","error","formatValidationError","process","exit","validateNumber","min","max","num","parseInt","isNaN","formatError","undefined","validateRequired","trim","validateFilePath","path","fs","access","validateBoolean","lowerValue","toLowerCase"],"mappings":"AAKA,SAASA,aAAa,QAAQ,sBAAsB;AAEpD,OAAO,MAAMC;IAIX,OAAOC,aACLC,KAAa,EACbC,SAAiB,EACjBC,YAAsB,EACtBC,WAAmB,EACb;QACN,IAAI,CAACD,aAAaE,QAAQ,CAACJ,QAAQ;YACjCK,QAAQC,KAAK,CACXT,cAAcU,qBAAqB,CAACP,OAAOC,WAAWC,cAAcC;YAEtEK,QAAQC,IAAI,CAAC;QACf;IACF;IAKA,OAAOC,eACLV,KAAa,EACbC,SAAiB,EACjBU,GAAY,EACZC,GAAY,EACZT,WAAoB,EACZ;QACR,MAAMU,MAAMC,SAASd,OAAO;QAE5B,IAAIe,MAAMF,MAAM;YACdR,QAAQC,KAAK,CACXT,cAAcmB,WAAW,CACvB,CAAC,CAAC,EAAEhB,MAAM,4BAA4B,EAAEC,UAAU,CAAC,CAAC,EACpDE,eAAe;YAGnBK,QAAQC,IAAI,CAAC;QACf;QAEA,IAAIE,QAAQM,aAAaJ,MAAMF,KAAK;YAClCN,QAAQC,KAAK,CACXT,cAAcmB,WAAW,CACvB,GAAGf,UAAU,kBAAkB,EAAEU,IAAI,OAAO,EAAEE,KAAK,EACnDV,eAAe;YAGnBK,QAAQC,IAAI,CAAC;QACf;QAEA,IAAIG,QAAQK,aAAaJ,MAAMD,KAAK;YAClCP,QAAQC,KAAK,CACXT,cAAcmB,WAAW,CACvB,GAAGf,UAAU,iBAAiB,EAAEW,IAAI,OAAO,EAAEC,KAAK,EAClDV,eAAe;YAGnBK,QAAQC,IAAI,CAAC;QACf;QAEA,OAAOI;IACT;IAKA,OAAOK,iBAAiBlB,KAAU,EAAEC,SAAiB,EAAEE,WAAoB,EAAQ;QACjF,IAAI,CAACH,SAAU,OAAOA,UAAU,YAAYA,MAAMmB,IAAI,OAAO,IAAK;YAChEd,QAAQC,KAAK,CACXT,cAAcmB,WAAW,CACvB,CAAC,4BAA4B,EAAEf,WAAW,EAC1CE,eAAe;YAGnBK,QAAQC,IAAI,CAAC;QACf;IACF;IAKA,aAAaW,iBACXC,IAAY,EACZpB,SAAiB,EACjBE,WAAoB,EACL;QACf,IAAI;YACF,MAAMmB,KAAK,MAAM,MAAM,CAAC;YACxB,MAAMA,GAAGC,MAAM,CAACF;QAClB,EAAE,OAAOf,OAAO;YACdD,QAAQC,KAAK,CACXT,cAAcmB,WAAW,CACvB,CAAC,mBAAmB,EAAEf,UAAU,EAAE,EAAEoB,MAAM,EAC1ClB,eAAe;YAGnBK,QAAQC,IAAI,CAAC;QACf;IACF;IAKA,OAAOe,gBAAgBxB,KAAa,EAAEC,SAAiB,EAAEE,WAAoB,EAAW;QACtF,MAAMsB,aAAazB,MAAM0B,WAAW;QACpC,IAAID,eAAe,UAAUA,eAAe,OAAOA,eAAe,OAAO;YACvE,OAAO;QACT;QACA,IAAIA,eAAe,WAAWA,eAAe,OAAOA,eAAe,MAAM;YACvE,OAAO;QACT;QAEApB,QAAQC,KAAK,CACXT,cAAcmB,WAAW,CACvB,CAAC,CAAC,EAAEhB,MAAM,6BAA6B,EAAEC,UAAU,qCAAqC,CAAC,EACzFE,eAAe;QAGnBK,QAAQC,IAAI,CAAC;IACf;AACF"}