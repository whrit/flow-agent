{"version":3,"sources":["../../../src/cli/node-compat.js"],"sourcesContent":["/**\n * Node.js compatibility layer for Deno APIs\n * This module provides Node.js equivalents for Deno-specific APIs\n */\n\nimport { readdir, stat, mkdir, readFile, writeFile, unlink, rmdir } from 'fs/promises';\nimport { existsSync } from 'fs';\nimport { fileURLToPath } from 'url';\nimport { dirname, join, normalize } from 'path';\nimport process from 'process';\nimport { spawn } from 'child_process';\n\n// Process arguments (remove first two: node executable and script path)\nexport const args = process.argv.slice(2);\n\n// Current working directory\nexport const cwd = () => process.cwd();\n\n// File system operations\nexport const readDir = async (path) => {\n  const entries = await readdir(path, { withFileTypes: true });\n  return entries.map((entry) => ({\n    name: entry.name,\n    isFile: entry.isFile(),\n    isDirectory: entry.isDirectory(),\n    isSymlink: entry.isSymbolicLink(),\n  }));\n};\n\nexport const statFile = async (path) => {\n  const stats = await stat(path);\n  return {\n    isFile: stats.isFile(),\n    isDirectory: stats.isDirectory(),\n    size: stats.size,\n    mtime: stats.mtime,\n    atime: stats.atime,\n    birthtime: stats.birthtime,\n  };\n};\n\nexport const readTextFile = async (path) => {\n  return await readFile(path, 'utf-8');\n};\n\nexport const writeTextFile = async (path, content) => {\n  await writeFile(path, content, 'utf-8');\n};\n\nexport const remove = async (path) => {\n  const stats = await stat(path);\n  if (stats.isDirectory()) {\n    await rmdir(path, { recursive: true });\n  } else {\n    await unlink(path);\n  }\n};\n\nexport const mkdirSync = (path, options = {}) => {\n  const fs = require('fs');\n  fs.mkdirSync(path, { recursive: options.recursive });\n};\n\nexport const mkdirAsync = async (path, options = {}) => {\n  await mkdir(path, { recursive: options.recursive });\n};\n\n// Process operations\nexport const pid = process.pid;\n\nexport const kill = (pid, signal = 'SIGTERM') => {\n  process.kill(pid, signal);\n};\n\nexport const exit = (code = 0) => {\n  process.exit(code);\n};\n\nexport const execPath = () => process.execPath;\n\n// stdin/stdout/stderr support\nexport const stdin = {\n  read: async (buffer) => {\n    return new Promise((resolve) => {\n      if (process.stdin.isTTY) {\n        process.stdin.setRawMode(true);\n      }\n      process.stdin.resume();\n      process.stdin.once('data', (data) => {\n        const bytes = Math.min(data.length, buffer.length);\n        for (let i = 0; i < bytes; i++) {\n          buffer[i] = data[i];\n        }\n        if (process.stdin.isTTY) {\n          process.stdin.setRawMode(false);\n        }\n        process.stdin.pause();\n        resolve(bytes);\n      });\n    });\n  },\n};\n\nexport const stdout = {\n  write: async (data) => {\n    return new Promise((resolve, reject) => {\n      process.stdout.write(data, (err) => {\n        if (err) reject(err);\n        else resolve(data.length);\n      });\n    });\n  },\n};\n\nexport const stderr = {\n  write: async (data) => {\n    return new Promise((resolve, reject) => {\n      process.stderr.write(data, (err) => {\n        if (err) reject(err);\n        else resolve(data.length);\n      });\n    });\n  },\n};\n\n// Deno.errors compatibility\nexport const errors = {\n  NotFound: class NotFound extends Error {\n    constructor(message) {\n      super(message);\n      this.name = 'NotFound';\n    }\n  },\n  AlreadyExists: class AlreadyExists extends Error {\n    constructor(message) {\n      super(message);\n      this.name = 'AlreadyExists';\n    }\n  },\n  PermissionDenied: class PermissionDenied extends Error {\n    constructor(message) {\n      super(message);\n      this.name = 'PermissionDenied';\n    }\n  },\n};\n\n// import.meta compatibility\nexport const getImportMetaUrl = () => {\n  // This will be replaced by the actual import.meta.url in each file\n  return import.meta.url;\n};\n\nexport const getDirname = (importMetaUrl) => {\n  const __filename = fileURLToPath(importMetaUrl);\n  return dirname(__filename);\n};\n\nexport const getFilename = (importMetaUrl) => {\n  return fileURLToPath(importMetaUrl);\n};\n\n// Check if this is the main module (Node.js equivalent of import.meta.main)\nexport const isMainModule = (importMetaUrl) => {\n  const __filename = fileURLToPath(importMetaUrl);\n  return normalize(process.argv[1]) === normalize(__filename);\n};\n\n// Helper to check file existence\nexport { existsSync };\n\n// Build information (Node.js equivalent of Deno.build)\nexport const build = {\n  os:\n    process.platform === 'win32'\n      ? 'windows'\n      : process.platform === 'darwin'\n        ? 'darwin'\n        : process.platform === 'linux'\n          ? 'linux'\n          : process.platform,\n  arch: process.arch,\n  target: `${process.arch}-${process.platform}`,\n};\n\n// Environment variables support\nexport const env = {\n  get: (key) => process.env[key],\n  set: (key, value) => {\n    process.env[key] = value;\n  },\n  toObject: () => ({ ...process.env }),\n};\n\n// Deno.Command compatibility\nexport class Command {\n  constructor(command, options = {}) {\n    this.command = command;\n    this.options = options;\n  }\n\n  async output() {\n    return new Promise((resolve, reject) => {\n      const child = spawn(this.command, this.options.args || [], {\n        cwd: this.options.cwd,\n        env: this.options.env,\n        stdio: ['pipe', 'pipe', 'pipe'],\n      });\n\n      let stdout = [];\n      let stderr = [];\n\n      child.stdout.on('data', (data) => {\n        stdout.push(data);\n      });\n\n      child.stderr.on('data', (data) => {\n        stderr.push(data);\n      });\n\n      child.on('close', (code) => {\n        resolve({\n          code,\n          success: code === 0,\n          stdout: Buffer.concat(stdout),\n          stderr: Buffer.concat(stderr),\n        });\n      });\n\n      child.on('error', (err) => {\n        reject(err);\n      });\n    });\n  }\n\n  spawn() {\n    const child = spawn(this.command, this.options.args || [], {\n      cwd: this.options.cwd,\n      env: this.options.env,\n      stdio: this.options.stdio || 'inherit',\n    });\n\n    return {\n      status: new Promise((resolve) => {\n        child.on('close', (code) => {\n          resolve({ code, success: code === 0 });\n        });\n      }),\n      stdout: child.stdout,\n      stderr: child.stderr,\n      kill: (signal) => child.kill(signal),\n    };\n  }\n}\n\n// Legacy exports for compatibility - to be removed\n// These functions are now available as direct imports\n\n// NOTE: Deno export has been removed in alpha.79\n// All Deno APIs have been replaced with native Node.js equivalents\n"],"names":["readdir","stat","mkdir","readFile","writeFile","unlink","rmdir","existsSync","fileURLToPath","dirname","normalize","process","spawn","args","argv","slice","cwd","readDir","path","entries","withFileTypes","map","entry","name","isFile","isDirectory","isSymlink","isSymbolicLink","statFile","stats","size","mtime","atime","birthtime","readTextFile","writeTextFile","content","remove","recursive","mkdirSync","options","fs","require","mkdirAsync","pid","kill","signal","exit","code","execPath","stdin","read","buffer","Promise","resolve","isTTY","setRawMode","resume","once","data","bytes","Math","min","length","i","pause","stdout","write","reject","err","stderr","errors","NotFound","Error","message","AlreadyExists","PermissionDenied","getImportMetaUrl","url","getDirname","importMetaUrl","__filename","getFilename","isMainModule","build","os","platform","arch","target","env","get","key","set","value","toObject","Command","command","output","child","stdio","on","push","success","Buffer","concat","status"],"mappings":"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"}